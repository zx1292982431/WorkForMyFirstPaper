(1)A前提引人
<start> O O O O O O O O <eos>
(2)(4)假言推理\\
<start> O O O O O O B-OPR I-OPR I-OPR I-OPR O O <eos>
(3)(6)假言推理\\
<start> O O O O O O B-OPR I-OPR I-OPR I-OPR O O <eos>
(5)(7)析取三段论
<start> O O O O O O B-CON I-CON I-CON I-CON I-CON <eos>
知识点:推理证明
<start> O O O O O O O O <eos>
下面介绍两种构造证明的方法.
<start> O O O O O O O O O O O O O O <eos>
附加前提证明法.
<start> B-CON I-CON I-CON I-CON I-CON I-CON I-CON O <eos>
设推理的形式结构具有如下形式
<start> O O O O O O O O O O O O O O <eos>
其结论也为晅涵式.此时可将结论中的前件也作为推理的前提,使结论为A.即,把推理的形式结构改写为
<start> O O O O O O O I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
两者的等价性证明如下.
<start> O O O B-REL I-REL I-REL O O O O O <eos>
因为(3.10)式与(3.11)式是等值的,因而若能证明(3.11)式是重言式,则(3.10)式也是重言式在证明(3.10)时采用形式结构(3.11),称为附加前提证明法,并将A称为附加前提.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O <eos>
例A在自然推理系统A中构造下面推理的证明.
<start> O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O <eos>
如果小张和小王去看电影,则小李也去看电影;小赵不去看电影或小张去看电影;小王去看电影.所以,当小赵去看电影时,小李也去.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
证明:用附加前提证明法.\\
<start> O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O <eos>
附加前提引人\\
<start> O O O I-CON O O O O <eos>
(1)(2)析取三段论\\
<start> O O O O O O B-CON I-CON I-CON I-CON I-CON O O <eos>
(3)5)合取引人
<start> O O O O O B-OPR I-OPR O O <eos>
(4)(6)假言推理
<start> O O O O O O B-OPR I-OPR I-OPR I-OPR <eos>
如果不用附加前提证明法证明,又应该如何证明呢?请读者自行证明,比较这两种证明方法.
<start> O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
的推理证明中,若将A作为前提能推出矛盾式来,比如得出A,则说明推理正确.其原因如下:
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O <eos>
这种将结论的否定式作为附加前提引人并推出矛盾式的证明方法称作归谬法.数学中经常使用的反证法就是归谬法.
<start> O O O O O O B-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O <eos>
例3.6在自然推理系统A中构造下面推理的证明.
<start> O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O <eos>
如果小张守第一垒并且小李向A队投球,则A队取胜;或者A队末取胜,或者A队成为联赛第一名;A队没有成为联赛的第一名;小张守第一垒.因此,小李没向A队投球.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
证明:用归谬法.\\
<start> O O O O B-CON I-CON I-CON O O O <eos>
结论的否定引人\\
<start> O O O O O O O O O <eos>
知识点:附加前提
<start> O O O O O O O O <eos>
(2)(3)析取三段论
<start> O O O O O O B-CON I-CON I-CON I-CON I-CON <eos>
(7)(8)析取三段论\\
<start> O O O O O O B-OPR I-OPR I-OPR I-CON I-OPR O O <eos>
由于最后一步A,即A,所以推理正确.请读者不用归谬法证明之.
<start> O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O O O <eos>
1.从日常生活或数学的推理中,构造两个满足附加律的推理定律,并将它们符号化.例如，"若2是偶数,则2是偶数或3是奇数”.令A是偶数,A是奇数,则该附加律符号化为
<start> O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O <eos>
从日常生活或数学的推理中,构造两个满足化简律的推理定律,并将它们符号化.例如,“我去过海南岛和新疆,所以我去过海南岛”.令A:我去过海南岛,A:我去过新疆,则该化简律符号化为
<start> O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O <eos>
构造3个满足假言推理定律的推理,并将它们符号化.例如,“如果2是素数,则雪是黑色的;2是素数.所以雪是黑色的".令A是素数,A:雪是黑色的,该假言推理定律符号化为
<start> O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O B-CON O O O O O O O B-CON I-CON O O O B-CON O O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O <eos>
参照前面3题,构造满足拒取式、析取三段论、假言三段论、等价三段论、构造性二难等推理定律的实例各一个,并将它们符号化.
<start> O O O O O O O O O O O B-CON I-CON I-CON O B-OPR I-OPR I-OPR I-OPR I-OPR O B-OPR I-OPR I-OPR I-OPR I-OPR O B-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
分别写出由德摩根律、吸收律所产生的推理定律(每个等值式产生两条推理定律).
<start> O O O O O B-OPR I-OPR I-OPR I-OPR O B-OPR I-OPR I-OPR O O O O B-OPR I-OPR I-OPR I-OPR O O O B-OPR I-OPR I-OPR O O O O B-OPR I-OPR I-OPR I-OPR O O <eos>
判断下面推理是否正确.先将简单命题符号化,再写出前提、结论、推理的形式结构（以蕴涵式的形式给出）和判断过程（至少给出两种判断方法).
<start> O O O O O O O O O O O O O B-CON I-CON I-CON I-CON B-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O <eos>
对下面的每个前提给出两个结论,要求一个是有效的,而另一个不是有效的.
<start> O O O O O O B-CON I-CON O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O <eos>
对下面的每个前提给出两个结论,要求一个是有效的,而另一个不是有效的.
<start> O O O O O O B-CON I-CON O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O <eos>
用3种方法(真值表法、等值演算法、主析取范式法)证明下面推理是正确的.
<start> O O O O O O B-OPR I-OPR I-OPR I-OPR O B-OPR I-OPR I-OPR I-OPR I-OPR O B-CON I-OPR I-OPR I-CON I-CON I-OPR O O O O O O O O O O O O <eos>
用真值表法和主析取范式法证明下面推理不正确.
<start> O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O <eos>
本书主要内容包括数理逻辑、集合论、图论、组合数学和代数结构简介五部分,可适用课程少学时的教学要求。为了帮助读者更好地掌握离散数学的有关概念和方法,本书针对重要的知识点设计了线上参考资源,包括测试题、解答与分析,读者可通过扫描二维码下载。
<start> O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
本书可作为普通高等学校计算机、人工智能等相关专业离散数学课程教材,约需60学时,也可供科技人员阅读参考。
<start> O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
中国版本图书馆CIP数据核字(2018)第139651号
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
责任印制韩刚封面设计于文燕版式设计马敬茹
<start> O O O O O O B-CON O O O O O O B-CON O O O O O O <eos>
本书如有缺页、倒页、脱页等质量问题,请到所购图书销售部门联系调换
<start> O O O O O O O B-CON O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O <eos>
版权所有侵权必究
<start> O O O O O O O O <eos>
注册并登录,进人“我的课程”。
<start> O O O O O O O O O O O B-CON I-CON O O <eos>
输人教材封底防伪标签上的数字课程账号(20位密码,刮开涂层可见),或通过Abook应用扫描封底数字课程账号二维码,完成课程绑定。
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O <eos>
课程绑定后一年为数字课程使用有效期。受硬件限制,部分内容无法在手机端显示,请按提示通过计算机访问学习。
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
本书面向计算机应用人才的培养目标,是教育部高等教育教学改革和实践项目的研究成果。离散数学是研究离散结构及其性质的学科,广泛应用于实际问题的建模与分析,对培养计算思维起着重要的作用,是计算机科学与技术、人工智能等相关专业的核心课程之一。
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON O O O O O O O O O O O O O O O O <eos>
本次修订保持了原教材的框架和素材,仅对文字进行了修改,更正了某些疏漏之处,并增加了少量应用实例。为了帮助读者更好地掌握离散数学的有关概念和方法,本书针对重要的知识点设计了线上参考资源,包括100多道测试题与解答,并对典型的解题方法做了进一步的总结与拓广。读者可通过扫描二维码下载相关的线上资源，以便学习时参考。
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
本书主要内容包括数理逻辑、集合论、图论、组合数学和代数结构简介五部分,适用于A学时的教学要求,教师可根据自己的教学计划对内容进行取舍与调整。与本书配套的有电子教案和《离散数学学习指导与习题解析(第2版)》(见书后习题对照表)。
<start> O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
这个“或”也应为排斥或.和上面一样,可以形式化为A.但是,在这里张晓静不可能既是江西人又是安徽人,即A与A实际上不能同时为真,因而也可以符号化为A.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
定义A设A为两个命题,复合命题“如果A,则A”称为A与A的晅涵式,
<start> O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O <eos>
记作A,并称A为蕴涵式的前件,A为蕴涵式的后件.→称作晅涵联结词.并规定A为假当且仅当A为真A为假.
<start> O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O O O I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O <eos>
A的逻辑关系为A是A的必要条件.
<start> O O B-CON I-CON I-CON I-CON O O O O O O O I-CON I-CON O <eos>
在例A中,“如果A,则A”应符号化为A.由于A与A的真值均为1,所以A的真值也为A
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT O O O O O O O O B-ATT I-ATT O O O <eos>
在自然语言里,特别是在数学中,A是A的必要条件有许多不同的叙述方式.例如,“只要A,就A”“因为A,所以A”“A仅当A”“只有A才A”“除非A才A”“除非A,否则非A”等.以上各种叙述方式表面看来有所不同,但都表示A是A的必要条件,因而都应使用A,符号化为A.
<start> O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O <eos>
作为推理“如果A,则A”的形式化,当A为真、A为真时,A显然为真;当A为真、A为假时,A显然为假.问题是:当A为假时,为什么规定无论A是真是假,A均为真呢?其实这符合人们平时惯用的思维方式,譬如,说“如果太阳从西边出来,我就不姓张.”实际上,不管“我”是否姓张,这句话都是对的,因为太阳不可能从西边出来.也就是说,前件“太阳从西边出来”为假,不论后件“我不姓张”是真是假,这句话都是对的.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
在自然语言中,“如果A,则A”中的前件A与后件A往往具有某种内在联系.而数理逻辑是研究抽象的形式推理,A与A可以无任何内在联系.譬如,“因为A,所以A.”在通常的意义下是不对的,或者认为它是毫无意义的.但在数理逻辑中,设A,这句话可形式化为A.而且因为A和A都为真,故A为真.由此可见,A为真仅表示A与A的取值关系(当A为真时,A必为真;当A为假时,A必为假),而和A与A是否有内在联系无关.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O <eos>
例A将下列命题符号化,并指出它们的真值.
<start> O O O O O B-CON I-CON B-OPR I-OPR I-OPR O O O O O O O B-CON I-CON O <eos>
(7)除非A能被2整除,A才能被4整除.
<start> O O O O O O B-OPR I-ASS I-ASS I-ASS I-ASS O O O I-ASS I-ASS I-ASS I-ASS I-ASS O <eos>
(8)除非A能被2整除,否则A不能被4整除.
<start> O O O O O O I-ASS I-ASS I-ASS I-ASS I-OPR O O O O O I-ASS I-ASS I-ASS I-ASS I-OPR O <eos>
(10)只有A能被4整除,A才能被2整除.其中A是一个给定的正整数.解令A的真值为1.
<start> O O O O I-ASS I-ASS I-ASS I-ASS I-ASS I-ASS I-ASS I-ASS I-ASS I-ASS I-ASS I-ASS I-ASS I-ASS I-ASS I-ASS O O O O O O O O O O O O O O O O O O O O O O O <eos>
A:雪是白色的,A的真值也为1.
<start> O O O O O O O O O O B-ATT I-ATT O O O O <eos>
(1)到(4)的符号化形式分别为A这4个复合命题的真值分别为A.这4个蕴涵式的前件与后件没有什么内在联系.
<start> O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-ATT I-ATT O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O <eos>
仔细分析可知,(5)到(9)叙述的都是A能被2整除是A能被4整除的必要条件,因而都符号化为A.由于A是给定的正整数,因而A与A的真值是客观存在的,但是真是假与A的值有关,现在并不知道.可是A与A是有内在联系的,当A为真(A能被4整除)时,A必为真(A能被2整除),于是A不会出现前件真、后件假的情况,因而A的真值为1.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
知识点:萓漏式:而(10)叙述的是,A能被4整除是A能被2整除的必要条件,因而应符号化为A,它的真值与A的值有关.例如,当A时为真,当A时为假.而通常认为(10)是错的,这再一次提醒我们要正确地理解命题逻辑中的联结词,不能简单地与自然语言中的联结词等同起来.如何正确地表示通常所理解的(10),将在第四章一阶逻辑中介绍.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O B-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON O O <eos>
定义A设A为两个命题,复合命题“A当且仅当A”称作A与A的等价式,记作A称作等价联拈词.规定A为真当且仅当A与A同时为真或同时为假.
<start> O O O O O O O O B-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O <eos>
A的逻辑关系为A与A互为充分必要条件.
<start> O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O <eos>
不难看出,A与A的逻辑关系完全一样,即都表示A与A互为充分必要条件.
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O <eos>
例A将下列命题符号化,并讨论它们的真值.
<start> O O O O O B-CON I-CON B-OPR I-OPR I-OPR O O O O O O O B-CON I-CON O <eos>
(2)A的充要条件是A是无理数.
<start> O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
(3)若两圆A的面积相等,则它们的半径相等;反之亦然.
<start> O O O O O O O O O O O O O O O O O B-ATT O O O O O O O O O <eos>
解令A是无理数,真值为1.
<start> O O O O B-CON I-CON I-CON O B-ATT I-ATT O O O <eos>
A:加拿大位于亚洲,真值为0.
<start> O O O O O O O O O O O O O O O <eos>
(1)可符号化为A,其真值为0.
<start> O O O O O O O O O O O B-ATT I-ATT O O O <eos>
令A,其真值为1.
<start> O O O O B-ATT I-ATT O O O <eos>
(2)可符号化为A,真值为1.
<start> O O O O O O O O O O B-ATT I-ATT O O O <eos>
令A:两圆A面积相等.
<start> O O O O O O O O O O O <eos>
A:两圆A的半径相等.
<start> O O O O O O B-ATT I-ATT O I-ATT O <eos>
(3)可符号化为A.虽然不知道A的真值,但知道当A的面积相等时,A的半径也相等;当A的面积不相等时,A的半径也不相等.即:当A为真时,A也为真;当A为假时,A也为假.故A的真值为1.
<start> O O O O O O O O O O O O O O O O O B-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT O O O <eos>
(4)可符号化为A,其真值可能为真,也可能为假,要由具体情况而定,这里不再详述.
<start> O O O O O O O O O O O B-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
A.其中า为一元联结词,其余的4个是二元联结词.现将它们汇总如表A所示.
<start> O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O <eos>
使用多个联结词可以组成更复杂的复合命题,此外还可以使用圆括号（和）,(和)必须成对出现.求这种复杂的复合命题的真值时,除依据表A外,还要规定联结词的优先顺序.将圆括号计算在内,规定优先顺序为A;对同一优先级,按照从左到右顺序进行.
<start> O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-ATT I-ATT O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
求下列复合命题的真值.
<start> O O O B-CON I-CON I-CON I-CON O B-ATT I-ATT O <eos>
解A的真值分别为A,容易算出A的真值分别为A.
<start> O O O B-ATT I-ATT O O O O O O O O O O O B-ATT I-ATT O O O O O <eos>
上节讨论的是简单命题(原子命题)和复合命题以及它们的符号化形式.简单命题是命题逻辑中最基本的研究单位,其真值是确定的,又称作命题常项或命题常元.命题常项相当于初等数学中的常数,非0即1.初等数学中还有变量,对应地,这里有命题变项.取值1(真)或0(假)的变元称作命题变项或命题变元.可以用命题变项表示真值可以变化的陈述句.命题变项不是命题，命题变项与命题常项的关系如同初等数学中变量与常量的关系.今后也用A等表示命题变项.这样一来,A等既可以表示命题常项,又可以表示命题变项,通常可以由上下文确定.将命题变项用联结词和圆括号按一定的逻辑关系联结起来的符号串称为合式公式.当使用联结词集A时,合式公式定义如下.
<start> O O O O O O B-CON I-CON B-CON I-CON O B-CON I-CON B-CON I-CON O O B-CON I-CON B-CON I-CON O O O O O O O O O O O B-CON I-CON B-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O O O O B-ATT I-ATT O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O I-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O <eos>
定义A(1)单个命题变项是合式公式,并称为原子命题公式.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON I-CON I-CON O <eos>
(2)若A是合式公式,则A是合式公式.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O <eos>
(3)若A是合式公式,则A是合式公式.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O <eos>
(4)有限次地应用A形成的符号串是合式公式.合式公式也称为命题公式,简称为公式.
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O O O O O <eos>
设A为合式公式,A为A中一部分,若A也是合式公式,则称A为A的子公式.
<start> O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O <eos>
定义A给出的合式公式的定义方式称为归纳定义或递归定义方式,下文中还将多次出现这种定义方式.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O <eos>
定义中的A等符号表示任意的合式公式,可以把它们替换成任意的具体公式.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O <eos>
为方便起见,A等公式单独出现时,外层括号可以省去,写成A等.另外,公式中不影响运算次序的括号也可以省去,如公式A可以写成A.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
在公式中也可以出现0和1,此时把它们看作A和A的缩写.同样,当公式中出现A和A时,也常把它们写成0和1.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
由定义可知,A等都是合式公式,而A,A等不是合式公式.
<start> O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
下面给出公式层次的定义.
<start> O O O O O O O O O O O O <eos>
定义A(1)若公式A是单个的命题变项,则称A为0层公式.
<start> O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O <eos>
(2)称A为A层公式,是指下面情况之一:
<start> O O O O O O O O O I-CON O O O O O O O O O O <eos>
(a)A是A层公式;
<start> O O O O O O O O I-CON O <eos>
(b)A,其中A分别为A层和A层公式,且A;
<start> O O O O O O O O O O O O O O O O O I-CON O O O O <eos>
(c)A,其中A的层次及A同(b);
<start> O O O O O O O O O O O O O O O O O O <eos>
(d)A,其中A的层次及A同(b);
<start> O O O O O O O O O O O O O O O O O O <eos>
(e)A,其中A的层次及A同(b).
<start> O O O O O O O O O O O O O O O O O O <eos>
(3)若公式A的层次为A,则称A是A层公式.
<start> O O O O O O O O O O O O O O O O O O O O I-CON O <eos>
例如,A分别为3层和4层公式.
<start> O O O O O O O O O O O O O O O <eos>
在命题公式中,由于有命题变项出现,因而真值是不确定的.用命题常项替换公式中的命题变项称作解释.当将公式中出现的全部命题变项都解释成具体的命题常项之后,公式就成为真值确定的命题.例如,在公式A中,若将A解释成:2是素数,A解释成:3是偶数,A解释成:A是无理数,则公式A解释成:若2是素数或3是偶数,则A是无理数.这是一个真命题.若A的解释不变,A解释为:A是有理数,则A解释成:若2是素数或3是偶数,则A是有理数.这是一个假命题.还可以给出这个公式各种不同的解释,其结果不是得到真命题就是得到假命题.其实,将一个命题变项解释成真命题,相当于指定这个命题变项的真值为1;解释成假命题,相当于指定这个命题变项的真值为0.
<start> O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON B-CON O O O O O B-ATT I-ATT O O O O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON B-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-ATT I-ATT O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O <eos>
定义A设A是出现在公式A中的全部命题变项,给A各指定一个真值,称为对A的一个拭值或解释.若指定的一组值使A为1,则称这组值为A的成真赋值;若使A为0,则称这组值为A的成假赋值.
<start> O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O O O B-OPR I-OPR O <eos>
在本书中,对含A个命题变项的公式A的赋值采用下述记法.
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O B-OPR I-OPR O O O O O O O <eos>
若A中出现的命题变项为A,把赋值A记作A.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O B-OPR I-OPR O O O O O <eos>
若A中出现的命题变项(按字母顺序)为A等,则A的赋值A是指AA,最后字母赋值A.其中A为0或A.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O <eos>
例如,在公式A中,AA都是成真赋值,而A都是成假赋值.在A中,A为成真赋值,A为成假赋值.
<start> O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O B-OPR I-OPR I-OPR I-OPR O O O B-OPR I-OPR I-OPR I-OPR O <eos>
不难看出,含A个命题变项的公式共有A个不同的赋值.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON O <eos>
定义A将命题公式A在所有赋值下取值情况列成表,称作A的真值表.
<start> O O O O B-CON I-CON I-CON I-CON O O O O B-OPR I-OPR O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
构造真值表的具体步骤如下.
<start> O O B-CON I-CON I-CON O O O O O O O O <eos>
(1)找出公式中所含的全体命题变项A(若无下标就按字母顺序排列),列出A个赋值.赋值从A开始,然后按二进制加法每次加1,依次写出每个赋值,直到A为止.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O B-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O O O O O O <eos>
(2)按从低到高的顺序写出公式的各个层次.
<start> O O O O O O O O O O O O O O O O O O O O O <eos>
(3)对应各个赋值计算出各层次的真值,直到最后计算出公式的真值.
<start> O O O O O O O B-OPR I-OPR O O O O O O O B-ATT I-ATT O O O O O O O O O O O B-ATT I-ATT O <eos>
如果两个公式A与A的真值表对所有赋值最后一列都相同,即最后结果都相同,则称这两个真值表相同,而不考虑构造真值表的中间过程.
<start> O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O O O O O <eos>
例A写出下列公式的真值表,并求它们的成真赋值和成假赋值.
<start> O O O O O O O O O B-CON I-CON I-CON O O O O O O B-OPR I-OPR I-OPR I-OPR O B-OPR I-OPR I-OPR I-OPR O <eos>
解公式(1)是含有3个命题变项的3层合式公式.它的真值表如表A所示.
<start> O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O <eos>
当A的真值为A的真值为1时,求下列各命题公式的真值.
<start> O O O B-ATT I-ATT O O O B-ATT I-ATT O O O O O O O O B-CON I-CON O O O B-ATT I-ATT O <eos>
判断下面一段论述是否为真:"A是无理数.并且,如果3是无理数,则A也是无理数.另外,只有6能被2整除,6才能被4整除."
<start> O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O O O O O O O O B-OPR I-OPR O O O O O O O I-OPR O O <eos>
说明在什么情况下,下面一段论述是真的:“说小王不会唱歌或小李不会跳舞是正确的,而说如果小王会唱歌,小李就会跳舞是不正确的."
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
用真值表判断下列公式的类型.
<start> O B-CON I-CON I-CON O O O O O O O O O O <eos>
求下列公式的成真斌值.
<start> O O O O O O B-CON I-CON I-CON I-CON O <eos>
求下列公式的成假濈值.
<start> O O O O O O O I-OPR O O O <eos>
已知公式A是矛盾式,求公式A的成真赋值和成假赋值.
<start> O O O O O O B-CON I-CON I-CON O O O O O O B-OPR I-OPR I-OPR I-OPR O B-OPR I-OPR I-OPR I-OPR O <eos>
已知公式A是重言式,求公式A的成真赋值和成假赋值.
<start> O O O O O O B-CON I-CON I-CON O O O O O O B-OPR I-OPR I-OPR I-OPR O B-OPR I-OPR I-OPR I-OPR O <eos>
已知A是重言式,试判断公式A及A的类型.
<start> O O O O B-CON I-CON I-CON O O O O O O O O O O O O O <eos>
已知A是矛盾式,试判断公式A及A的类型.
<start> O O O O B-CON I-CON I-CON O O O O O O O O O O O O O <eos>
已知A是重言式,A是矛盾式,试判断A及AA的类型.
<start> O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O O O O <eos>
证明:A是重言式当且仅当A与A都是重言式.
<start> O O O O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O <eos>
已知A是矛盾式,能得出A与A都是矛盾式的结论吗?为什么?
<start> O O O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O <eos>
证明:A为矛盾式当且仅当A与A都是矛盾式.
<start> O O O O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O <eos>
已知A是重言式,能得出A与A都是重言式的结论吗?
<start> O O O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O O O O <eos>
设公式A共同含有A个命题变项,A或A中可能有哑元.若A与A有相同的真值表,则说明在所有A个赋值下,A与A的真值都相同,因而等价式A为重言式.
<start> O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O B-OPR I-OPR O O O O O O B-ATT I-ATT O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O <eos>
定义A设A是两个命题公式,若A构成的等价式A为重言式,则称A与A是等值的,记作A.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O O O O O O O O O O <eos>
A与A等值的另一个等价的定义是它们在所有的赋值下的真值都相同.注意:定义中的符号A不是联结符,它是用来说明A与A等值A是重言式)的一种记法,不要将A与混为一谈,同时也要注意它与一般等号A的区别.
<start> O O O O I-ATT O O O O B-ATT I-ATT O O O O O O O O O O B-OPR I-OPR I-OPR O B-ATT I-ATT O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O B-REL I-REL O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O <eos>
下面讨论判断两个公式A与A是否等值的方法,其中最直接的方法是用真值表法判断A是否为重言式.
<start> O O O O O O O O O O O O O O O B-REL I-REL O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O <eos>
例A判断下面两个公式是否等值.
<start> O O O O O O O O O O O O B-REL I-REL O <eos>
解用真值表法判断A是否为重言式.此等价式的真值表如表A所示,从表中可知它是重言式,因而A与A等值,即A.表2.1A的真值表
<start> O O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON <eos>
其实,在用真值表法判断A是否为重言式时,真值表的最后一列(即A的真值表的最后结果)可以省略.若A与A的真值表相同,即它们在所有赋值下的真值都相同,则A,否则AA(表示A与A不等值).
<start> O O O O O B-CON I-CON I-CON I-OPR O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O B-OPR I-OPR O O B-ATT I-ATT O O O O O O O O O O O O O O O O O O O I-OPR O O <eos>
例A判断下列各组公式是否等值.
<start> O O O O O O O O O O O O B-REL I-REL O <eos>
解表A中列出了A和A的真值表.不难看出A与A等值,即
<start> O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-REL I-REL O O <eos>
而A与A的真值表不同,因而它们不等值,即
<start> O O O O O B-CON I-CON I-CON O O O O O O O O B-REL I-REL O O <eos>
表A个公式的真值表
<start> O O O B-CON I-CON O B-ATT I-ATT I-CON <eos>
虽然用真值表法可以判断任何两个命题公式是否等值,但当命题变项较多时,工作量是很大的.证明公式等值的另一个方法是利用已知的等值式通过代换得到新的等值式.例如,用真值表很容易验证A是重言式.如果用任意一个命题公式替换式子中的A,如用A替换A得到A,所得到的新式子也是重言式.事实上,有下述命题:
<start> O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O <eos>
设A是一个命题公式,含有命题变项A,又设A是任意的命题公式.对每一个A,把A在A中的所有出现都替换成A,所得到的新命题公式记作A.那么,如果A是重言式,则A也是重言式.
<start> O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON B-CON O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O <eos>
这是显然的.事实上,对任意的赋值,把在这个赋值下A的真值代人A中的命题变项A,与把这个真值赋值直接代人A是一回事.如果A是重言式,A必为A也必为1.从而,A也是重言式.
<start> O O O O O O O O O O O O O O B-OPR I-OPR O O O O O B-OPR I-OPR O O O B-ATT I-ATT O O O O O B-CON I-CON I-CON I-CON O O O O O O B-ATT I-OPR I-OPR I-OPR O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
根据这个命题和A是重言式,得到A,其中A是任意的命题公式,称这个式子为等值式模式.下面给出16组常用的重要等值式模式,以它们为基础进行演算,可以证明公式等值.
<start> O O O O B-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-REL I-REL O <eos>
以上16组等值式模式共包含了24个重要等值式,等值式模式中的A可以替换成任意的公式,每个等值式模式都可以给出无穷多个同类型的具体的等值式.例如,在蕴涵等值式(2.12)中,取A时,得到等值式
<start> O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON I-CON <eos>
当取A时,得到等值式
<start> O O O O O O O B-CON I-CON I-CON <eos>
这些具体的等值式称为等值式模式的代入实例.
<start> O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON I-CON O O O O O O <eos>
由已知的等值式推演出另外一些等值式的过程称为等值演算.等值演算是布尔代数或逻辑代数的重要组成部分.
<start> O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O O B-OPR I-OPR I-OPR I-OPR O B-OPR I-OPR I-OPR I-OPR O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O <eos>
在等值演算过程中,要使用下述重要规则.
<start> O B-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O <eos>
置换规则设A是含公式A的命题公式,A是用公式A置换A中A的所有出现后得到的命题公式.若A,则A.
<start> O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O <eos>
这也是显然的,因为如果A,那么在任意赋值下A和A的真值相同,把它们代人A得到的结果当然也相同,从而A.
<start> O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O O O O B-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例如,在公式A中,可用A置换其中的A.由蕴涵等值式可知,A,所以,有
<start> O O O O O O O O O O O O O O O O O O O O B-CON I-OPR B-CON I-CON I-CON O O O O O O O O O <eos>
这里使用了置换规则.如果再次使用蕴涵等值式及置换规则,又会得到
<start> O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O B-OPR I-OPR B-OPR I-OPR I-OPR O B-OPR I-OPR I-OPR I-OPR O O O O O <eos>
再使用德摩根律及置换规则,又会得到
<start> O O O B-OPR I-OPR I-OPR I-OPR O B-OPR I-OPR I-CON I-CON O O O O O <eos>
再使用分配律及置换规则,又会得到
<start> O O O B-CON I-CON I-CON O B-CON I-OPR O O O O O O O <eos>
从表A可知公式(1)的成假赋值为011,其余7个赋值都是成真赋值.
<start> O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O O O B-OPR I-OPR O O B-OPR I-OPR I-OPR I-OPR O <eos>
公式(2)是含有两个命题变项的3层合式公式,它的真值表如表A所示.从表A看到,该公式的4个赋值全是成真赋值,即无成假赋值.
<start> O O O O O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O B-OPR I-OPR I-OPR I-OPR O O O B-OPR I-OPR I-OPR I-OPR O <eos>
公式(3)是含有3个命题变项的4层合式公式,它的真值表如表A所示.该公式的8个赋值全是成假赋值,无成真赋值.
<start> O O O O O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O O O O B-OPR I-OPR O O B-OPR I-OPR I-OPR I-OPR O O B-OPR I-OPR I-OPR I-OPR O <eos>
知识点:命题公式赋值
<start> O O O O B-CON I-CON O O B-OPR I-OPR <eos>
测试题A表1.2表A都是按构造真值表的步骤一步一步地构造出来的,这样构造真值表不易出错.如果构造的思路比较清楚,有些层次可以省略.
<start> O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
根据公式在各种赋值下的取值情况,可按下述定义将命题公式进行分类.
<start> O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O I-OPR O <eos>
定义A设A为任一命题公式.
<start> O O O O O O O O O O O O O <eos>
(1)若A在它的所有赋值下取值均为真,则称A是重言式或永真式.
<start> O O O O O O O O O O B-OPR I-OPR O O O O O B-ATT O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O <eos>
(2)若A在它的所有赋值下取值均为假,则称A是矛盾式或永假式.
<start> O O O O O O O O O O B-OPR I-OPR O O I-OPR O O B-ATT O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O <eos>
A是可满足式的等价定义是:A至少存在一个成真赋值.
<start> O O O O I-CON I-CON O B-OPR I-OPR O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O <eos>
重言式一定是可满足式,但反之不真.若公式A是可满足式,且它至少存在一个成假赋值,
<start> B-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O <eos>
(3)若A不是矛盾式,则称A是可满足式.
<start> O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O <eos>
从定义A不难看出以下几点.则称A为非重言式的可满足式.
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O <eos>
真值表可用来判断公式的类型.（1）若真值表最后一列全为1,则公式为重言式.
<start> B-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
(2)若真值表最后一列全为0,则公式为矛盾式.
<start> O O O O B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
(3)若真值表最后一列中至少有一个1,则公式为可满足式.
<start> O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
从表A表A可知,例A中,公式A为非重言式的可满足式,公式(2)A为重言式,而公式(3)A为矛盾式.
<start> O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O <eos>
从以上的讨论可知,真值表不但能准确地给出公式的成真赋值和成假赋值,而且能判断公式的类型.
<start> O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O B-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O <eos>
给定A个命题变项,按合式公式的形成规则,可以形成无穷多个不同的公式.现在要问:这些公式的真值表是否也有无穷个?答案是否定的.A个命题变项共产生A个不同的赋值,而任何公式在每种赋值下只能取两个值:0或1,于是含A个命题变项的公式的真值表只有A种不同的情况,因而必有无穷多个公式具有相同的真值表.
<start> O O O O B-CON I-CON I-CON B-CON O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O O O O O O O O B-OPR I-OPR O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O O O O B-CON I-CON I-CON O O O O O O O O O <eos>
例A下列各公式均含两个命题变项A与A,它们中哪些具有相同的真值表?
<start> O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
解构造过程略去不写,表A给出了这5个公式的真值表.从表中可看出,(1)与(3)具有相同的真值表,(2)与(4)具有相同的真值表.
<start> O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
表A个公式的真值表
<start> O O O B-CON I-CON O B-ATT I-ATT I-CON <eos>
设公式A中含有命题变项A中的一部分,而不是全部.此时仍可以把A看成命题变项A上的公式,并称A中没有在A中出现的命题变项为A的哑元.A的取值与哑元无关.设公式A和A中含有命题变项A,但A或者A可能只含有其中的一部分,而不是全部.在讨论A与A是否有相同的真值表时,可将A和A统一看成含A,A的命题公式,其中某些命题变项是A或A的哑元.
<start> O O O O O O O B-CON I-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例A下列公式中,哪些具有相同的真值表?
<start> O O O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
解本例中给出的4个公式,总共有3个命题变项A和A是公式(1)的哑元,A是公式(2)的哑元,讨论它们是否有相同的真值表时,均按3个命题变项写出它们的真值表.表A列出4个公式的真值表,中间过程省略了.从表中看出,(1)与(3)有相同的真值表,(2)与(4)有相同的真值表.
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O <eos>
表A个公式的真值表
<start> O O O B-CON I-CON O B-ATT I-ATT I-CON <eos>
下列句子中,哪些是命题?在是命题的句子中,哪些是简单命题,哪些是真命题,哪些命题的真值现在还不知道?
<start> O O O O O O O O O B-CON I-CON O O O B-CON I-CON O O O O O O O O B-CON I-CON B-CON I-CON O O O O O B-CON I-CON O O O B-CON I-CON O B-ATT I-ATT O O O O O O O <eos>
(5)你去图书馆圪?
<start> O O O O O B-CON I-CON O O O <eos>
(10)圆的面积等于半径的平方乘以A.
<start> O O O O O O O O O O O O O O O O O O O <eos>
(12)8是偶数的充分必要条件是8能被3整除.
<start> O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O <eos>
将颕中是简单命题的命题符号化.
<start> O O O O B-CON I-CON I-CON I-CON O B-OPR I-CON B-OPR I-OPR I-OPR O <eos>
写出下列各命题的否定式,并将原命题及其否定式都符号化,最后指出各否定式的真值.(1)A是有理数.
<start> O O O O O B-CON I-CON O B-CON I-CON I-CON O O O O B-CON I-CON O O B-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O B-ATT I-ATT O O O O O O B-CON I-CON I-CON O <eos>
将下列命题符号化,并指出各命题的真值.
<start> O O O B-CON I-CON O O O O O O O O B-CON I-CON O B-ATT I-ATT O <eos>
将下列命题符号化,并指出其真值.
<start> O O O B-CON I-CON B-OPR I-OPR I-OPR O O O O O B-ATT I-ATT O <eos>
将下列命题符号化.
<start> O O O B-CON I-CON B-OPR I-OPR I-OPR O <eos>
设A:王冬生于1971年,A:王冬生于1972年,说明命题“王冬生于1971年或1972年”既可以符号化为"A",又可以符号化为“A"的理由.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR O O O O O O O O B-OPR I-OPR I-OPR O O O O O O O O <eos>
将下列命题符号化,并指出各命题的真值.
<start> O O O B-CON I-CON O O O O O O O O B-CON I-CON O B-ATT I-ATT O <eos>
(4)除非A,才有A.
<start> O O O O O O O O O O O <eos>
(5)除非A,否则A.
<start> O O O O O O O O O O O <eos>
设A:俄罗斯位于南半球,A:亚洲人口最多.将下面命题用自然语言表述,并指出各命题的真值.
<start> O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O B-ATT I-ATT O <eos>
设A是3的倍数,A:英国与土耳其相邻.将下面命题用自然语言表述，并指出各命题的真值.
<start> O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O B-ATT I-ATT O <eos>
将下夗命题符号化,并给出各命题的真值.
<start> O O O B-CON I-CON B-OPR I-OPR I-OPR O O O O O B-CON I-CON O B-ATT I-ATT O <eos>
（3）若地球上没有树木,则人类不能生存.
<start> O O O O O O O O O O O O O O O O O O O O <eos>
将下列命题符号化,并给出各命题的真值.
<start> O O O B-CON I-CON B-OPR I-OPR I-OPR O O O O O B-CON I-CON O B-ATT I-ATT O <eos>
(2)A的充要条件是A.
<start> O O O O O O O O O O O O <eos>
(3)A与A互为充要条件.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
将下列命题符号化,并讨论各命题的真值.
<start> O O O B-CON I-CON B-OPR I-OPR I-OPR O O O O O B-CON I-CON O B-ATT I-ATT O <eos>
将下列命题符号化.
<start> O O O B-CON I-CON B-OPR I-OPR I-OPR O <eos>
(7)他一面吃饭,一面听音乐.
<start> O O O O O O O O O O O O O O O <eos>
(10)除非天下大雨,否则他不乘班车上班.
<start> O O O O O O O O O O O O O O O O O O O O O <eos>
求下列复合命题的真值.
<start> O O O B-CON I-CON I-CON I-CON O B-ATT I-ATT O <eos>
解为了清晰无误,利用交换律使每个简单析取式和简单合取式中命题变项都按字典顺序出现.
<start> O O O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O O <eos>
(1)先求合取范式.
<start> O O O O O B-CON I-CON I-CON I-CON O <eos>
(A对A的分配律)
<start> O O O O O B-CON I-CON I-CON O <eos>
这是含3个简单析取式的合取范式.
<start> O O O O O B-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O <eos>
(2)求析取范式.
<start> O O O O B-CON I-CON I-CON I-CON O <eos>
求析取范式与求合取范式的前两步是相同的,只是在使用分配律时有所不同,因而前4步与(1)相同,接着使用A对A的分配律.
<start> O B-CON I-CON B-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
最后两步的结果都是析取范式.一般地,命题公式的析取范式是不唯一的.同样,合取范式也是不唯一的.为了使命题公式的范式唯一,进一步将简单合取式和简单析取式规范化,定义如下.
<start> O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON B-CON I-CON O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON O O O O O O O B-CON I-CON B-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O <eos>
定义A设有A个命题变项,若简单合取式(简单析取式)中每个命题变项和它的否定式恰好出现一个且仅出现一次,而且命题变项或它的否定式按下标从小到大或按字典顺序排列,称这样的简单合取式(简单析取式)为极小项(极大项).
<start> O O O O O O O B-CON I-CON I-CON B-CON O O B-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O B-CON I-CON B-CON O B-CON I-CON B-CON O O <eos>
由于每个命题变项在极小项中以原形或否定形式出现且仅出现一次,因而A个命题变项共可产生A个不同的极小项.每个极小项都有且仅有一个成真赋值.若极小项的成真.赋值所对应的二进制数等于十进制数A,就将这个极小项记作A.类似地,A个命题变项共可产生A个不同的极大项,每个极大项只有一个成假赋值,将其对应的十进制数A做极大项的下标,记作A.
<start> O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O B-OPR I-OPR O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON B-CON O O O O O O O O O B-CON I-CON <eos>
表A和表A分别列出含A与A的全部极小项和极大项.表A含A的极小项与极大项
<start> O O O O O O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON <eos>
表A含A的极小项与极大项
<start> O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON <eos>
根据表A和表A可以直接验证极小项与极大项之间有下述关系.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O O O <eos>
定理A设A与A是含命题变项A的极小项和极大项,则
<start> O O O O O O O O O B-CON I-CON I-CON B-CON O O B-CON I-CON I-CON O B-CON I-CON B-CON O O <eos>
定义A所有简单合取式(简单析取式)都是极小项(极大项)的析取范式(合取范式)称为主析取范式(主合取范式).
<start> O O O O O B-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O O B-CON I-CON B-CON O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O B-CON B-CON I-CON I-CON I-CON O B-CON B-CON I-CON I-CON I-CON O O <eos>
下面讨论如何求出与给定公式等值的主析取范式和主合取范式.首先证明它的存在性和唯一性,再给出它的求法.
<start> O O O O O O O O O O O O O O O O B-CON B-CON I-CON B-CON I-CON O B-CON B-CON I-CON B-CON I-CON O O O O O O O O O O O B-ATT I-ATT I-ATT O O O O O O O O O <eos>
定理A任何命题公式都存在与之等值的主析取范式和主合取范式,并且是唯一的.
<start> O O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON I-CON O B-CON I-OPR I-OPR I-CON I-CON O O O O O O O O <eos>
证这里只证主析取范式的存在性和唯一性.
<start> O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O B-ATT I-ATT I-ATT O <eos>
首先证明存在性.设A是任一含A个命题变项的公式.由定理A可知,存在与A等值的析取范式A,即A.若A的某个简单合取式A中既不含命题变项A,也不含它的否定式A,则将A展开成如下等值的形式:
<start> O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON B-CON O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O <eos>
继续这个过程,直到所有的简单合取式都含有所有的命题变项或它们的否定式.若在演算过程中出现重复出现的命题变项以及极小项和矛盾式,就应“消去”:如用A代替A代替A代替矛盾式等.最后就将A化成与之等值的主析取范式A.
<start> O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O <eos>
下面再证明唯一性.假设命题公式A等值于两个不同的主析取范式A和A,那么必有A.由于A和A是不同的主析取范式,不妨设极小项A只出现在A中而不出现在A中.于是,下标A的二进制表示为A的成真赋值,而为A的成假赋值,这与A矛盾.
<start> O O O O O B-ATT I-ATT I-ATT O O O B-CON I-CON I-CON I-CON O B-REL I-REL O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O <eos>
主合取范式的存在唯一性可类似证明.
<start> B-CON B-CON I-CON I-CON I-CON O O O B-ATT I-ATT I-ATT O O O O O O <eos>
在证明定理A的过程中,已经给出了求主析取范式的步骤.为了醒目和便于记忆,求出某公式的主析取范式(主合取范式)后,将极小项(极大项)都用名称写出,并且按极小项(极大项)名称的下标由小到大顺序排列.
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O B-CON B-CON I-CON I-CON I-CON O O O O B-CON I-CON B-CON O B-CON I-CON B-CON O O O O O O O O O O O B-CON I-CON B-CON O B-CON I-CON B-CON O O O O O O O O O O O O O O O <eos>
例A求例A中公式的主析取范式和主合取范式.
<start> O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O <eos>
解(1)求主析取范式.
<start> O O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
在例A中已给出公式的析取范式,即
<start> O O O O O O O O O O B-CON I-CON I-CON I-CON O O <eos>
在此析取范式中,第一项A是极小项A,另外两个简单合取式A都不是极小项.下面先分别求出它们派生的极小项.注意,因为公式含有3个命题变项,所以极小项均由3个文字组成.
<start> O O B-CON I-CON I-CON I-CON O O O O B-CON O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON B-CON O O O B-CON I-CON B-CON O O O O O O O O O <eos>
(2)求主合取范式.
<start> O O O O B-CON B-CON I-CON I-CON I-CON O <eos>
由例A已求出公式的合取范式,
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
其中A已是极大项A.利用矛盾律和同一律将另两个简单析取式化成极大项.
<start> O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O <eos>
例A求命题公式A的主析取范式与主合取范式.
<start> O O O B-CON I-CON O O O O B-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O <eos>
解本公式中含两个命题变项,所以极小项和极大项均含两个文字.
<start> O O O O O O O O B-CON I-CON I-CON B-CON O O O B-CON I-CON B-CON O B-CON I-CON B-CON O O O O O O O <eos>
由例A与A可知,在求给定公式的主析取范式(主合取范式)时,一定要根据公式中命题变项的个数决定极小项(极大项)中文字的个数.
<start> O O O O O O O O O O O O O O O B-CON B-OPR I-OPR I-CON I-CON O B-CON B-OPR I-OPR I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON B-CON O O O O O B-CON I-CON B-CON O B-CON I-CON B-CON O O O O O O O O <eos>
下面讨论主析取范式的用途(主合取范式可类似讨论).主析取范式像真值表一样,可以表达公式以及公式之间关系的一切信息.
<start> O O O O B-CON I-CON I-CON B-CON I-CON O O O O B-CON B-CON I-CON B-CON I-CON O O O O O O O B-CON I-CON I-CON B-CON I-CON O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O <eos>
求公式的成真与成假赋值.
<start> O O O O B-OPR I-OPR O B-CON I-CON I-OPR I-OPR O <eos>
若公式A中含A个命题变项,A的主析取范式含A个极小项,则A有A个成真赋值,它们是所含极小项下标的二进制表示,其余A个赋值都是成假赋值.例如，例A中,A.这里有3个命题变项,将主析取范式中各极小项的下标A,7写成长为3的二进制数,分别为A.这4个赋值即为该公式的成真赋值.而主析取范式中末出现的极小项A的下标的二进制表示A为该公式的成假赋值.又如例A中,A,含两个命题变项,极小项的下标的二进制表示A为该公式的成真赋值,而10是它的成假赋值.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O B-OPR I-OPR B-OPR I-OPR O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O B-OPR I-OPR O O O O B-OPR I-OPR O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O <eos>
判断公式的类型.
<start> O O O O O O O O <eos>
设公式A中含A个命题变项,容易看出:
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O <eos>
(1)A为重言式当且仅当A的主析取范式含全部A个极小项.
<start> O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON O <eos>
(2)A为矛盾式当且仅当A的主析取范式不含任何极小项.此时,记A的主析取范式为0.
<start> O O O O O B-OPR I-OPR I-OPR O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O <eos>
(3)A为可满足式当且仅当A的主析取范式中至少含一个极小项.例A用公式的主析取范式判断下述公式的类型.\\
<start> O O O O O B-OPR I-OPR I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O <eos>
解注意,(1),(2)中公式含两个命题变项,极小项含两个文字,而(3)中公式含3个命题变项,因而极小项中应含3个文字.\\
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O B-CON I-CON B-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O O O B-CON I-CON B-CON O O O O O O O O O O <eos>
这说明该公式是矛盾式.\\
<start> O O O O O O O B-CON I-CON I-CON O O O <eos>
由于主析取范式含两个命题变项的全部A个极小项,故该公式为重言式.
<start> O O B-CON B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O <eos>
其实,这个演算在第一步就已知该公式等值于1,因而它为重言式.如果要写出它的主析取范式,由1可直接写出全部极小项:
<start> O O O O O O O O O O O O O O O O O B-REL I-REL O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O <eos>
该公式是可满足的,但不是重言式,因为它的主析取范式没含全部8个极小项.
<start> O O O O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O <eos>
判断两个命题公式是否等值.
<start> O O O O B-CON I-CON O O O O B-REL I-REL O <eos>
设公式A共含有A个命题变项,按A个命题变项求出A与A的主析取范式A与A.若A,则A,否则A.
<start> O O O O O O O O O B-CON I-CON I-CON B-CON O O O O B-CON I-CON I-CON B-CON O O O O O O B-CON B-OPR I-OPR I-CON I-CON O O O O O O O O O O O O O O <eos>
例A判断下面两组公式是否等值.
<start> O O O O O O O O O O O O B-REL I-REL O <eos>
由定义A可知,只要不出现情况(3),推理就是正确的,因而判断推理是否正确,就是判断是否会出现情况(3).
<start> O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O O O O O O <eos>
这里的推理是指形式推理.由上面的讨论可知,推理正确并不能保证结论A一定成立,因为前提可能就不成立.这与人们通常对推理的理解是不同的,通常认为只有在正确的前提下推出正确的结论才是正确的推理.而在这里,如果前提不正确,不论结论正确与否,都说推理正确.因而,只有在推理正确并且前提成立的条件下,结论才一定成立.
<start> O O O B-OPR I-OPR O O O O B-OPR I-OPR O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O O O O O <eos>
例A判断下列推理是否正确.
<start> O O O O O O O O O O O O O <eos>
解写出前提的合取式与结论的真值表,看是否出现前提合取式为真,而结论为假的情况.
<start> O O O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O <eos>
（1）由表A,没有出现前提合取式为真,结论为假的情况,因而推理正确,即A.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O <eos>
(2)由表A,当赋值为10时,前提的合取式为真,而结论为假,因而推理不正确,即A
<start> O O O O O O O O B-OPR I-OPR O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O <eos>
表A前提合取式与结论的真值表
<start> O O O O B-CON I-CON I-CON O O O O B-ATT I-ATT I-CON <eos>
对于例A中这样简单的推理,不难通过直接观察判断推理是否正确.如在(1)中,当A为假时,无论A是真还是假,A均为假,因而不会出现前提合取式为真,结论为假的情况,故推理正确.而在(2)中,当A为假,A为真时,出现了前提合取式为真,结论为假的情况,因而推理不正确.
<start> O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O <eos>
下面给出推理形式结构另一种等价的形式.为此,首先证明下面定理.
<start> O O O O O O O O O O O O O B-REL I-REL O O O O O O O O O O O O O O O O <eos>
定理3.1由命题公式A推出A的推理正确当且仅当
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O <eos>
证必要性.若由A推出A的推理正确,则对于A和A中所含命题变项的任意一组赋值,不会出现A为真且A为假的情况,因而在任何赋值下,蕴涵式A均为真,故它为重言式.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON O <eos>
充分性.若蕴涵式A为重言式,则对于任何赋值此蕴涵式均为真,因而不会出现前件为真、后件为假的情况,即在任何赋值下,或者A为假,或者AA和A同时为真,故由A推出A的推理正确.由定理3.1,由前提A推出A的推理的形式结构
<start> O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O B-OPR I-OPR O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON <eos>
其中推理前提的合取式成为蕴涵式的前件,结论成为蕴涵式的后件.推理正确
<start> O O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON O O O O O O O O <eos>
其中A表示蕴涵式为重言式.
<start> O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O <eos>
今后把推理的形式结构写成
<start> O O O O O O O O O O O O <eos>
并且也把(3.2)式称作推理的形式结构,通过判断(3.2)式是否为重言式来确定推理是否正确.根据前两章的讨论,判断(3.2)式是否为重言式有下面3种方法.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O <eos>
现在可以将例A中的两个推理写成(3.5)的形式:
<start> O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O <eos>
推理的形式结构:A
<start> O O O O O O O O O <eos>
推理的形式结构:A
<start> O O O O O O O O O <eos>
例A判断下面推理是否正确.
<start> O O O O O O O O O O O O O <eos>
解解上述类型的推理问题,首先应将简单命题符号化.然后分别写出前提、结论、推理的形式结构,接着进行判断.
<start> O O O O O O O O O O O O O O O O B-CON I-CON B-CON I-CON B-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
推理的形式结构:A
<start> O O O O O O O O O <eos>
由例A已知此推理正确,即A.
<start> O O O O O O B-CON I-CON O O O O O O <eos>
推理的形式结构:A
<start> O O O O O O O O O <eos>
当然可用真值表法、等值演算、主析取范式等方法来判断(3.7)式是否为重言式.但在此推理中,容易看出,01是(3.7)式的成假赋值,所以此推理不正确.
<start> O O O O B-OPR I-OPR I-OPR I-OPR O B-OPR I-OPR I-OPR I-OPR O B-CON B-OPR I-OPR B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O O O O <eos>
推理的形式结构:A
<start> O O O O O O O O O <eos>
用等值演算法来判断(3.8)式是否为重言式.
<start> O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
得证(3.8)式为重言式,所以推理正确.
<start> O O O O O O O O O B-CON I-CON I-CON O O O O O O O O <eos>
推理的形式结构:A
<start> O O O O O O O O O <eos>
用主析取范式法判断(3.9)式是否为重言式.
<start> O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
可见(3.9)式不是重言式(主析取范式中缺两个极小项A和A),所以推理不正确.
<start> O O O O O O O O O O B-CON I-CON I-CON O B-CON B-CON I-CON B-CON I-CON O O O O B-CON I-CON I-CON O O O O O O O O O O O O O <eos>
在判断推理正确性的等式演算中,有一些重言蕴涵式要经常使用,把它们称为推理定律.下面给出9条推理定律.
<start> O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O <eos>
A破坏性二难其中A等表示任意的命题公式.
<start> O O O O B-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
把具体的命题公式代人某条推理定律后就得到这条推理定律的一个代人实例.例如,A等都是附加定律的代人实例.推理定律的每一个代人实例都是重言式,可以使用这些推理定律证明推理正确.在下一节将看到,由这9条推理定律产生9条推理规则,构成一个推理系统中的推理规则集.
<start> O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON I-CON I-CON <eos>
除上述9条推理定律外,A节给出的24个等值式中的每一个都能产生出两条推理定律:从左到右和从右到左.例如,双重否定律A产生两条推理定律A和A.
<start> O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O O O <eos>
本节对由前提A推出A的正确推理的证明给出严格的形式描述.证明是一个描述推理过程的命题公式序列,其中的每个公式或者是已知前提,或者是由前面的公式应用推理规则得到的结论(中间结论或推理中的结论).定义A一个形式系统A由下面4个部分组成.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON B-CON I-CON B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O I-CON O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O <eos>
(1)非空的字母表A.
<start> O O O O O O O O O O O <eos>
(2)A中符号构造的合式公式集A.
<start> O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O <eos>
(3)A中一些特殊的公式组成的公理集A.
<start> O O O O O O O O O O O O O O O B-CON I-CON I-CON O O <eos>
(4)推理规则集A.
<start> O O O B-CON O B-CON I-CON I-CON O O <eos>
将A记为四元组A.其中A是A的形式语言系统,而A为A的形式演算系统.
<start> O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
形式系统一般分为两类.一类是自然推理系统,它的特点是从任意给定的前提出发,应用系统中的推理规则进行推理演算,最后得到的命题公式是推理的结论(它是有效的结论,可能是重言式,也可能不是重言式).另一类是公理推理系统,它只能从若干条给定的公理出发,应用系统中的推理规则进行推理演算,得到的结论是系统中的重言式,称为系统中的定理.本书只介绍自然推理系统A,它的定义中无公理部分,因而只有3个部分.
<start> O O I-CON I-CON O O O O O O O O O O B-CON I-CON B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O <eos>
定义A自然推理系统A定义如下.
<start> O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O <eos>
(1)命题变项符号:A\\
<start> O O O B-CON I-CON I-CON I-CON O O O O O O <eos>
(1)前提引入规则:在证明的任何步骤都可以引人前提.\\
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
(2)结论引入规则:在证明的任何步骤所得到的结论都可以作为后继证明的前提.\\
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O O O O O <eos>
(3)置换规则:在证明的任何步骤,命题公式中的子公式都可以用等值的公式置换,得到公式序列中又一个公式.
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
由9条推理定律和结论引人规则可以导出以下各条推理规则.
<start> O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
（4）假言推理规则(或分离规则):若证明的公式序列中已出现过A和A,则由假言推理定律A可知,A是A和A的有效结论.由结论引人规则可知,可将A引人到命题序列中来.用图式表示为如下形式.
<start> O O O B-OPR I-OPR I-OPR I-OPR I-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O I-CON O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O O O O O <eos>
以下各条推理规则直接以图式给出,不再加以说明.
<start> O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON O O O O O O O O O O <eos>
因为这种路径具有限制条件,不能直接使用前面的计数公式.可以采用下面的办法.将所有从A点到A点的非降路径分成两类:穿过对角线的与不穿过对角线的.只要求出了穿过对角线的路径条数A,那么从总数中减去A就得到所求的路径条数.下面要解决的是如何确定A的问题,使用的技巧仍旧是一一对应.
<start> O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O <eos>
如图A所示,任何一条从A点到A点穿过对角线的路径一定要接触直线A,有可能接触多次,但最后会离开这条直线上的一点A,沿直线A下方的一条非降路径到达A点.把这条路径的前半段,即A点到A点的部分,以直线A为轴进行翻转,生成一段新的从A点到A点的部分非降路径(图中虚线表示的路径).用这段新路径替换原来路径的前半段,就得到一条从A点到A点的非降路径.容易看出这种路径与从A点到A点中间穿过对角线的非降路径之间存在一一对应.因此从A点到A点穿过对角线的非降路径数A.从A点到A点的非降路径总数为A条,从而得到不同的输出序列个数是
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
这个问题也可以使用生成函数的方法求解,有关的说明将在下一章给出.
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O <eos>
二项式定理可以推广为多项式定理.
<start> B-CON I-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
定理A设A为正整数,A为实数,A.那么有
<start> O O O O O O B-CON I-CON I-CON O O O B-CON I-CON O O O O O O <eos>
这里A,称为多项式系数.
<start> O O O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
证展开式中的项A是如下构成的:在A个因式中选A个因式贡献A,从剩下的A个因式选A个因式贡献A,从剩下的A个因式中选A个因式贡献A.根据乘法法则,这种项的个数是
<start> O O O O O O B-CON O O O O O O O O O O O O I-CON O O O O B-CON I-CON I-OPR I-OPR O O O O O O O O B-CON I-CON O O O B-CON I-CON B-OPR I-OPR O O O O O O O O O I-CON O O O O B-CON I-CON B-OPR I-OPR O O O O B-CON I-CON I-CON I-CON O O O B-CON O O O O <eos>
不难看出二项式定理是多项式定理的特殊情况.当A时有
<start> O O O O B-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O <eos>
因此,多项式定理就变成了二项式定理.
<start> O O O B-CON I-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
多项式定理有下面的推论.
<start> B-CON I-CON I-CON I-CON I-CON O O O O O O O <eos>
推论1在多项式定理的展开式中,右边不同的项数为不定方程A的非负整数解的个数A.
<start> O O O O B-CON I-CON I-CON O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O <eos>
证根据定理A,项A中的指数和方程A的非负整数解之间存在一一对应.
<start> O O O O O O O B-CON O O O B-CON I-CON O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O <eos>
推论A,其中求和是对方程A的所有非负整数解求和.
<start> O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O B-OPR O <eos>
证在多项式公式中令A.
<start> O O B-CON I-CON I-CON I-CON I-CON O O O O <eos>
多项式系数A经常在一些组合问题中出现,回顾A节,它恰好是多重集AA的全排列数,同时它也对应了A个不同的球放到A个不同的盒子里,使得第1个盒子含有A个球,第2个盒子含有A个球,A第A个盒子含有A个球的方法数.先从A个球中选出A个球放人第1个盒子,然后从剩下的A个球中选出A个球放人第2个盒子,A最后从A个球中选A个球放人第A个盒子.根据乘法法则,放球的方法数恰好为
<start> B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
从集合A中选3个数使得其和是4的倍数,有多少种方法?
<start> O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O O O O <eos>
以凸A边形顶点为顶点,以内部对角线为边的三角形有多少个?3.有多少个十进制三位数的数字恰有一个8和一个9?
<start> O B-CON I-CON I-CON I-CON B-CON I-CON O B-CON I-CON O O O O O O O O B-CON O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
从集合A中选取不同数字构成七位数,如果5和6不相邻,则有多少种方法?
<start> O B-CON I-CON O O O O O O O O O O O O O O O O O O O O B-REL I-REL O O O O O O O O O <eos>
有A个不同的整数,从中取出两组数来,要求第一组数里的最小数大于第二组的最大数,问有多少种庄.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O <eos>
设A是A元集合,其中A是正整数,求A.
<start> O O O O O B-CON I-CON O O O O O O O O O O O O <eos>
在1到1000之间（包括1和1000在内）有多少个整数的各位数字之和小于7?
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
有多少个大于5400,不含2和7,且各位数字不重复的整数?
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
设有A种明信片,每种张数不限.现在要分别寄给A个朋友,A.若给每个朋友寄1张明信片,有多少种寄法?若给每个朋友寄1张明信片,但每个人得到的明信片都不相同,则有多少种寄法?若给每个朋友寄2张不同的明信片(不同的人可以得到相同的明信片),则有多少种寄法?
<start> O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O <eos>
设有A类明信片,且第A类明信片的张数是A.把它们全部送给A个朋友,有多少种方法?
<start> O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
由集合A中的全体元素构成字母序列,求
<start> O B-CON I-CON O O O O O B-CON I-CON O O O O B-CON I-CON O O <eos>
（1）没有两个A相邻的序列个数;
<start> O O O O O O O O B-REL I-REL O B-CON I-CON O O O <eos>
(2)A中的任何两个字母都不相邻的序列个数.
<start> O O O O O O O O O O O O O O O O O B-CON I-CON O O O <eos>
(1)证明:若A,则这样的有序三元组恰为A个;
<start> O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O <eos>
(2)将所有的有序三元组按照A分成A三组,证明
<start> O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O <eos>
(3)由（1)和(2)证明怛等式
<start> O O O O O O O O O O O O O O O O <eos>
假设计算机系统的每个用户有一个A个字符的登录密码,每个字符是大写字母或者数字,且每个密码必须至少包含一个数字.问有多少个可能的登录密码.
<start> O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
用数学归纳法证明二项式定理.
<start> O O O O O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
A等于什么?你能用二项式定理马上给出这个结果吗?
<start> O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O <eos>
给定正整数A,对于哪个A值,A的值达到最大?证明你的结论.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
证明组合恒等式.
<start> O O O O B-CON I-CON I-CON O <eos>
从A中取A个数做排列,若不允许相邻位置的数相同,问有多少种排法.
<start> O O O O O O O O O O O O O O O B-ATT I-ATT O O O O O O O O O O O O O O O <eos>
给出多重集A的所有的3排列与3组合.
<start> O O B-CON I-CON I-CON O O O O O O O O O O O O O <eos>
有3只蓝球、2只红球、2只黄球排成一列,若黄球不相邻,则有多少种方法?
<start> O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O B-REL I-REL O O O O O O O O O <eos>
A,求A的各种大小的子集总数.
<start> O O O O O O O O O O B-CON I-CON O O O <eos>
这一章介绍几种重要的组合计数方法.首先讨论递推方程的求解方法,然后讨论生成函数的定义及性质,并进一步介绍它们在组合计数中的应用.
<start> O O O O O O O O O O B-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O <eos>
定义A设序列A,简记为A,一个把A与某些个A联系起来的等式称作关于序列A的妤推方程.
<start> O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O B-CON I-CON I-CON I-CON O <eos>
请看下面的例子.
<start> O O O O O O O O <eos>
图A中有A三个柱子,在A柱上放着A个圆盘(图中的A),其中小圆盘放在大圆盘的上边.从A柱将这些圆盘移到A柱上去.如果把一个圆盘从一个柱子移到另一个柱子称作一次移动,在移动和放置时允许使用A柱,但不允许大圆盘放到小圆盘的上面.问:把所有的圆盘从A移到A总计需要多少次移动?
<start> B-CON O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
下面给出一种递归算法,其中A表示从A柱到A柱用Hanoi算法移动A只盘子的过程,A表示从A柱移动1只盘子到A柱的过程.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
用图A中的二叉树产生一个二元前缀码.
<start> O O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
用哪类二叉树能产生等长的前缀码?
<start> O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O <eos>
用Huffman算法求传输它们的最佳前缀码.要求画出最优树,指出每个字母对应的编码,并指出传输A个按上述频率出现的字母需要多少个二进制数字.
<start> O B-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
分别用中序行遍法、前序行遍法和后序行遍法周游图A中的二叉有序树,给出周游二叉树的顶点顺序.
<start> O O O O B-CON I-CON I-CON I-CON O B-OPR I-OPR I-OPR I-OPR I-OPR O B-CON I-CON I-CON I-CON I-CON B-CON I-CON B-CON O O O B-CON I-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON I-CON O B-CON I-CON O O O <eos>
图10.21中的二叉树表达一个算式.
<start> B-CON O O O O O O O B-CON I-CON B-CON O O O O O O O <eos>
图A（1）用中序行遍法还原算式.
<start> O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON O <eos>
（3）用后序行遍法写出该算式的逆波兰符号法表示式.
<start> O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O <eos>
用二叉树表示下述算式,写出算式的波兰符号法和逆波兰符号法表示式.
<start> O B-CON I-CON B-CON O O O O O O O O O O O O B-OPR I-OPR B-OPR I-OPR I-OPR O B-OPR B-OPR I-OPR I-OPR I-OPR I-OPR O O O O <eos>
定义11.1图(无向图或有向图)中恰好通过所有边一次且经过所有顶点的通路称为欧拉通路.图中恰好通过所有边一次且经过所有顶点的回路称为欧拉回路.具有欧拉回路的图称为欧拉图.具有欧拉通路而无欧拉回路的图称为半欧拉图.
<start> O O O O O O B-CON O B-CON I-CON B-CON O B-CON I-CON B-CON O O O O O O O O O O O O O O O O B-CON I-CON O B-CON I-CON O O B-CON I-CON I-CON I-CON O B-CON O O O O O O O O O O O O O O O B-CON I-CON O B-CON I-CON O O B-CON I-CON B-CON I-CON O O O B-CON I-CON B-CON I-CON O O O O B-CON I-CON B-CON O O O B-CON I-CON I-CON I-CON O O B-CON I-CON B-CON I-CON O O O O B-CON B-CON I-CON B-CON O <eos>
规定平凡图是欧拉图.
<start> O O B-CON I-CON B-CON O B-CON I-CON I-CON O <eos>
在图A中,A为(a)中的一条欧拉回路,A为(b)中的一条欧拉通路,AA为A中的一条欧拉回路.
<start> O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
关于欧拉图和半欧拉图有下述充分必要条件,证明略去.
<start> O O B-CON I-CON B-CON O B-CON B-CON I-CON B-CON O O O O O O O O O O O O O O O <eos>
定理A(1)无向图A是欧拉图当且仅当A是连通的且没有奇度顶点.
<start> O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O O O O O O O B-CON B-ATT I-CON I-CON O <eos>
(2)无向图A是半欧拉图当且仅当A是连通的且恰有两个奇度顶点.
<start> O O O B-CON I-CON B-CON O O B-CON B-CON I-CON B-CON O O O O O O O O O O O O O O B-CON B-ATT I-CON I-CON O <eos>
(3)有向图A是欧拉图当且仅当A是强连通的且每个顶点的人度等于出度.
<start> O O O B-CON I-CON B-CON O O B-CON I-CON B-CON O O O O O O B-ATT I-ATT I-ATT O O O O B-CON I-CON O B-ATT I-ATT O O B-ATT I-ATT O <eos>
(4)有向图A是半欧拉图当且仅当A是单向连通的且恰有两个奇度顶点,其中一个顶点的人度比出度大1,另一个顶点出度比人度大1,而其余顶点的人度等于出度.
<start> O O O B-CON I-CON B-CON O O B-CON B-CON I-CON B-CON O O O O O O B-ATT I-ATT I-ATT I-ATT O O O O O O O B-ATT I-CON I-CON O O O O O O O O O B-ATT O B-ATT I-ATT O O O O O O O O B-ATT I-ATT O B-ATT I-ATT O O O O O O O O O O B-ATT O O O I-ATT O <eos>
由定理11.1,图A中的3个无向图中,(a)是欧拉图,(b)是半欧拉图,(c)不是半欧拉图,更不是欧拉图.3个有向图中只有(d)是欧拉图,没有半欧拉图.
<start> O O O O O O O O B-CON O O O O O B-CON I-CON B-CON O O O O O O B-CON I-CON B-CON O O O O O B-CON B-CON I-CON B-CON O O O O O O B-CON B-CON I-CON B-CON O O O O B-CON I-CON B-CON O O O B-CON I-CON B-CON O O O O O O O B-CON I-CON B-CON O O O B-CON B-CON I-CON B-CON O <eos>
18世纪中叶在欧洲普鲁士的哥尼斯堡城内有一条贯穿全市的普雷格尔河,河中有两个小
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
岛,由七座桥相连接(如图11.2(a)所示).当时该城市的人们热衣于一个难题:一个人怎样不重复地走完七座桥,最后回到出发地点?这就是所谓的哥尼斯堡七桥问题.很长时间都没有人能解决这个难题.1736年,瑞士数学家欧拉(Euler)发表论文,他用4个点分别表示两个小岛和两岸,用连接两点的线段表示桥,如图A所示.于是,用现在的语言,哥尼斯堡七桥问题就是要求在这个图中走一条欧拉回路.欧拉在这篇论文中证明了定理11.1.由于4个顶点都是奇度顶点,故该问题无解.这篇论文现在被公认为是第一篇关于图论的论文.这也正是欧拉回路和欧拉图这个名字的来源.
<start> O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例A设A是非平凡的欧拉图,证明A.
<start> O O O O O O O O O B-CON I-CON I-CON O O O O O <eos>
证只需证明A的任意一条边A都不是桥.设A是一条欧拉回路,A在A上,因而AA,故A不是桥.
<start> O O O O O O O O O O O O O O O O B-CON O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON O <eos>
设A,如果A中没有与A关联的边,则计算停止;否则按下述条件从AA中任取一条边A:
<start> O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O B-CON O O <eos>
(a)A与A相关联;
<start> O O O O O O O B-REL I-REL O <eos>
(b)除非无别的边可供选择,否则A不应该为A中的桥.设A,把A加人A.
<start> O O O O O O O O B-CON O O O O O O O O O O O O O O O B-CON O O O O O O O O O O <eos>
可以证明,当A是欧拉图时,算法停止时所得简单回路A是A的一条欧拉回路.
<start> O O O O O O O O B-CON I-CON B-CON O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O <eos>
例11.2图11.3(a)是一个欧拉图.某人用Fleury算法求这个图中的欧拉回路时,走了简单回路A之后,无法进行下去,试分析他在哪步犯了错误.
<start> O O O O O B-CON O O O O O O O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O B-CON O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O <eos>
解记这个图为A.当他走到A时,A为图11.3(b)所示.此时A为该图中的桥,而A均不是桥.他不应该走A,应该走A或A.而他选择了A,这一步违反了算法中第2步的条件(b),即能不走桥就不走桥的规定.正确的走法是AA.注意,在A处选择A,在A处选择A等,当时A都是桥,但当时除这些桥外无别的边可走.按照算法,在这种情况下可以选择桥.同样的道理,当第一次走到A时必须选择A或A,而不能选择A.
<start> O O O O B-CON O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O B-CON O O B-CON O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
Fleury算法给出牡欧拉图中"一笔畐出"欧拉回路的方法.所谓一个苳䏍笔画出,是指从某一点出发,不间䉼且不重复地甶完整个图,最后回到起点."A笔画"问题就是问一个图是否能一劮画出和如何一笔畐出.定理A和Fleury算法回智、这个由题.
<start> B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O B-CON I-CON B-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-CON O O O O O O O O <eos>
定义A经过图(有向图或无向图.)中所有顶点一次且仅一次的通路称为
<start> O O O O O B-CON O B-CON I-CON B-CON O B-CON I-CON B-CON O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O <eos>
哈密顿通路.经过图中所有顶点一次且仅一次的回路称为哈密顿回路.具有哈密顿回路的图称为哈密顿图,具有哈密顿通路但不具有哈密顿回路的图称为半哈密顿图.
<start> B-CON I-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O B-CON I-CON I-CON B-CON I-CON O O O B-CON I-CON I-CON B-CON I-CON O O O O B-CON I-CON I-CON B-CON O O O B-CON I-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON B-CON I-CON O O O O B-CON B-CON I-CON I-CON B-CON O <eos>
规定:平凡图是哈密顿图.
<start> O O O B-CON I-CON B-CON O B-CON I-CON I-CON I-CON O <eos>
图A中所示的3个无向图都有哈密顿回路,都是哈密顿图.在有向图中,(d)有哈密顿回路,是哈密顿图.(e)只有哈密顿通路,但无哈密顿回路,是半哈密顿图,而(f)中既无哈密顿回路,也没有哈密顿通路,因而不是哈密顿图,也不是半哈密顿图.
<start> B-CON O O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON B-CON I-CON O O O B-CON I-CON I-CON I-CON O O B-CON I-CON B-CON O O O O O O B-CON I-CON I-CON B-CON I-CON O O B-CON I-CON I-CON B-CON O O O O O O B-CON I-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON B-CON I-CON O O B-CON B-CON I-CON I-CON B-CON O O O O O O O O B-CON I-CON I-CON B-CON I-CON O O O O B-CON I-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON B-CON O O O O B-CON B-CON I-CON I-CON B-CON O <eos>
与判断一个图是否为欧拉图不一样,到目前为止,人们还没有找到哈密顿图便于判断的充分必要条件.下面给出的定理都是哈密顿图和半哈密顿图的必要条件或充分条件.
<start> O O O O O B-CON O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O B-CON B-CON I-CON I-CON B-CON O O O O O O O O O O O <eos>
定理A设无向图A是哈密顿图,则对于任意A且A,均有
<start> O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O <eos>
证设A为A中任意一条哈密顿回路.易知,当A中顶点在A上均不相邻时,A达到最大值A,而当A中顶点在A上有彼此相邻的情况时,均有A,所以有AA.而A是A的生成子图,所以有A.
<start> O O O O O O O O O O B-CON I-CON I-CON B-CON I-CON O O O O O O O B-CON I-CON O O O O O B-REL I-REL O O O O O B-ATT I-ATT I-ATT O O O O O O B-CON I-CON O O O O O O B-REL I-REL O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O <eos>
本定理给出哈密顿图的必要条件,但不是充分条件.可以验证彼得松图(图9.4(a))满足定理中的条件,但它不是哈密顿图.
<start> O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O B-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O <eos>
推论设无向图A是半哈密顿图,则对于任意的A且A,均有
<start> O O O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O <eos>
证设A是A中起于A终于A的哈密顿通路,令A为在A之间加新边A所得到的图,易知A为哈密顿图.由定理11.2可知,A.而AA.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON O O O O O B-CON I-CON I-CON B-CON O O O O O O O O O O O O O O O O O <eos>
例A在图A中哪些是哈密顿图?哪些是半哈密顿图?为什么?
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON I-CON O O O O O <eos>
解在图11.4(a)中,取A.由定理11.2及其推论可知,图A不是哈密顿图,也不是半哈密顿图.
<start> O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O B-CON I-CON I-CON B-CON O O O O B-CON B-CON I-CON I-CON B-CON O <eos>
在图11.4(b)中取A.由定理A可知,图11.4(b)不是哈密顿图.而baegjckhfid是一条哈密顿通路,故它是半哈密顿图.在图A(c)中,abcdgihjefa是一条哈密顿回路,所以图11.4(c)是哈密顿图.
<start> O B-CON O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O B-CON I-CON I-CON B-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O B-CON B-CON I-CON I-CON B-CON O O B-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON I-CON O O O B-CON O O O O O O O O B-CON I-CON I-CON B-CON O <eos>
例A图A所示的3个图中哪些是哈密顿图?哪些是半哈密顿图?
<start> O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
解在图11.5(a)中,按字母顺序经过各顶点走出一条哈密顿回路A,所以图A(a)为哈密顿图.在图A中,取A,从图中删除A,得7个连通分支,由定理A及推论可知,图11.5(b)不是哈密顿图,也不是半哈密顿图.在图A中取A,从图中删除A得4个连通分支,由定理A可知,它不是哈密顿图.但图11.5(c)中abcifedhg为哈密顿通路,所以图A是半哈密顿图.
<start> O O B-CON O O O O O O O O O O O O O O O O O B-CON I-CON O O O O B-CON I-CON I-CON I-CON I-CON O O O O B-CON O O O O O B-CON I-CON I-CON B-CON O O B-CON O O O O O O O B-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O B-CON O O O O O O O O O B-CON I-CON I-CON B-CON O O O O B-CON B-CON I-CON I-CON B-CON O O O O O O O O O B-CON O O O O O O O B-CON I-CON I-CON I-CON O O O <eos>
1859年,英国数学家哈密顿(Hamilton)提出一个周游世界问题:有20个城市,城市之间的交通线如图11.5(a)所示.问:能否从某个城市出发沿交通线经过每个城市一次并且仅一次,最后回到出发点?用现在的语言,就是问这个图中是否有哈密顿回路.哈密顿自己做了肯定的回答.哈密顿回路和哈密顿图即由此得名.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O B-CON O O O <eos>
下面给出哈密顿图和半哈密顿图的一个充分条件,证明略去.
<start> O O O O B-CON I-CON I-CON B-CON O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O <eos>
定理A设A是A阶无向简单图,若对于A中任意不相邻的顶点A,均有
<start> O O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O B-REL I-REL I-REL O B-CON I-CON O O O O <eos>
则A中存在哈密顿通路.
<start> O O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
推论设A为A阶无向简单图,若对于A中任意两个不相邻的顶点A均有
<start> O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O B-REL I-REL I-REL O B-CON I-CON O O O <eos>
则A中存在哈密顿回路.
<start> O O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
例A在某次国际会议的预备会中,共有8人参加,他们来自不同的国家.已知他们中任何两个无共同语言的人,与其余有共同语言的人数之和大于等于8,试证明能将这8个人排在圆桌旁,使其任何人都能与两边的人交谈.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
解设8个人分别为A,作无向简单图A,其中AA与A有共同语言,A为8阶无向简单图,A为与A有共同语言的人数.由已知条件,A且A,均有A.由定理A的推论可知,A中存在哈密顿回路,设A为A中一条哈密顿回路,按这条回路的顺序安排座次即可.
<start> O O O O O O O O O O O B-CON I-CON B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O B-CON I-CON B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON I-CON O O O O O O O O B-CON I-CON I-CON B-CON I-CON O O O O B-CON I-CON O O O O O O O O O O <eos>
证明一个图是哈密顿图或半哈密顿图最直接的方法是给出一条哈密顿回路或哈密顿通路,当然也可以使用充分条件,如定理A及推论.证明一个图不是哈密顿图或半哈密顿图,通常都需要证明它不满足某个必要条件,如定理A及推论.
<start> O O O O B-CON O B-CON I-CON I-CON B-CON O B-CON B-CON I-CON I-CON B-CON O O O O O O O O O O O B-CON I-CON I-CON B-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O B-CON I-CON I-CON B-CON O B-CON B-CON I-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
货郎担问题(也称旅行商问题):有A个城市,给定城市之间道路的长度(长度可以为A,对应这两个城市之间无交通线).货郎从某个城市出发,要经过每个城市一次且仅一次,最后回到出发的城市,问:如何走才能使他走的路线最短?
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
这个问题可用图论方法描述如下:设A为一个A阶完全带权图,各边的权A非负且可以为A.求A中一条最短的哈密顿回路.
<start> O O O O O O B-CON I-CON O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O B-ATT O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON I-CON O <eos>
例如,图11.6(a)给出一个4阶完全带权图A.不计起点,也不计顺时针和逆时针,只有3条不同的哈密顿回路:
<start> O O O B-CON O O O O O O O O O O O O O B-CON I-CON B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON I-CON O <eos>
知识点:哈密顿图
<start> O O O O B-CON I-CON I-CON B-CON <eos>
分别如图A中(b),(c),(d)所示,其长度分别为A.因此,A是所求的最短路线.
<start> O O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
至今还没有找到解决哈密顿回路存在性问题和货郎担问题的有效算法,它们是众多NP难问题中的两个问题.
<start> O O O O O O O O O B-CON I-CON I-CON B-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
定义A设无向图A,若能将A划分成两个不相交的非空子集A和A(即A且A,使得A中的每条边的两个端点都是一个属于A,另一个属于A,则称A为二部图(或二分图、偶图),称A和A为互补顶点子集,常将二部图A记为A.又若A是简单二部图,A中每个顶点均与A中所有顶点相邻,则称A为完全二部图,记为A,其中A.
<start> O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O O O O O O O B-CON O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O I-CON O O O O O O O B-CON I-CON I-CON I-CON B-CON I-CON O O O O O B-CON O O O O O O O O O B-CON I-CON I-CON I-CON B-CON O O O O O B-CON I-CON O O O O O O B-CON I-CON <eos>
注意,A阶零图为二部图.
<start> O O O O O B-CON I-CON O B-CON I-CON I-CON O <eos>
在图A中所示各图都是二部图,其中,图A为完全二部图A常将A画成与其同构的形式(e).图A是完全二部图A,常画成(f)的形式.
<start> O B-CON O O O O O B-CON O O B-CON I-CON I-CON O O O O B-CON O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O B-REL I-REL O O O O O O O B-CON O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O <eos>
画二部图时,通常将互补顶点子集A分开画成两排,如图A的形式.请读者将该图中(a),(b)也画成这种形式.
<start> O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
一个图是否为一部图,可由下面定理判别.
<start> O O B-CON O O O B-CON I-CON B-CON O O O O O O O O O O <eos>
定理A阶无向㫡A是二部图当且仅当A中无奇圈.
<start> O O O O B-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O B-CON O <eos>
证亣要业.若A中无用,结论显然成立.若A中有㒽,设A为A中的一个圈,知识点:二部图要证A是偶淃.令A.不妨设A,则A依次交替属于A且A,内而A为偶数,得证A为偶恩.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
充分性.不妨设A为连通图,否则可对每个连通分支进行讨论,柧立点吼根据需要分属A和A.设A为A中仕意一个顶点,令
<start> O O O O O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O <eos>
其中A是A到A的最短路径的长度,即最短路径中的边数,这里把每一条边
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O <eos>
知识点:欧拉的权看作1.易知A.下面证明A中任意图、哈密顿图两顶点不相邻.用反证法,若存在A相邻,记A,设A到A的最短路径分别为A,它们的长度A都是偶数.于是,由A和A构成一条长度为奇数的回路.这条回路可能是一条复杂回路,可以分解成若干由A，A共有的边构成的回路（实际上是苺条边重复一次的路径）和由A不共有的边及A构成的淃.由A共有的边构成的回路的长度为偶数,故在由A不共有的边(可以还包括A构成的圈中一定有奇圈,这与已知条件矛盾.得证A中任意两顶点不相邻.由对称性,A中也不存在昍邻的页点,得证A为一部图.
<start> O O O O O O O O O O O O O O O O O O O O O O O O B-CON O B-CON I-CON I-CON B-CON O B-CON I-CON O B-REL I-REL O O O O O O O O O O B-REL I-REL O O O O O O O O O O O O O O O O O O O O O O B-ATT O O O O O O O O O O O O O O O O O O B-ATT O O O O B-CON I-CON O O O B-CON I-CON O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O B-CON <eos>
定A叒A为一部图,A,如果A中的任意两条边都不相邻,则称A是A的一个匹配.AA,则称A是A到A的完备匹㬝.当A时,完备】酉称作完美匹哯.显然,二部图的完备匹配是最大匹配.但最大匹配不一定是完备匹配.
<start> O O O O O O O B-CON O O O O O O O O O O O O B-CON O O B-REL I-REL O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O <eos>
在图A中,(a),(b)中的实线边是完备匹配,其中(b)中的实线边是完美匹配.而(c)中的实线边是最大匹配,但不是完备匹配.
<start> O B-CON O O O O O O O O O O O O B-CON I-CON B-CON O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON O B-OPR I-OPR I-OPR I-OPR O O O O O O O B-CON I-CON I-CON O B-ATT I-ATT I-CON I-CON O O O O B-CON I-CON I-CON I-CON O <eos>
为了叙述最大匹配的充分必要条件,先要引人下述名词.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
定义A设A是二部图A的一个匹配.称A中的边为匹配边,不在A中的边为非匹配边.与匹配边相关联的顶点为饱和点,不与匹配边相关联的顶点为非饱和点.A中由匹配边和非匹配边交替构成的路径称为交错路径,起点和终点都是非饱和点的交错路径称为可增广的交错路径.
<start> O O O O O O B-CON I-CON B-CON O O O O B-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O <eos>
显然,A为A的完美匹配当且仅当A中的每个顶点都是饱和点.
<start> O O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O O O B-CON I-CON O O B-CON I-CON I-CON O <eos>
在图A中实线是一个匹配,记作A是饱和点;A是非饱和点.A是一条可增厂的交错路径.
<start> O B-CON O O O O O O O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON O B-CON I-CON I-CON I-CON O <eos>
叒A为A的一个匹配,若存在关于A的可增广的交错路径A,由于A的起点和终点都是非饱和点,故它的匹配边比非匹配边少1条.将A中的非配边变成匹配边,匹配边变成非匹配边,得到A,即A中的边彼此不相邻且比A多一条边,人而得至比A多一条边的匹配A.例如，在图A中将可增广的交错路径A中的匹配边变成非匹配边,非匹配边变成匹配边,就得到冬一条边的匹配,如图A所示.这就证明了不含可增广的交错路径是最大匹配的必要条件.事实上,还可以证明它也是最大匹配的充分条件.从而有下述定理.
<start> O O O O O O O B-CON I-CON O O O O O O O O B-OPR B-OPR I-OPR O B-OPR I-OPR I-CON I-CON O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O B-CON I-CON O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O B-REL I-REL O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O B-CON O O O <eos>
定理A设A是一部图A的一个酋,则A是A的叮垾厂的交钴路径.
<start> O O O O O O O O B-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
下述定理给出一咅图有完备匹配的充分要条件.
<start> O O O O O O O O B-CON O O O O O O O O O O O O <eos>
设使用Hanoi算法移动A个盘子的总次数为A.步骤3使用Hanoi算法递归地将A个盘子从A柱移到A柱,移动次数为A;步骤4利用1次移动将最下面的大盘子从A柱移到A柱;步骤5还是用Hanoi算法将A柱上的A个盘子移到A柱,移动次数为A.因此得到递推方程
<start> O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON <eos>
这个方程的初值是A.后面将证明这个方程的解是A.
<start> O O O O O O O O O O O O O O O O O O O O O O O O <eos>
超过5000亿年.对于Hanoi塔问题,盘子的个数A代表问题规模,A代表求解规模为A的问题所做的基本运算次数,它代表了这种算法的效率.Hanoi算法的A是A的指数函数.不难看到,指数函数的值随着自变量A的增加呈爆炸性增长.对于比较大的A,即使再提高A的速度,所占用的时间也是人们所不能承受的.正如上面的计算所显示的,即使1秒钟移动1亿次,移动64个盘子也需要超过5000年的时间.因此在处理实际问题时,通常不能选择指数时间的算法.为了对算法的效率做出估计,求解递推方程是经常使用的方法.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例A一个著名的数列称作Fibonacci数列(即斐波那契数列),这个数列的项是
<start> O O O O O O O B-CON I-CON O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON B-CON I-CON O O B-CON I-CON I-CON I-CON B-CON I-CON O O O O B-CON I-CON O B-CON O <eos>
Fibonacci数列的第A项A恰好等于第A项与第A项之和,即
<start> B-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O B-CON O O O O O O O B-CON O O O B-CON O O O O <eos>
这个方程是关于Fibonacci数列的递推方程,可以证明该方程的解是
<start> O O O O O O O B-CON I-CON I-CON I-OPR I-OPR I-CON I-CON I-CON I-CON B-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O O O O <eos>
下面讨论递推方程的求解方法.
<start> O O O O B-CON I-CON I-CON I-CON O O O O O O <eos>
常系数线性递推方程是一类常用的递推方程,前面关于Hanoi塔和Fibonacci数列的递推方程都是常系数线性的递推方程,可以使用公式法求解.先给出它的定义.
<start> O O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O <eos>
定义A设递推方程满足
<start> O O O O B-CON I-CON I-CON I-CON O O <eos>
其中A为常数,A,这个方程称为A阶常系数线性递推方程.A为A个初值.当A时称这个递推方程为齐次方程.
<start> O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O <eos>
上述关于Hanoi塔的递推方程不是齐次的,而关于Fibonacci数列的递推方程是齐次的.为了说明常系数线性齐次递推方程的解的结构,需要引人特征根的概念.
<start> O O O O B-CON I-CON I-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O O O O <eos>
定义A设给定常系数线性齐次递推方程如下：
<start> O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O <eos>
方程A称为该递推方程的特征方程,特征方程的根称为递推方程的特征根.
<start> O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON O <eos>
下面的定理给出了递推方程及其特征根之间的关系.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O <eos>
定理A设A是非零复数,则A是递推方程(13.2)的解当且仅当A是它的特征根.
<start> O O O O O O B-CON I-CON B-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
证A是递推方程的解
<start> O O O B-CON I-CON I-CON I-CON O O <eos>
定理A设A和A是递推方程A的解,A为任意常数,则AA也是这个递推方程的解.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O <eos>
证将A代人该递推方程进行验证.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O <eos>
根据定理A和A,对A进行归纳,不难得到以下推论.
<start> O O O O O O O O O O O O O O O O O O O O O O O O <eos>
推论若A是递推方程(13.2)的特征根,则A是该递推方程的解,其中A是任意常数.
<start> O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O <eos>
以上推论说明A是递推方程(13.2)的解.下面的问题是:除了这种形式的解以外,是否存在其他形式的解?为了解决这个问题,先定义通解.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O <eos>
定义A若对递推方程(13.2)由不同初值确定的每个解A都存在一组常数A,A,使得
<start> O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O <eos>
成立,则称A为该递推方程的通解.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON O <eos>
下面的定理说明,当A个特征根彼此不等时,上述的解就是递推方程(13.2)的通解.
<start> O O O O O O O O O O O B-CON I-CON I-REL O O B-REL I-REL O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON O <eos>
定理A设A是递推方程(13.2)不等的特征根,则A为该递推方程的通解.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON O <eos>
证根据前面的推论知道A是解,下面证明这个解是通解.设A是递推方程A的任意一个解,其中A由初值A唯一确定.将初值代人得到以下线性方程组.
<start> O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O B-ATT I-ATT O O O O O O O B-ATT I-ATT O O O O O O O O B-CON I-CON I-CON O <eos>
如果这个方程组有唯一解A,那么说明A,从而证明了A是递推方程的通解.由于上述方程组的系数行列式是范德蒙德行列式A,当A时,这个行列式不等于0,因此线性方程组有唯一解.
<start> O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON I-CON B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O O B-CON O <eos>
例A求解Fibonnaci数列的递推方程.
<start> O O O O B-CON I-CON I-CON I-OPR I-OPR I-CON I-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O <eos>
解递推方程是A,初值是A.它的特征方程是A,求解得到特征根为A.因此,递推方程的通解为
<start> O B-CON I-CON I-CON I-CON O O O B-ATT I-ATT O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON O <eos>
解得待定常数A,从而得到递推方程的解为
<start> O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O <eos>
递推方程(13.2)的特征根中如果存在重根,当把对应这些特征根的项A进行线性组合时,那些对应于同一个重根的项就归并成一项.于是,当把这个通解代人初值时,所得到的线性方程组中方程的个数将比末知数的个数多.这样的方程组可能无解.解决的方法是必须使用线性无关的解来构造通解.定理A给出通解的表达式.限于篇幅,这里不再给出证明.定理A设A是递推方程(13.2)的不相等的特征根,且A的重数为A,其中AA.令
<start> B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON O O O O O O O B-CON I-CON I-CON O B-CON O O O O O O O O O O O O O O O O O B-CON I-CON O B-CON O O O O O B-CON O O O O O O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O I-CON <eos>
那么该递推方程的通解是
<start> O O O B-CON I-CON I-CON I-CON O O O O <eos>
例A求解以下递推方程.
<start> O O O O O O B-CON I-CON I-CON I-CON O <eos>
解特征方程为A,特征根为A,通解为
<start> O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O <eos>
下面考虑非齐次的递推方程.常系数线性非齐次递推方程的标准型是
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O I-CON I-CON B-CON I-CON I-CON I-CON O O O O O <eos>
为了求解上述方程,必须了解通解的结构.这里的通解与定义A关于齐次方程通解在概念上是一致的.
<start> O O O O O O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O O O O O B-CON I-CON I-CON I-CON B-CON I-CON O O O O O O O O O <eos>
定理A设A是对应的齐次方程(13.2)的通解,A是一个特解,则
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O <eos>
是递推方程A的通解.
<start> O B-CON I-CON I-CON I-CON O O O O O <eos>
证将A代人就可以验证它是递推方程(13.3)的解.下面证明它是通解.
<start> O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON O <eos>
设A是递推方程(13.3)的一个解,只需证明A可以表示为对应齐次方程的一个解与特解A之和.因为A与A都是递推方程A的解,因此
<start> O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O <eos>
这说明A是对应齐次方程的一个解,换句话说,A是对应齐次方程的一个解与特解A之和.
<start> O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON O O O O <eos>
定理A说明递推方程(13.3)的通解结构是对应的齐次方程的通解加上一个特解,而特解的形式依赖于A.求解的关键是确定一个特解,可以先根据A写出特解的函数形式,然后用待定系数法确定其中的系数.下面针对某些特殊函数形式进行讨论.
<start> O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O B-CON I-CON O O O O B-CON I-CON O O B-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON O B-CON I-CON O I-CON O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O <eos>
第一种情况:A为A的A次多项式,那么特解一般也为A的A次多项式.但是如果递推方程的特征根是1,就必须提高所设定特解的多项式次数.因为当把这个特解代人原方程时,最高次项和常数项都会消去,于是化简后等式左边多项式的次数将低于右边函数A的次数.
<start> O O O O O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O I-CON O O O O O O O O O O B-CON O O O B-CON O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON O O O O O <eos>
例A针对下面的顺序掐入排序算法估计它在最坏情况下的时间复杂度A.
<start> O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O I-CON O O <eos>
对A个数的数组A进行排序,算法对A的第1项不做任何工作.接着只需一次比较就可以把第2项揷到恰当的位置.然后算法将第3项揷人由排好序的前两项构成的子数组中,这至多需要两次比较A如果前A项已经排好,揷人第A项至多需要A次比较.因此对于A个数的数组,在最坏情况下算法所做的比较次数A满足以下递推方程:
<start> O O O O O B-CON I-CON O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O B-CON O O O O O O O O O B-CON O O O O B-CON I-CON O O O O O O O O O O O O O O O O B-CON O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O <eos>
这里的函数A是A的一次多项式,但是特征根是1.如果把特解设为A,将它代人递推方程,得
<start> O O O B-CON I-CON O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O <eos>
化简得A,左边是A的0次多项式,右边是A的1次多项式.没有常数A能够使它成立.根据上面的分析,将特解设为A,代人递推方程得
<start> O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
解得A.于是通解为
<start> O O O O O O O O O <eos>
定理11.6(Hall定理)设二部图A,其中A,则A中存在A到A的完备匹配当且仅当A中任意A个顶点至少与A中的A个顶点相邻.
<start> O O O O O O O O I-CON O O O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-OPR O O O O O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON B-REL I-REL O <eos>
本定理中的条件常称为“相异性条件”.
<start> O O O O O O O O O O O O O O O O O O <eos>
证定理的必要性显然,下面证明充分性.设A为A的最大匹配,若A不是完备匹配,必存在非饱和点A.根据相异性条件,必存在A与A关联.并且A中与A相邻的顶点都是饱和点,否则与A是最大匹配矛盾.考虑从A出发的尽可能长的所有交错路径,由于A是最大匹配,又由定理A可知这些交错路径都不是可增广的,因此每条路径的另一个端点一定是饱和点,从而这些端点全在A中.令
<start> O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-OPR O O O O O O O <eos>
注意到,除A外,A和A中的顶点都是饱和点,且由匹配边给出两者之间的一一对应,因而AA.这说明A中有A个顶点只与A中A个顶点相邻,与相异性条件矛盾.因此,A中不可能存在非饱和点,故A是完备匹配.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
在图A中,A中有两个顶点只与A中的一个顶点相邻,不满足相异性条件,因而(c)不存在完备匹配.而(a),(b)均满足相异性条件,都有完备匹配.
<start> O B-CON O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
定理A设二部图A,如果存在正整数A,使得A中每个顶知识点:二部图点至少关联A条边,而A中每个顶点至多关联A条边,则A中存在A到A的完备匹配.
<start> O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
证由定理中的条件可知,A中任意A个顶点至少关联A条边,而A中每个顶点至多关联A条边,所以这A条边至少关联A中A个顶点.这说明A满足相异性条件,因而A中存在完备匹配.
<start> O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
常称定理A中的条件为A条件A条件是二部图有完备匹配的充分条件,但不是必要条件.在图A中,(a)不满足A条件,但有完备匹配.
<start> O O O O O O O O O O O O O O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
例A某公司招聘了3名大学毕业生.公司有5个部门需要人,部门领导与毕业生们进行了交谈.不考虑单向的意愿,他们交谈之后的结果(毕业生愿意去这个部门,这个部门也同意接受这名毕业生)如表A所示.如果每个部门只能接收一名毕业生,问:这3名毕业生都能到他满意的部门工作吗?试给出分配方案.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
解表A中的关系可以用一个二部图A表示,如图A所示,其中AA表示3名大学毕业生,A表示5个部门.一个分配方案就是A的一个匹配.由于A都关联3条边,而A都至多关联2条边,A满足A条件,其中A.根据定理A有完备匹配,从而每名毕业生都能到他满意的部门工作.这样的分配方案很多,例如A到部门A到部门A到部门A到部门A到部门A到部门5等.
<start> O O O O O O O O O O O O B-CON I-CON B-CON O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例A视频检索.一段视频通常称作“片断”,每个片断由一串连续的“镜头”构成,每个镜头可以看作由若干“帧”构成的序列,而每一帧就是一幅图像.因此,视频检索从上层到下层可以分为片断检索、镜头检索与图像检索.
<start> O O B-CON I-CON I-CON I-CON O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O <eos>
现在考虑镜头检索.给定镜头A,假定它由连续的A个帧A构成.在视频库中存有许多镜头,假设镜头A由A个帧A构成.对于帧A和A,通过图像识别可以得到A与A的相似值A.构造带权的完全二部图A,其中A,A.设A是A的一个匹配,A的权值定义为A.定义镜头A与A的相似度A是A的带最大权的匹配,即
<start> O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON O O O B-CON I-CON O O O O B-CON O O O O O O O O O O O O O B-CON I-OPR I-OPR I-OPR O O O O O O O O B-CON I-CON I-CON O O O O O B-ATT O B-CON I-CON I-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT O O O O O O O B-CON I-CON O O O O B-ATT <eos>
所谓视频检索,就是在视频库中找到与给定镜头A具有最大相似度的镜头A.
<start> O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O B-CON O O O O B-ATT I-ATT B-ATT I-ATT I-ATT O B-CON I-CON O O <eos>
求二部图的最大匹配和带权二部图的最大权匹配的有效算法可以在有关算法的教材中找到.
<start> O B-CON I-CON I-CON O B-ATT I-ATT O O O B-CON I-CON I-CON I-CON I-CON O B-ATT I-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O <eos>
定义A如果能将无向图A画在平面上使得除顶点处外无边相交,则称A是可平面图,简称平面图.画出的无边相交的图称为A的平面嵌入.无平面嵌人的图称为非平面图.
<start> O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O B-CON O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
A(平凡图)A都是平面图.A的通常画法就是它们的平面嵌人.A的平面嵌人如图11.11(d)所示.A删除任意一条边)也是平面图,它的平面嵌人如图11.11(e)所示.完全二部图A也都是平面图,用标准画法画出的A已经是平面嵌人,A的平面嵌人如图A(f)所示.图A中(a),(b),(c)分别为A的通常画法.
<start> O O O O B-CON O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O B-CON O O O O O O O O O O O O O O O O O O B-CON O O O B-CON I-CON I-CON O O O O O O O O B-CON O O O O O O O O O O O O O O O B-CON O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O <eos>
下面讨论平面图的性质,有些性质与图的画法有关,这时是针对平面嵌人的.因此,下面谈到平面图有时是指平面嵌人,有时则不是,不难根据上下文来区分.当然,有时为了强调会特别指明是平面嵌人.
<start> O O O O B-CON I-CON B-CON O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
显然平行边和环不影响图的平面性，即在平面冬中加平行边或环仍是平面图,在非平面图中删去平行边或环付是非平面图,因而在研穴一个庝是否为平面图时可不考虑平行边和环.
<start> O O B-CON I-CON I-CON O B-CON O O O O O O O O O O O B-CON I-CON O O O B-CON I-CON I-CON O B-CON O O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON O B-CON O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O B-CON O <eos>
在这里还要提前指出并使用下述事实:在平面图理论中有两个居特殊地位的图一䀼和A,它们都是非平面图（见定理A).
<start> O O O O O O O O O O O O O O O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON O O O O O O O <eos>
下述定理是显然的.
<start> O O O O O O O O O <eos>
定理A平面图的子图都是平面图,非平面图的母图都是非平面冬.
<start> O O O B-CON I-CON I-CON O B-CON I-CON O O B-CON I-CON I-CON O B-CON I-CON I-CON I-CON O B-CON I-CON O O B-CON I-CON I-CON I-CON O <eos>
由定理A立刻可知,所有度数不超过4的简单图都是平面苳,当|A和2时一部图A是平面图.含A或A作为子图的图都是非平面图,特别地A和A3)都是非立面界.
<start> O O O O O O O O O O O B-ATT O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O <eos>
定义A给定平面图A的平面嵌人,A的边将平面划分成若干个域,每个区域都称为A的一个面,其中有一个面的面积无限,称为无㡾面或外部面,其余面的面积有限,称为有限面或内部面.包用苒个面的所有边组成的回路组称为该面的边界,边界的长度称为该面的次数.
<start> O O O O O B-CON I-CON I-CON O O B-CON I-CON O O O O O B-CON O B-CON I-CON O O O O O O B-CON O O O B-CON I-CON O O O O O O O B-CON O O O O O O B-CON O O O O O O O O O O O O O O B-CON O O O B-CON O O O O O O O O B-CON I-CON B-CON O B-CON O B-CON O O O O O O O O O B-CON O O O B-CON I-CON I-CON O O O O O B-ATT I-ATT O B-CON I-ATT O O O O O O O O O O O <eos>
常记夕欮面为A,内部面为A,面A的次数记为A.定义中"回路组"中的回路可䏍是卷、笪单回路,也可能是复杂回路.
<start> O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON O O O O O O O B-CON I-CON O O O O O B-CON I-CON B-CON I-CON O <eos>
图A是一个平面嵌人,它有5个面.A的边界为貝A的巡界也是圈,比甪为A的边界为环A的边界为圈A.外部面A的边界由一条简单回路abefgdc和一条复杂回路kjihil组成,degA.
<start> B-CON O O O O O O O O O O O O O B-CON O O O B-ATT I-ATT O O O O B-ATT I-ATT O O O O O O O O O B-ATT I-ATT O B-CON O O B-ATT I-ATT O O O O O O B-CON O O B-ATT I-ATT O O O B-CON I-CON B-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O <eos>
图A定理A平面图所有面的次数之和等于边数的两倍.
<start> O O O O O B-CON I-CON I-CON O O B-CON O O O O O O O B-ATT O O O O O <eos>
证对每一条边A,若A在两个面的公共边界上,则在计算这两个面的次数时,A各提供1.而当A只在某一个面的边界上出现时,它必在该面的边界上出现两次,如图A中的边A所示,从而在计算该面的次数时,A提供2.于是,在计算总次数时,每条边都提供2,因而所有面的次数之和等于边数的两倍.
<start> O O O O O B-CON O O O O O O O B-CON O B-CON O B-CON I-CON O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O B-CON O B-CON I-CON O O O O O O O O O B-CON O B-CON I-CON O O O O O O O B-CON O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O B-CON O O O O <eos>
定义A设A为简单平面图,若在A的任意两个不相邻的顶点之间加一条边,所得图为非平面图,则称A为极大平面图.
<start> O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O B-REL I-REL I-REL O B-CON I-CON O O O O O B-CON O O O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
A删除任意一条边是极大平面图(A删除一条边是平面图见本章习题29中图A(a)).另外,A都是极大平面图,因为它们不存在两个不相邻的顶点.
<start> O O O O O O O B-CON O B-CON I-CON I-CON I-CON I-CON O O O O O O B-CON O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O B-REL I-REL O B-CON I-CON O <eos>
下面给出极大平面图的充分必要条件.
<start> O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O <eos>
定理A设A是A阶简单连通的平面图,A为极大平面图当且仅当A的每个面的次数均为3.
<start> O O O O O O O O B-OPR I-OPR I-OPR I-OPR O B-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O B-CON O O O O O O O <eos>
证本定理的充分性留在定理A的后面证明,现在只证必要性.
<start> B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O <eos>
因为A为简单平面图,无环和平行边,故A中各面的次数都大于等于3.下面要证明A各面的次数不可能大于3.假设面A的次数A,见图A所示.若A与A不相邻,在A内加边A不破坏平面性,这与A是极大平面图矛盾,因而A与A必相邻,且边A必在A外部.类似地,A与A也相邻,且边A也在A的外部.于是,A与A相交于A的外部,这又与A是平面图矛盾.所以,必有A,即A中不存在次数大于等于4的面.
<start> O O O O B-CON I-CON I-CON I-CON I-CON O O B-CON O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-REL B-REL I-REL O O O O O B-CON O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O B-REL I-REL O O B-CON O O O O O O O O O O O O O O O B-REL I-REL <eos>
根据定理A,在图A所示的各平面图中,只有(c)是极大平面图.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
定义A若在非平面图A中任意删除一条边,所得图为平面图,则称A为极小非平面图.A和A都是极小非平面图.
<start> O O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
欧拉在研究多面体时发现,多面体的顶点数减去棱数加上面数等于2.可以把多面体的表面展开成连通的平面图:把一个面从中间斯开后平摊开在平面上,如图A所示.在图A中,(a)是一个六面体.把上面的面A从中间撕开,平推开成(b)中的平面图A,其中六面体的面A对应A的外部面.六面体的顶点对应平面图的顶点,棱对应边,面对应面.从而连通平面图的阶数、边数、面数之间也有同样的关系.
<start> O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT O O O O O O B-ATT I-ATT O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O <eos>
定理11.11(欧拉公式)设连通平面图A的顶点数、边数和面数分别为A和A,则有
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON I-CON I-CON O O B-ATT I-ATT I-ATT O B-ATT I-ATT O B-ATT I-ATT O O O O O O O O O <eos>
证对边数A作归纳证明.
<start> O B-ATT I-ATT I-ATT O O B-OPR I-OPR I-OPR I-OPR O <eos>
当A时,由于A为连通图,所以A只能是平凡图,此时A,结论成立.
<start> O O O O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON B-CON O O O O O O O O O O <eos>
设A时结论成立.当A时,对A进行如下讨论.
<start> O O O O O O O O O O O O O O O O O O O O O <eos>
若A中有一个1度顶点A,令A,即删去A和它关联的边,则A仍然是连通的,且顶点数A,边数A,面数A.由归纳假设
<start> O O O O O O B-ATT B-ATT B-CON I-CON O O O O O O O O O O O B-REL I-ATT O B-CON O O O O O O B-ATT I-ATT O O O B-CON I-CON I-ATT O O B-ATT O O O B-ATT I-ATT O O O O O O O <eos>
若A中没有1度顶点,则每一条边都在某两个面的公共边界上.任取一条边A,令A,则A仍连通且A.由归纳假设有
<start> O O O O O B-CON B-ATT B-CON I-CON O O O O O B-CON O O O O O B-CON O O O I-CON I-CON O O O O O O B-CON O O O O O O O O O O O O O O O O O O O <eos>
得证当A时结论也成立.
<start> O O O O O O O O O O O <eos>
推论(欧拉公式的推广)对于有A个连通分支的平面图A,有
<start> O O O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON B-CON O O O <eos>
其中A分别为A的顶点数、边数和面数.
<start> O O O O O O O O B-ATT I-ATT I-ATT O B-ATT I-ATT O B-ATT I-ATT O <eos>
证设A的连通分支为A,并设A的顶点数、边数、面数分别为A,A.由欧拉公式
<start> O O O O B-ATT I-ATT I-CON I-CON O O O O O O O B-ATT I-ATT I-ATT O B-ATT I-ATT O B-ATT I-ATT O O O O O O O O B-CON I-CON I-CON I-CON <eos>
由于每个A有一个外部面,而A只有一个外部面,所以A的面数A.而A,A.于是,
<start> O O O O O O O O B-CON I-CON B-CON O O O O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O O O <eos>
上面产生的任一个前缀码都可以用来传输5个符号,如A.但当在文本中这些字母出现频率不同时,传输这个文本所用的二进制位数是不同的.设共有A个符号,用树叶A处的二进制串表示的符号出现的频率为A处的二进制串的长度等于A的层数A,因而传输A个符号使用的二进制位数为A.显然,用以各个符号出现的频率为权的最优二叉树产生的前缀
<start> O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
码所用的二进制位数最少.称这个由最优二叉树产生的前缀码为最佳前缀码.用最佳前缀码传输的二进制位数最省.
<start> O O O O O O O O O O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O B-CON I-CON O O O O B-CON I-CON I-CON O O O O B-CON I-CON O O O O O O O O O O O O <eos>
求传输它们的最佳前缀码,并求传输A个按上述比例出现的八进制数字需要多少个二进制数字?若是用等长(长为3)的码子传输需要多少个二进制数字?
<start> O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
解用100个八进制数字中各数字出现的个数,即以100乘各频率为权,用Huffman算法求最优二叉树,如图A(a)所示.它产生的最佳前缀码为
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-ATT O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON O O <eos>
设图10.11(a)中树为A,传输100个按题中给定频率出现的八进制数字所用的二进制数字个数等于A,它等于各分支点权之和:
<start> O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-ATT O O O <eos>
最后还要说明一点,就是最佳前缀码并不唯一.由于每一步选择两个最小的权的选法可能不唯一,而且两个权对应的顶点所放的左右位置也可以不同,画出的最优树可能不同.当然,它们的权应该相等,都是最优树.
<start> O O O O O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O O O O O O O B-ATT O O O O O O O O O O O O O B-ATT O O O O O O O O O O O O O O O O O O O O O B-CON I-CON B-CON O O O O O O O O O O O B-ATT O O O O O O O B-CON I-CON B-CON O <eos>
图10.11(b)所示的二叉正则树也是例A对应的最优树,其权等于
<start> B-CON O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON B-CON O O B-ATT I-ATT O <eos>
下面介绍二叉有序树的周游及应用.
<start> O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O <eos>
对一棵有序树的每个顶点访问一次且仅一次称为行遍或周游一棵树.二叉有序树有以下3种周游方式.
<start> O O O B-CON I-CON I-CON O O O B-CON I-CON O O O O O O O O O O O O O O O O O B-CON O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O <eos>
中序行遍法.访问的次序为左儿子、树根、右儿子.
<start> O O O O O O O O O O O O O O O O B-CON I-CON O O O O O <eos>
前序行遍法.访问的次序为树根、左儿子、右儿子.
<start> O O O O O O O O O O O O B-CON I-CON O O O O O O O O O <eos>
后序行遍法.访问的次序为左儿子、右儿子、树根.
<start> O O O O O O O O O O O O O O O O O O O O B-CON I-CON O <eos>
这里规定,当分支点只有一个儿子时,把它作为右儿子,在上述访问次序中左儿子空缺.上述定义是递归定义,当子树只有一个顶点时,它是子树的树根,在上述访问次序中两个儿子都空缺.
<start> O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O O B-CON I-CON O O O O B-CON I-CON O O O O B-CON I-CON O B-CON I-CON O O O O O O O O O O O O O O O O O <eos>
对图A所示有序树,按中序、前序、后序行遍的周游结果如下.
<start> O O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O <eos>
上式中A表示A为子树的树根,一对括号给出相应的子树.
<start> O O O O O O O O B-CON I-CON O B-CON I-CON O O O O O O O O O O B-CON I-CON O <eos>
用二叉有序树可以表示各种含有二元运算和一元运算的算式,然后根据不同的访问方法得到不同的算法.表示的方法如下:每个分支点放一个运算符,其运算对象是以它的儿子为树根的子树所表示的子算式.规定运算对象的排列顺序,如被除数、被减数放在左边.所有的变量和常量都放在树叶上.
<start> O B-CON I-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O I-CON I-CON O O O O O O O O O O O O O B-CON I-CON O B-CON B-CON O O O O B-CON O I-CON O O O O O O O O O O O O O O O O I-OPR O O O O O O O O O O O O O O O B-CON I-CON O O <eos>
例A(1)用二叉有序树表示下面合式公式.
<start> O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O <eos>
(2)用3种行遍法访问这棵二叉树,写出访问结果.
<start> O O O O O O O I-CON O O O O O B-CON I-CON I-CON O O O O O O O O <eos>
解(1)表示算式的二叉树如图A所示.
<start> O O O O O O O O O B-CON I-CON B-CON O O O O O O <eos>
对(10.4)式的运算规则为:从右到左每个运算符对它后面紧邻的两个或一个对象
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
进行运算.在这种算法中,由于运算符在它的运算对象之前,所以称为前缀符号法或波兰符号法.
<start> O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON B-OPR I-CON I-OPR O B-CON I-CON B-OPR I-CON I-CON O <eos>
对(10.5)式的运算规则为:从左到右每个运算符对它前面紧邻的两个或一个对象进行运算.由于运算符在它的运算对象之后,所以称此种算法为后缀符号法或逆波兰符号法.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON B-CON I-CON I-CON O B-CON I-CON I-CON B-OPR I-CON I-CON O <eos>
图A中的哪些图是树?
<start> B-CON O O O O O B-CON O B-CON O <eos>
一棵无向树A有5片树叶,3个2度分支点,其余的分支点都是3度顶点,问A有几个顶点.
<start> O O B-CON I-CON I-CON O O O O B-CON O O O O O B-ATT B-CON I-CON I-CON O O O O B-CON I-CON O O O O B-ATT B-CON I-CON O O O O O O B-CON I-CON O <eos>
无向树A有8片树叶,两个3度分支点,其余的分支点都是4度顶点,问A有几个4度分支点.请画出3棵非同构的这种无向树.
<start> B-CON I-CON I-CON O O O O B-CON O O O O O B-CON B-CON I-CON I-CON O O O O B-CON I-CON O O O O O O O O O O O O O O B-CON B-CON I-CON O O O O O O O O B-REL I-REL O O O B-CON I-CON I-CON O <eos>
一棵无向树A有A个A度分支点,其余顶点都是树叶,问A有几片树叶.
<start> O O B-CON I-CON I-CON O O O O O B-CON B-CON I-CON I-CON O O O B-CON O O O B-CON O O O O O O O B-CON I-CON O <eos>
A阶无向树A的最大度A至少为几?最多为几?
<start> O O B-CON I-CON I-CON O O B-ATT I-ATT I-ATT O O O O O O O O O O O <eos>
若A阶无向树A的最大度A,问A中最长的路径长度为几.
<start> O O O B-CON I-CON I-CON O O B-ATT I-ATT I-ATT O O O O O O O O B-CON I-CON O O O O O <eos>
是否存在以下面正整数为顶点度数的无向树?若存在,请画出2棵这样非同构的无向树.
<start> O O O O O O O O O O O B-CON I-CON B-ATT O O B-CON I-CON I-CON O O O O O O O O O O O O O B-REL I-REL O B-CON I-CON I-CON O <eos>
设A为无向连通图A中的一条边,A在A的任何生成树中,可A应有什么性质.
<start> O O O B-CON I-CON B-CON I-CON I-CON O O O O O B-CON O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O <eos>
设A为无向连通图A中的一条边,A不在A的任何生成树中,问A应有什么性质.
<start> O O O B-CON I-CON B-CON I-CON I-CON O O O O O B-CON O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O <eos>
设A为无向连通图A中的一条边,A既不是环,也不是桥,证明存在A的生成树含A作为树枝,又存在生成树以A为弦.
<start> O O O B-CON I-CON B-CON I-CON I-CON O O O O O B-CON O O O O O B-CON O O O O B-CON O O O O O O O B-CON I-CON I-CON O O O O B-CON I-CON O O O O B-CON I-CON I-CON O O O O O <eos>
设A为无向图A的生成树,A为A的余树,证明A中不含A的边割集.
<start> O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON I-CON O <eos>
设A为无向连通图A的一个边割集,证明A不含A的生成树.
<start> O O O B-CON I-CON B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON B-CON O <eos>
在图A所示的无向图中,画出含边A作为树枝的2棵非同构的生成树.
<start> O B-CON O O O O B-CON I-CON I-CON O O O O O B-CON O O O B-CON I-CON O O O B-REL I-REL I-REL O B-CON I-CON I-CON O <eos>
设A是A阶无向树,A是无向简单图,已知A,证明A中存在与A同构的子图.
<start> O O O O O B-CON I-CON I-CON O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O O O B-REL I-REL O B-CON I-CON O <eos>
已知A阶A条边的无向图A是A棵树组成的森林,证明A.
<start> O O O O O O B-CON O B-CON I-CON I-CON O O O O B-CON O O O B-CON I-CON O O O O O <eos>
设A为无向连通图A中的一棵生成树,A为A的一条弦,则A中存在只含一条弦A其余边均为树枝的包,而且不同的弦对应的图也不同.
<start> O O O B-CON I-CON B-CON I-CON I-CON O O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O B-CON O O O O O O O O O O O O O O O <eos>
设A是连通图A的一棵生成树,A为A的树枝,则A中存在只含树枝A,其余边都是弦的割集,且不同的树枝对应的害集也不同.
<start> O O O B-CON I-CON I-CON O O O O B-CON I-CON B-CON O O O O O B-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O B-CON I-CON O O O O <eos>
在图A的两个图中,实边构成一棵生成树,记为A是A的一条树枝,A是A的一条弦.
<start> O B-CON O O O O B-CON O O O B-CON O O O O B-CON I-CON B-CON O O O O O O O O O B-CON I-CON O O O O O O O O O <eos>
（1）给出每个图中由A和A的树枝构成的圈.(见第16题)
<start> O O O O O O O O O O O O O O B-CON I-CON O O O B-CON O O O O O O O O <eos>
(2)给出每个图中由A和A的弦构成的割集.(见第17题)
<start> O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O <eos>
求图A中两个带权图的最小生成树.
<start> O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O <eos>
设A为非平凡的无向树,A,证明A至少有A片树叶.
<start> O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON O <eos>
设A是无向树A的子图,并且都是树,又已知A,证明导出子图A也是树.
<start> O O O B-CON I-CON I-CON O O B-CON I-CON O O O O O B-CON O O O O O O O O O O B-CON I-CON O O O B-CON O <eos>
设A为A阶简单图,证明A或A中必含圈.
<start> O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON B-CON O <eos>
根树A如图A所示.回答以下问题.
<start> B-CON I-CON O O B-CON O O O O O O O O O O O <eos>
（1）A是儿叉树?
<start> O O O O O B-CON I-CON B-CON O <eos>
(2)A的树高为几?
<start> O O O O O B-CON O O O O <eos>
(4)A有几个分支点?
<start> O O O O O O O B-CON I-CON I-CON O <eos>
画出3棵树高为3,其基图非同构的正则二叉树.
<start> O O O O B-CON O O O O O O O O B-REL I-REL O B-CON I-CON I-CON I-CON I-CON O <eos>
画一棵树高为3的完全正则二叉树.
<start> O O O B-CON O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O <eos>
画出所有非同构的4阶根树.
<start> O O O O O B-REL I-REL O B-CON I-CON I-CON I-CON O <eos>
设A是有A片树叶的2叉正则树,证明A有A个顶点.
<start> O O O O O O B-CON O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON O <eos>
画一棵权为A的最优二叉树,并计算出它的权.
<start> O O O B-ATT O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O B-ATT O <eos>
下面给出的各符号串集合哪些是前缀码?
<start> O O O O O O O O O I-CON I-CON O O O B-CON I-CON I-CON O <eos>
例A告诉我们,利用有序与无序计数之间的关系求解计数问题是一种常用的技巧.
<start> O O O O O O O O O B-OPR I-OPR O B-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O <eos>
例A下面给出一段简单的程序,它的输出A是什么?
<start> O O O O O O O O O O O B-CON I-CON O O O O O O O O O O <eos>
解程序中包含一个A重的嵌套循环,对于给定的A,其中A,循环体运行一次,就对A加A的初值是0,于是A的输出就是循环体的执行次数.这恰好对应了整数序列A可能的取值个数,也就是多重集A的A组合数.一旦从A中选定A个整数,按从大到小的顺序排列(这里允许两个数相等),就唯一确定了一组A,A的值.根据定理A.
<start> O O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例A从A中选择A个不相邻的数,有多少种方法?
<start> O O O O O O O O O B-ATT I-ATT I-ATT O O O O O O O O O O <eos>
解设A是选出的A个不相邻的数,由这A个数对应生成另外的A个数A,A.产生规则是A.例如,如果原来的数是A,那么生成的数
<start> O O O O O O O O O B-ATT I-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例A与例A使用的求解技巧是一一对应.有许多典型的组合计数问题,如选取问题、不定方程的非负整数解问题等,已经得到相应的公式或者求解的方法,换句话说,已经建立了相应的组合计数模型.当遇到其他组合计数问题,如果可以与这些典型的计数模型建立一一对应,那么就可以直接应用有关的结果来求解.这是一种非常有用的方法.
<start> O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-CON I-CON I-CON I-CON I-CON O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O I-CON I-CON I-CON O O O O O O O O O O O O <eos>
关于组合数A有许多有用的公式,有些公式的证明需要使用二项式定理.
<start> O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
定理12.4(二项式定理)设A是正整数,对一切A和A,
<start> O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O <eos>
可以使用数学归纳法证明二项式定理,这里使用组合分析的方法加以证明.
<start> O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O O <eos>
证当乘积被展开时其中的项都是下述形式:A.而构成形如A的项,必须从A个二项式A中选A个提供A,其他的A个提供A.因此,A的系数是A,定理得证.
<start> O O B-CON I-CON O O O O O O O B-CON O O O O O O O O O O O O O O O O B-CON O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O <eos>
在二项式定理中令A可以得到以下推论.
<start> O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O <eos>
下面给出有关二项式系数的一些主要的恒等式,这些恒等式也称为组合恒等式.
<start> O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON I-CON O <eos>
以上公式的证明已经在上一节给出过.递推式在计算组合数的序列和或恒等式证明中经常用到,主要用于组合数的化简或者变形.\\
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O <eos>
上述公式的组合数A中的A不变,而A是随项的标号改变的,简称为变下项的求和公式.这些公式的证明主要使用二项式定理或者组合分析方法.这里只证明公式(12.4).
<start> O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O B-OPR I-CON I-OPR I-OPR O O O O O O O O O O O O O O O O O <eos>
证在二项式定理中令A即可.
<start> O O B-CON I-CON I-CON I-CON I-CON O O O O O O <eos>
证使用组合分析的方法.令A为A元集合.等式右边是A的A元子集数.考虑另一种分类计数的方法.将所有的A元子集分成如下A类.
<start> O O O O I-OPR O O O O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O <eos>
第1类:含A,剩下的A个元素取自A,有A种取法;第2类:不含A,含A,剩下的A个元素取自A,有A种方法;
<start> O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O <eos>
第A类:不含A,含A,剩下的A个元素取自空集,有A种方法.根据加法法则,等式左边也是A的A元子集个数.
<start> O O O O O O O O O O O O O O O O B-CON I-CON O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O <eos>
注意在公式(12.6)中,当A时等式左边的项都等于0.这个公式的组合数A中的下项A不变,而上项A随项的标号改变,是变上项的求和式.主要用于有关组合数序列的求和或者证明组合恒等式.
<start> O O O O O O O O O O O O O O O O B-CON I-CON O O O B-CON O O O O O O O O O O O O O O O O O B-CON O O O O O O B-CON O O B-CON O O O O O O O O O B-CON O O I-CON I-CON O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
证公式左边计数了先从A元集A中选取A个元素,然后在这A个元素中再选A个元素的方法.公式右边的A是从A中直接选取A子集的方法数.显然前一种方法选择的同一个A子集会重复出现.例如,从集合A中先选4子集,然后从这些4子集中再选3子集.那么3子集A可能被选出2次,一次是从4子集A中选出的,另一次是从4子集A中选出的.下面计算采用第一种方法时同一个A子集重复出现的次数.换句话说,就是计算有多少个A子集能够选出相同的A子集.设A子集为A,一个A子集中除了A的元素外,剩下的A个元素取自A.因此有A个A子集能生成相同的A子集.这就证明了等式左边的值恰好是A的A倍.
<start> O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O O O B-CON I-CON O O O O B-CON I-CON O O O O O O O <eos>
如果在公式(12.8)中用A替换A就可得到公式(12.9).因此只需要证明公式(12.8).
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
证考虑集合A.等式右边计数了从这两个集合中选出A个元素的方法.将这些选法按照含有A中元素的个数A进行分类,A.考虑含有A中A个元素的选法数.先确定A中的A个元素,有A种方式,接着确定A中的A个元素,有A种方法.由乘法法则,恰含A个A中元素的方法有A种,根据加法法则对A求和定理得证.
<start> O O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON O O O O O O O <eos>
上面给出了8个经常使用的组合恒等式,还有许多其他组合恒等式没有列出来.总结一下有关组合恒等式的证明方法,大致有以下几种.
<start> O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O <eos>
已知恒等式代人并化简;
<start> O O B-CON I-CON I-CON O O O O O O <eos>
使用二项式定理比较相同项的系数,或者进行级数的求导或者积分;
<start> O O B-CON I-CON I-CON O O O O O O B-CON O B-CON I-CON O O O O O B-CON I-CON O O O O O B-OPR I-OPR O <eos>
例A证明以下组合恒等式.\\
<start> O O O O O O O O B-CON I-CON I-CON O O O <eos>
证(1)由二项式定理有
<start> O O O O O B-CON I-CON I-CON O O O <eos>
在上面的公式中令A即可.\\
<start> O O O O O O O O O O O O O O <eos>
知识点:二项式\\
<start> O O O O B-CON I-CON I-CON O O <eos>
改变求和的下限\\
<start> O O B-CON I-CON O O O O O <eos>
组合数与另一个重要的计数模型非降路径问题有着密切的联系.考察图12.3.设A是正整数,从A点到A点
<start> O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
囱A的非降路径是一条折线,这条折线由A次移动构成,每次允许向上或者向右移动一步.问:不同的非降路径有多少条?
<start> O O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O <eos>
不同的路径取决于A步的选择,其中包含A步向右,A步向上.这种路径条数等于从A个位置中选A个位置的方法数,即A或A.下面考虑这个问题的其他情况.
<start> O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
给定非负整数A,其中A.从A点到A点的非降路径数等于从A点到A点的非降路径数,这相当于坐标平移,或者说在两类路径之间建立了一一对应.因此这种路径条数等于A.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O <eos>
设A是非负整数,其中A.从A点经过A点到A点的非降路径数等于从A点到A点的非降路径数与从A点到A点的非降路径数之积.这里采用了分步处理的思想.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
利用非降路径模型可以解决实际的组合计数问题.请看下面的例子.
<start> O O O I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O <eos>
例A求集合A上的单调递增函数个数.
<start> O O O B-CON I-CON O O O O I-CON I-CON I-CON I-CON I-CON O O O <eos>
解考虑集合A上的单调递增函数A.如图A所示,可以将自变量看作横坐标,对应的函数值看作纵坐标,得到A个点.在图上增加A和A两个点,并按照下面的方法连接这A2个点:如果A不等于1,那么从A点开始向上连接到A点.从A点先向右再向上连接到A点,依照“先向右,后向上”的规则顺次连接A点,A直到A点.而这条连线恰好构成从A点到A点的一条非降路径.显然这种非降路径与单调函数是一一对应的,只需计数非降路径条数就得到所求的单调函数个数.根据公式,非降路径数是A.因此集合A上的单调递增函数个数也是A.
<start> O O O B-CON I-CON O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON O O O O O I-CON O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
可以将上述结论推广.设A,那么从A到A的单调函数（包括单调递增与单调递减函数)个数等于从A点到A点的非降路径数的两倍,即A.
<start> O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例A在计算机算法的设计中,栈是一种很重要的数据结构.下面考虑一个涉及栈输出的计数问题.设有正整数A,从小到大排成一个队列.将这些整数按照排列的次序依次压人一个栈(即后进先出栈).当后面的整数进栈的时候,已经在栈中的整数可以在任何时刻输出.问:可能有多少种不同的输出序列?例如整数A可能的输出序列有A;对应的操作是:1进栈,1出栈,2进栈,2出栈,3进栈,3出栈.也可能输出A;对应的操作是:1进栈,1出栈,2进栈,3进栈,3出栈,2出栈.
<start> O O O O O O O O O O O O O B-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O B-CON O O O O O O O O O B-CON O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O <eos>
解将进栈、出栈分别记作A,一个输出对应了A个A个A的排列,且排列的任何前缀中的A的个数不少于A的个数.考虑非降路径的模型,从A点出发,将排列中的A看作向右走一步,A看作向上走一步,就可以得到一条从A点到A点不穿过对角线A的非降路径.
<start> O O O B-OPR O O B-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
由欧拉公式及其推广可以进一步得到平面图的一些性质.
<start> O B-CON I-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON O O O O O O <eos>
定理A设A是连通的平面图,且每个面的次数至少为A,则A的边数A与顶点数A有如下关系:
<start> O O O O O O O O O B-CON I-CON I-CON O O O O B-CON O O O O O O O O O O O B-ATT I-ATT O O B-CON I-CON I-CON O O O O O O O <eos>
证由定理11.9,
<start> B-CON I-CON I-CON I-CON O O O O O <eos>
定理A与A都是非平面图.
<start> O O O O O O O B-CON I-CON I-CON I-CON O <eos>
证用反证法.假设A是平面图,由于A中无环和平行边,所以每个面的次数均大于等于3.A有5个顶点和10条边,由定理A,应该有
<start> O O B-CON I-CON I-CON O O O O O B-CON I-CON B-CON O O O O O O B-CON O B-CON I-CON I-CON O O O O O B-CON O O O O O O O O O O O O O O B-CON I-CON O O O O B-CON O O O O O O O O O <eos>
矛盾,所以A不是平面图.
<start> O O O O O O O O B-CON I-CON B-CON O <eos>
类似地,假设A是平面图,由于A中最短圈的长度为4,从而每个面的次数均大于等于4.A有6个顶点和9条边,应该有
<start> O O O O O O O O B-CON I-CON B-CON O O O O O B-CON I-ATT B-CON O B-ATT I-ATT O O O O O O O B-CON O O O O O O O O O O O O O O B-CON I-CON O O O B-CON O O O O <eos>
矛盾,所以A也不是平面图.
<start> O O O O O O O O O B-CON I-CON B-CON O <eos>
定理A设A是A阶A条边的极大平面图,则
<start> O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O <eos>
证由于极大平面图是连通图,由欧拉公式得
<start> O O O B-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O <eos>
又因为A是极大平面图,由定理A的必要性可知,A的每个面的次数均为3,所以
<start> O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O B-ATT I-ATT I-ATT O O O O O O O B-CON O O O O O O O O O <eos>
推论设A是A阶A条边的简单平面图,则
<start> O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O <eos>
证设在A上添加A条边使其成为极大平面图,A.由定理A.得证A
<start> O O O O O O O O O B-CON O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O <eos>
现在回过来证明定理A的充分性:如果简单连通平面图A的每个面的次数都等于3,则A为极大平面图.
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O O B-CON O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
知识点:平面图概
<start> O O O O B-CON I-CON B-CON O <eos>
又因为A是连通的,由欧拉公式可知念与欧拉定理
<start> O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON <eos>
若A不是极大平面图,则A中一定存在不相邻的顶点A,使得A还是简单平面图,而A的边数A,故
<start> O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O B-REL I-REL I-REL O B-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O B-ATT I-ATT O O O <eos>
这与定理A的推论相矛盾.
<start> O O O O O O O O O O O O <eos>
为了叙述平面图的充分必要条件,要先引人同胚的概念.
<start> O O O O B-CON I-CON I-CON O O O O O O O O O O O O B-REL I-REL O O O O <eos>
定义A设A为图A的一条边,在A中删除A,增加新的顶点A,使A均与A相邻,称为在A中揷入2度顶点A.设A为A中一个2度顶点,A与A相邻,删除A,增加新边A,称为在A中消去2度顶点A.
<start> O O O O O O B-CON O O O O B-CON O O O O O O O O O O O O B-CON I-CON O O O O O O O B-REL I-REL O O O O O O O O O B-CON B-CON I-CON O O O O O O O O O O B-CON B-CON I-CON O O O O B-REL I-REL O O O O O O O O B-CON O O O O O O O O O O O B-CON I-CON O O <eos>
若两个图A与A同构,或通过反复揷人、消去2度顶点后同构,则称A与A同胚.
<start> O O O O O O O B-REL I-REL O O O O O O O O O O O O B-REL B-CON I-CON O B-REL I-REL O O O O O O B-REL I-REL O <eos>
在图A中,(a)与A同胚,A与A同胚.
<start> O O O O O O O O O O B-REL I-REL O O O O B-REL I-REL O <eos>
下面给出平面图的两个充分攵要条件,证明都超出了本冑的范用拝.定理11.15(Kuratowski定理1)图A是平面图当且仅当A中既不含与A同胚的子图,也不含与A同胚的子图.
<start> O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O B-REL I-REL O B-CON I-CON O O O O O O B-REL I-REL O B-CON I-CON O <eos>
定理11.16(Kuratowski定理2)图A是平面图当且仅当A中既没有可以收缩到A的子图,也没有可以收缩到A的子图.
<start> O O O O O O O O O O O O O O O O O O O O O O B-CON O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O B-CON I-CON O <eos>
关于边的收缩见定义A.
<start> O O B-CON O O O O O O O O <eos>
例A证明彼得松图不是平面图.
<start> O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O <eos>
证在图A中(a)是彼得松图,收缩边A,得到(b),它是A.由Kuratowski定理,彼得松图不是平面图.
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O <eos>
还可以这样证明:删去(a)中的两条边A和A,得到(c).不难看出,它与A同胚.
<start> O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O B-REL I-REL O <eos>
本章最后介绍图着色问题和四色定理.
<start> O O O O O O B-CON I-OPR I-OPR I-CON I-CON O B-CON I-CON I-CON I-CON O <eos>
定义A设无向图A无环,对A的每个顶点涂一种颜色,使相邻的顶点涂不同的颜色,称为图A的一种点着色,简称着色.若能用A种颜色给A的顶点着色,则称A是A-可着色的.
<start> O O O O B-CON I-CON B-CON O O B-CON O O O O O O B-CON I-CON O O O O O O O B-REL I-REL O B-CON I-CON O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O <eos>
图的着色问题就是要用尽可能少的颜色给图着色.图A中给出各图的着色,不难验证所用的颜色数是最少的.(a),(b)是圈,偶圈要用2种颜色,奇圈要用3种颜色.(c),(d)分别称作9阶和8阶轮图,奇阶轮图要用3种颜色,偶阶轮图要用4种颜色.
<start> B-CON O O O O O O O O O O O O O O O O O B-CON O O O B-CON O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O B-CON O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O B-CON O O O O O O O O O O B-CON O O O O O O O <eos>
图着色问题有着广泛的应用.当试图在有冲突的情况下分配资源时,就会自然地产生这个问题.例如,有A项工作,每项工作需要一天的时间完成.有些工作由于需要相同的人员或设备而不能同时进行,问:至少需要几天才能完成所有的工作?用图描述如下:用顶点表示工作,如果两项工作不能同时进行就用一条边连接对应的顶点.工作的时间安排对应于这个图的点着色:着同一种颜色的顶点对应的工作可以安排在同一天,所需的最少天数正好是这个图着色所需要的最少颜色数.
<start> B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O <eos>
又如,计算机有A个寄存器,现正在编译一个程序,要给每一个变量分配一个寄存器.如果两个变量要在同一时刻使用,则不能把它们分配给同一个寄存器.我们构造一个图,每一个变量是一个顶点,如果两个变量要在同一时刻使用,则用一条边连接这两个变量.于是,这个图的A-着色对应给变量分配寄存器的一种安全方式:给着不同颜色的变量分配不同的寄存器.
<start> O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O B-CON O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
还有一个应用是无线交换设备的波长分配.有A台设备和A个发射波长,要给每一台设备分配一个波长.如果两台设备靠得太近,则不能给它们分配相同的波长,以防止干扰.以设备为顶点构造一个图,如果两台设备靠得太近,则用一条边连接它们.于是,这个图的A-着色给出一个波长分配方案:给着不同颜色的设备分配不同的波长.
<start> O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例A是2-可着色的当且仅当A为二部图.
<start> O O O O O O O I-OPR O O O O O O O B-CON I-CON I-CON O <eos>
证设A是2-可着色的,取A的一个着色方案,它用两种颜色1和2.令A是所有着颜色1的顶点,A是所有着颜色2的顶点,则A中任意两点都不相邻,A中任意两点也都不相邻,从而A是二部图.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON O O O O O O O O O O B-REL I-REL O O O O O O O O O O B-REL I-REL O O O O O O O B-CON O <eos>
反之,设A是二部图A,给A中的顶点着颜色A中的顶点着颜色2,得到A的一个着色方案,从而A是2-可着色的.
<start> O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例A给出图A所示各图颜色尽可能少的着色.
<start> O O O O O O O O O B-CON O O O O O O O O O O <eos>
解图11.19(a)是一部图,可以用两种颜色着色,显然它也至少要用两种颜色,如图A所示.图A是彼得松图,里面的5个页点是一个周,要用3种颜色.给它们着色厉,不难仍用这A色,如图A所示.对于图A,先用3种彥色给最外面的3个顶点着色,然后仍用这3种颜色给中层的3个页点着色.由于每个页点都与最外面测试题11.1211.13的两个顶点相邻,故着色的方法是唯一的.最厉,最里面的顶占由于的的3个页点相邻,必须用第4种颜色着色,如㠽A所示.
<start> O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O B-CON O O B-CON I-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O B-CON O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O <eos>
着色问题与哈密顿回路问题、货郎担问题一样,也是NP难问题,至今没有找到有效的算法.
<start> B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O <eos>
在历史上,着色问题起源于地图着色.19伞纪50年代一个青年学生注意到可以用4种颜色给英格兰的郡地图着色,使得相邻的郡着不同的颜色.在这个基础上,他猜想任何地图都可以用4种颜色着色.他的弟弟是德-摩根的学生,把哥哥的这个想法告诉了德-摩根.德-摩根对这个问题非常感兴趣并把它公布于众.这就是著名的四色猜想.
<start> O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-REL I-REL O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
地图是连通无桥平面图的平面嵌人,每一个面是一个国家(或省、市、区等).若两个国家有公共的边界,则称这两个国家是相邻的.对地图上的每个国家涂上一种颜色,使相邻的国家涂不同的颜色,称为对地图的面着色,简称地图着色.地图着色问题就是要用尽可能少的颜色给地图着色.
<start> O O O O O O I-CON B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT O O O O O O O O O B-REL I-REL O O O O O O O O O O O O O O O O O O O B-REL I-REL O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
地图的面着色可以转化成平面图的点着色.
<start> O O O O O O O O O O O B-CON I-CON I-CON O O O O O <eos>
定义A设A是一个平面图的平面嵌人,构造图A如下:在A的每一个面A中放置一个顶点A.设A为A的一条边,若A在A的面A与A的公共边界上,则作边A与A相交,且不与其他任何边相交.若A为A中的桥且在面A的边界上,则作以A为端点的环AA.称A为A的对偶图.
<start> O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON O O O O O O O O O O B-CON O O O O O O B-CON I-CON O O O O O O O O O B-CON O O O O O O B-CON O O O O B-CON I-CON I-CON I-CON O O O O B-CON O O O O B-REL O O O O O O O O B-CON O I-REL O O O O O O O O O O O O O B-CON O O O O O O O O B-CON I-CON O B-CON O O O O O O O O B-CON I-CON I-CON O <eos>
图A给出两个平面嵌人的对偶图,实线和空心点是平面嵌人,虚线和实心点是对偶图.实际上这两个平面嵌人是同一个平面图的平面嵌人.
<start> O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O <eos>
地图是无桥的平面图,它的对偶图无圈.由于地图上的国家与它的对偶图的顶点一一对应,且两个国家相邻当且仅当对应的顶点相邻,因此可以把地图的面着色转化成它的对偶图的点着色.由于平面图的对偶图是平面图,从而地图着色(面着色)可以归结于平面图的点着色.因此,四色猜想的提法后来变成:任何平面图都是4-可着色的.1890年希伍德证明任何平面图都是5-可
<start> O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O <eos>
它们对应的树如图A所示,其中A对应于(1),A对应于(2),A对应于(3),A对应于(4),A对应于(5).(4)对应两棵非同构的树,在一棵树中两个2度顶点相邻,在另一棵树中不相邻;其他情况均对应一棵非同构的树.
<start> O O O O O B-CON O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-REL I-REL O B-CON O O O O B-CON O O O O B-ATT B-CON I-CON O O O O O O O B-CON O O O O O O O O O O O O O O O B-REL I-REL O B-CON O <eos>
图,称其唯一的分支点为星几片树叶?
<start> B-CON O O O O O O B-CON I-CON O O O O O B-CON I-CON O <eos>
例A树A有一个3度顶点,3个2度顶点,其余顶点均为树叶,问A有
<start> O O B-CON O O O O O B-ATT B-CON I-CON O O O B-CON B-ATT I-CON I-CON O O O B-CON I-CON O O B-CON I-CON O O O O <eos>
解设A有A片树叶,由捯于手定理和定理A,
<start> O O O O O O B-CON I-CON O O O O B-CON I-CON I-CON O B-CON I-CON O O <eos>
定A如果无向图A
<start> O O O O B-CON I-CON I-CON O <eos>
图A在A中的边称为A的树枝,不在A中的边为A的弜糸.称A的所有弦的导出子图为A的余树,记作A.
<start> B-CON O O O O O B-CON O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O I-CON O O O O B-CON O O O O O <eos>
注意A不一定连通,也不一定不含回路.在冬10.3所示苳中,实边庝为该图的一棵生成树A,余树A为虚边所示,它不连通,同时含有回路.
<start> O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O B-CON O O O B-CON I-CON B-CON O O O B-CON O O O I-CON O O O O O O O O O O O O B-CON I-CON O <eos>
定理A无向图A有生成树当且仅当A是连通图.
<start> O O O B-CON I-CON I-CON O O B-CON I-CON B-CON O O O O O O B-CON I-CON I-CON O <eos>
证必要性显然.下面证明充分性.若A中无回路,则A为自己的生成树.若A中含圈,任取一圈,随意地删除圈上的一条边;若仍有圈,再任取一个圈并删去这个圈上的一条边,重复进行,直到最后无圈为止.最后得到的图无圈(当然无回路)、连通且是A的生成子图,因而是A的生成树.
<start> O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O O B-CON O O O O O O O O O O O B-CON O O O O O O O O O B-CON O O O O O O B-CON O O O O O B-CON O O O O B-CON O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON <eos>
定理A的证明是构造性证明,这个产生生成树的方法称为破圈法.
<start> O O O O O O O O O O O O O O O O O B-CON I-CON B-CON O O O O O B-CON I-CON I-CON O <eos>
由定理A和树的边数等于顶点数减1可立即得到下述推论.推论设A为A阶A条边的无向连通图,则A.(习题九第45题)
<start> O O O O O B-CON O B-ATT I-ATT O O B-ATT I-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O <eos>
下面讨论连通带权图中的最小生成树.
<start> O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON I-CON O <eos>
定义A设无向连通带权图A是A的一棵生成树,A的各边权之和称为A的权,记作A的所有生成树中权最小的生成树称为A的最小生成树.
<start> O O O O O O I-CON I-CON B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O O B-ATT B-ATT O O O O O O B-ATT O O O O O O O B-CON I-CON I-CON O B-ATT O O O B-CON I-CON I-CON O O O O B-CON I-CON B-CON I-CON I-CON O <eos>
求最小生成树已经有许多种算法,这里介绍避圈法(Kruskal算法).
<start> O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON O O I-CON O O I-CON I-CON I-CON I-CON I-CON O O <eos>
设A阶无向连通带权图A,W>有A条边.不妨设A中没有环(否则,可以将所有的环先删去),将A条边按权从小到大顺序排列,设为A.
<start> O O O O O O O B-CON I-CON I-CON O O O O O O O B-CON O O O O O O O O B-CON O O O O O O O O O O B-CON O O O O O O O O B-CON O B-CON O O O O O O O O O O O O O <eos>
取A在A中,然后依次检查A.若A与已在A中的边不能构成回路,则取A在A中，否则弃去A.
<start> O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O B-CON I-CON O O O O O O O O O O O O O O <eos>
算法停止时得到的A为A的最小生成树(证明略).
<start> O O O O O O O O O O O O B-CON I-CON B-CON I-CON B-CON O O O O O O <eos>
例A求图A所示两个图中的最小生成树.
<start> O O O O O O O O O O O O B-CON I-CON I-CON I-CON B-CON O <eos>
解用避㒽法,求出的最小生成树如图A中实线所示,它们的权分别为6和12.
<start> O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O B-ATT O O O O O O O O <eos>
例10.4数据分析中的单链聚类.在数据分析中经常用到各种不同的聚类捛作,所谓聚类捛作京是把数据集A中的数据按照它们之间的相似程度最集成若干个类.这种
<start> O O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
知识点:生成树捛作在数据挖掘、图像处理、电路叒计、系统划分中经常用到.下面考虑一种最与最小生成树简单的单链聚类.
<start> O O O O B-CON I-CON I-CON O O O O O O O O B-OPR I-OPR O O O O O O O O B-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O <eos>
设有一组离散数据A上定义丁一个相似度函数A.对于任何两个数据A与A的相似度函数的值为A,通常取AA,并且A具有对称性质,即A.
<start> O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-ATT I-ATT O O O O O O <eos>
离”.为此如下定义划分A的最小间隔A.
<start> O O O O O O O O O B-OPR I-OPR O O O O O O O O <eos>
对任何两个不同的子类A,定义它们之间的距离A是A中数据与A中数据的相似度的最小值,即
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O B-ATT I-ATT I-ATT O O <eos>
A聚类A的最小间隔
<start> O B-OPR I-OPR O O O O O O <eos>
我们的问题是:给定数据集A和A上的相似度函数A以及正整数A,如何求使得A达到最大值的A聚类A?
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT O O B-CON I-ATT O O <eos>
可以利用最小生成树的Kruskal算法解决这个问题.定义带权完全图A,其中AA,对于任意A,边A的权为A.根据Kruskal算法,先将边按照权从小到大的顺序排序为A.初始A中没有边,是由A个孤立顶点构成的森林.换句话说,A有A个连通分支.接着,依次按照权从小到大的顺序考察A的每条边,只要不构成圈就把它加到A中.在加人边的过程中计数A的连通分支个数.直到A恰好含有A个连通分支时算法停止.这时候,所得到的A个连通分支恰好就是所求聚类的A个子类A,它的最小间隔达到最大.
<start> O O O O B-CON I-CON B-CON I-CON I-CON O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O B-CON O O B-ATT O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O B-CON O O B-ATT O O O O O O O O O O O O O O O O O O B-CON O O O O O B-CON I-CON B-CON I-CON O O O B-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O <eos>
定义A若有向图的基图是无向树,则称这个有向图为有向树.一个顶点的人度为0、其余顶点的人度为1的有向树称为根树.人度为0的顶点称为树根,人度为1出度为0的顶点称为树叶,人度为1出度不为0的顶点称为内点,内点和树根统称为分支点.从树根到任意顶点A的路径的长度(即,路径中的边数)称为A的层数,所有顶点的最大层数称为树高.
<start> O O O O B-CON I-CON B-CON O B-CON B-CON O B-CON I-CON B-CON O O O O O B-CON I-CON B-CON O B-CON I-CON B-CON O O O O O O O B-ATT O O O O O O O O O B-ATT O O O B-CON I-CON B-CON O O B-CON I-CON O O B-ATT O O O B-CON O O O B-CON I-CON O O B-ATT O O O B-ATT O O O O O O O B-CON O O O O O O O B-ATT O O O O O O O O O O O O O O B-CON I-CON O O O B-CON I-CON O O O B-CON I-CON O O O B-CON I-CON O O O O O O <eos>
在画根树时通常将树根画在最上方,有向边的方向向下或斜下方,并省去各边上的箭头,如图10.6所示.在这棵根树中,有8片树叶,6个内点,7个分支点,高度为5,在树叶A和A处达到.
<start> O O B-CON I-CON O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O B-CON O O O O B-CON I-CON O O O B-CON I-CON O O O O O O O O B-CON O O O O O O O O <eos>
常将根树看成家族树,家族中成员之间的关系由下面的定义给出.则称A为A的父亲,而A为A的儿子.若A的父亲相同,则称A与A是兄弟.
<start> O O B-CON I-CON O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
定义A设A为一棵非平凡的根树,A,若A可达A,则称A为A的祖先,A为A的后代;若A邻接到A(即A,
<start> O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
设A为根树,若将A中层数相同的顶点都标定次序,则称A为有序树.
<start> O O O B-CON I-CON O O O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O <eos>
根据根树A中每个分支点的儿子数以及是否有序,可以将根树分成下列各类.(1)若A的每个分支点至多有A个儿子,则称A为A叉树;又若A又树是有序的,则称它为A叉有序树.
<start> O O B-CON I-CON O O O O B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O I-CON B-CON O O O O O B-CON O O O O O O O O O O O B-CON I-CON I-CON O <eos>
(2)若A的每个分支点都恰好有A个儿子,则称A为A叉正则树;又若A是有序的,则称它为A叉正则有序树.
<start> O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
(3)若A是A叉正则树,且每片树叶的层数均为树高,则称A为A叉完全正则树;又若A是有序的,则称它为A叉完全正则有序树.
<start> O O O O O O O O B-CON I-CON I-CON O O O O B-CON O O O O O O B-CON O O O O O O O I-CON B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON O <eos>
定义A设A为一棵根树,A,称A及其后代的导出子图A为A的以A为根的根子树.
<start> O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O B-CON O B-CON I-CON I-CON O <eos>
二叉正则有序树的每个分支点的两个儿子导出的根子树分别称为该分支点的左子树和右子树.
<start> B-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O B-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON O O B-CON I-CON I-CON O B-CON I-CON I-CON O <eos>
在所有的A叉树中,最常用的是二叉树.下面介绍二叉树的应用.
<start> O O O O B-CON I-CON B-CON O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O O <eos>
定义A设二叉树A有A片树叶A,权分别为A,称A为A的权,其中A是A的层数.在所有有A片树叶,带权A的二叉树中,权最小的二叉树称为最优二叉树.
<start> O O O O B-CON I-CON I-CON O O O O B-CON O O O B-ATT O O O O O O O O O O B-ATT O O O O O O O O O O O O O O O O B-CON O O O B-ATT O O B-CON I-CON I-CON O O B-ATT O O O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON I-CON O <eos>
图A所示的3棵树A都是带权为A的2叉树.它们的权分别为
<start> B-CON O O O O O O B-CON O O O O B-ATT O O O B-CON I-CON B-CON O O O O B-ATT O O O <eos>
下面介绍求最优二叉树的算法一-Huffman算法.
<start> O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON O <eos>
作A片树叶,分别以A为权.
<start> O O O B-CON I-CON O O O O O O B-ATT O <eos>
在所有人度为0的顶点(不一定是树叶)中选出两个权最小的顶点,添加一个新分支点,它以这两个顶点为儿子,其权等于这两个儿子的权之和.
<start> O O O O B-ATT O O O O O O O O O O B-CON O O O O O O O B-ATT O O O O O O O O O O O O O O O O O O O O O O O O O O O B-ATT O O O O O O O O B-ATT O O O <eos>
重复2,直到只有一个人度为0的顶点为止.
<start> O O O O O O O O O O O B-ATT O O O B-CON I-CON O O O <eos>
A等于所有分支点的权之和.
<start> O O O O O B-CON O O O B-ATT O O O <eos>
例A求带权A的最优二叉树.解图10.8给出用Huffman算法计算最优树的过程.(e)为最优树,A.这表明图10.7所示3棵树都不是最优树.
<start> O O O O B-ATT O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O O B-CON I-CON B-CON O O O O O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O B-CON O O O B-CON I-CON I-CON O <eos>
A10,11分别表示A.称这种表示法为等长码表示法.若在传输中,A一双树出现的频率大体相同,用等长码表示是很好的方法.昍当它们出现的频率昍差悬殊时,为了芇省一进制数位,以达到提高效率的目的,就要采用非等长的编码.
<start> O O O O O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O B-CON O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
AA为该等号串的前经.设A是一个等号串集合,若A的任意两个符号串都互不为前缀,则称AA
<start> O O O O B-CON O I-CON O O O O O O O O O B-CON I-CON I-CON B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O <eos>
可用一叉树产生一元前叕码.设A是具有A矣树叶的二叉树,则A的苺个分支点有一个或两一个一元码.由做法可知，树叶A处的等号串的䏍纰均在以
<start> O O O O B-CON O O O O O O O O O O O O O O O B-CON O O B-CON I-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O <eos>
(b)个㔫设A为A的分支点,若A的两条边上,㡳边的标0,右边的标A若A只有A儿子,由它弓出的边可标0,也可以标1.叒A是A的任意A矣树叶,从树根到A的通路上各边的标号A或1A按通路上边的顺度组成的等号串放在A处,A片树叶的A个等号串组成树根到A的通路上的顶点处达到,因而所得符号串集合必㠽A为前叕码.若A是一叉正则树,则由A产生的前叕码是隹一的.或者说,由一棵一叉正则树可以产生唯一的一个一元前纰码.
<start> O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O B-CON I-CON O O O B-CON I-CON O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O B-CON I-CON O O O B-CON I-CON O <eos>
例10.6求图A所示两棵二叉树所产生的二元前缀码.
<start> O O O O O O O O O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
解图A是二叉树,但不是正则的.将苺个分支点弓出的两条边分别标0和1,若树根A儿子弓㚎的边标0,心图A,则产生前叒码为A.图A是一叉正则树,它只能产牛唯一的前叕码,标定后的一是一则树如图10.10（c）所示，前叒码为
<start> O B-CON O O B-CON I-CON B-CON O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O B-CON O O O O O O O O O O O B-CON O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O B-CON O B-CON O O O O O O O O O O O O O O O <eos>
可以用加法法则与乘法法则解决A元集上关系和函数的计数问题.
<start> O O O B-OPR I-OPR I-CON I-OPR O B-OPR I-OPR I-OPR I-OPR O O O I-CON I-CON O B-REL I-REL O B-CON I-CON O O O O O O <eos>
(1)A上的自反关系有多少个?
<start> O O O O O O B-REL I-REL I-REL I-REL O O O O O <eos>
(2)A上的对称关系有多少个?
<start> O O O O O O B-REL I-REL I-REL I-REL O O O O O <eos>
(3)A上的反对称关系有多少个?
<start> O O O O O O B-REL I-REL I-REL I-REL I-REL O O O O O <eos>
(4)A上的函数有多少个?其中双射函数有多少个?
<start> O O O O O O B-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O <eos>
解(1)在A上自反关系的关系矩阵中,主对角线元素都是1,其他位置的元素可以是1,也可以是0,有两种选择.这种位置有A个,根据乘法法则,自反关系的个数是A.
<start> O O O O O O O B-REL I-REL I-REL I-REL O O I-CON B-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O B-REL I-REL I-REL I-REL O O O O O O <eos>
(2)考虑A上对称关系的矩阵.先考虑主对角线上的元素.对于主对角线的每个位置,元素可以选择0或1,有两种选法.再考虑不在主对角线上的元素,它们的值的选择并不是完全独立的.因为矩阵是对称的,A行A列的元素A必须与A行A列的元素A相等.因此当矩阵的上三角元素(或者下三角元素)的值确定以后,另一半对称位置的元素就完全确定了.这种能够独立选择0或者1的位置有A个.加上主对角线的A个位置,总计A个位置,根据乘法法则,构成矩阵的方法数是A.
<start> O O O O O O O B-REL I-REL I-REL I-REL O B-CON I-CON O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON O B-REL I-REL O O O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O B-CON I-CON I-CON I-CON <eos>
(3)类似于(2)的分析,也分两步考虑,区别在于对非主对角线位置元素取值的约束条件不同.将这些位置分成A组,每组包含处在对称位置的两个元素A和A.根据反对称的性质,A与A的取值有以下3种可能:
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O B-ATT I-OPR O O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT O O O O O B-CON I-CON O O O O O O B-ATT I-ATT I-ATT O O O O O O O O O O O O O O O O O O <eos>
因此所有这些位置元素的选择方法数为A.再考虑到主对角线元素的选取,由乘法法则总方法数为A.
<start> O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O <eos>
(4)设A,任何A上的函数A都可以表示成下述形式:
<start> O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O <eos>
其中每个A有A种可能的选择,根据乘法法则,有A个不同的函数.如果A是双射的,那么当A确定以后,A只有A种可能的取值.类似的分析可以知道,A只有A种可能的取值,A只有1种取值.根据乘法法则,构成双射函数的方法数是A.
<start> O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON O O O O O B-REL I-REL O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O B-REL I-REL B-CON I-CON O O O O O O O <eos>
例A根据IPv4网络协议,每个计算机的地址是32位二进制数字构成的串.如图A所示,A类地址第一位是0,接着7位网络标识,再接着24位主机标识.B类地址前两位是10,接着14位网络标识,再接着16位主机标识.C类地址前三位是110,接着21位网络标识,再接着8位主机标识.此外,A类地址中全1不能做网络标识,在三类地址中全0和全1都不能作为主机标识.问:按照IPv4协议,在Internet中有多少个有效的计算机地址?
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O <eos>
解令A是Internet上计算机的有效地址数,A和A分别表示A类、A类和A类的有效地址数.由加法法则,A.
<start> O O O O B-CON I-CON I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O B-CON I-CON I-CON I-CON O O O <eos>
为了找到A,由于1111111是无效的,故存在A个A类的网络标识.对于每个网络标识,存在A个主机标识,这是由于全0和全1组成的主机标识是无效的。因
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON O I-CON O O O O O O <eos>
为了找到A和A,首先注意到存在A个B类网络标识和A个C类网络标识.对每个B类网络标识存在着A个主机标识,而对每个A类网络标识存在着A254个主机标识,这也是考虑到全0和全1组成的主机标识是无效的.因而,A532676608.可以断言IPv4协议中计算机的有效地址总数是AA.面向计算机的广泛使用,这些地址总数已经显得不够用了,正在更新的IPv6协议采用128位地址格式,这将能够提供更多的有效地址.
<start> O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O B-CON O O O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
在这个例题中,先把所有的地址分成A三类,这种分类处理对应了加法法则;而在每一类的计数中使用了分步处理的思想:第一步计数网络标识的数目,第二步计数主机标识的数目,这种分步处理对应了乘法法则.许多计数问题都是通过分类处理和分步处理的思想来求解的.
<start> O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O <eos>
排列和组合的计数是基本的计数问题.根据从集合中选择元素的有序与无序、是否允许重复等限制条件,可以将这个问题划分成4个子类型一一集合的排列、集合的组合、多重集的排列、多重集的组合.先考虑不允许重复的选取一一集合的排列与组合的计数.
<start> O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O O O O O O O B-CON I-CON O O O O B-CON I-CON O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O <eos>
(1)从A中有序选取的A个元素称作A的一个A排列.A的不同A排列总数记作A时的排列称为A的全排列.
<start> O O O O O O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O O O B-CON I-CON I-CON O <eos>
(2)从A中无序选取的A个元素称作A的一个A组合.A的不同A组合总数记作A.关于A和A有下述公式.
<start> O O O O O O O O O O O O O B-CON I-CON O O O O O O O B-OPR I-OPR O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O O O <eos>
定理A设A为自然数,规定A,则
<start> O O O O O O B-CON I-CON I-CON O O O O O O <eos>
(2)A证显然当A时不存在满足条件的排列和组合,下面考虑A的情况.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
(1)首先确定排列中的第1个元素,有A种选择的方式.然后确定排列的第2个元素,它只能取自剩下的A个元素,有A种选法.类似地,选择第3个元素,第4个元素,A,第A个元素的方式数依次为A.根据乘法法则,总的选法数为
<start> O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON O O O O B-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O <eos>
(2)分两步构成A排列.首先无序地选出A个元素,然后再构造这A个元素的全排列.无序选择A个元素的方法数是A;针对每种选法,能构造A!个不同的全排列.根据乘法法则,不同的A排列数满足
<start> O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON O B-CON I-CON I-CON O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O O O O I-CON O O O <eos>
组合数A恰好是二项式A的展开式中A项的系数,通常称作二项式系数,有时也记作A.
<start> O O O O O O O B-CON I-CON I-CON O O O O O O O B-CON O B-CON I-CON O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O <eos>
推论1元素依次排成一个圆圈的排列称为环排列.A的A环排列数等于A.
<start> O O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O <eos>
证设线排列的A个元素依次为A,将A接在A的后边就组成一个环排列.只要相邻关系不变,这A个元素中的任何一个作为线排列的首元素,首尾相连所构成的环排列都相同.因此环排列数是线排列数的A.
<start> O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O B-REL I-REL I-REL I-REL O O O O O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O I-CON I-CON O O O O <eos>
这3个公式都可以通过把定理A的公式代人右边化简得到.下面介绍另一种组合分析的证明方法.所谓组合分析就是根据等式类型设计一个组合计数问题,使得公式两边都对应于这个问题的计数结果.下面以(2)和(3)为例来说明这种证明方法.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
证(2)设A是A元集合,对于A的任意A组合A,都存在一个A的A组合A与之对应.显然不同的A组合对应了不同的A组合,反之也对,因此A的A组合数恰好与A的A组合数相等.
<start> O O O O O O O O O B-CON I-CON O O O O O O O O B-OPR I-OPR O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O B-OPR I-OPR O O O O O O O B-OPR I-CON O O O O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O <eos>
(3)考虑(2)中的A集合,将A的所有A组合划分成两类:包含1的A组合,不含1的A组合.如果一个A组合包含1,那么它的其余A个元素取自A,有A种取法;如果一个A组合不含1,那么它的其余A个元素都取自A,有A种取法.根据加法法则,A的A组合的总数等于A.
<start> O O O O O O O O O O O B-CON I-CON O O O O O O O B-OPR I-OPR I-OPR O O O O O O O O O O B-OPR I-OPR O O O O O O B-OPR I-OPR O O O O O O B-OPR I-OPR O O O O O O O O O O O O B-CON I-CON O O O O O O O B-OPR I-OPR O O O O O O B-OPR I-OPR O O O O O O O O O O O O B-CON I-CON O O O O O O O O B-OPR I-OPR O O O B-CON I-CON I-CON I-CON O O O O B-OPR I-OPR O O O O O O O <eos>
上述公式有着广泛的应用,比如利用(2)将A写作A.而(3)中的公式就是我国古代著名的杨辉三角形(见图12.2),也称作Pascal公式.这些公式广泛用于组合公式的化简和恒等式的证明.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O <eos>
为了讨论允许重复的选取问题需要引人多重集的概念.多重集A,A是A种不同的元素,A表示A在A中出现的次数,称作A的重复度,其中AA.当A时表示有足够多的A以备选取.例如AA都是多重集的实例.多重集A的子集也是多重集,可以记作A,A,其中A.如果元素A不出现在子集A中,则A.
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O I-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O B-CON I-CON O O B-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON O O O <eos>
定义A设A为多重集,A表示A中元素的总数.
<start> O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON O O O O <eos>
(1)从A中有序选取的A个元素称为多重集A的一个A排列.A的排列称为A的全排列.
<start> O O O O O O O O O O O O O B-CON I-CON O O B-CON I-CON I-CON O O O O O B-CON I-CON O O O B-CON I-CON O O O O B-CON I-CON I-CON O <eos>
(2)从A中无序选取的A个元素称作多重集A的一个A组合.
<start> O O O O O O O O O O O O O B-CON I-CON O O B-CON I-CON I-CON O O O O O B-OPR I-OPR O <eos>
对于多重集A的A排列和组合数,下面给出某些特殊情况的公式,而一般的计数只能利用生成函数或包含排斥原理来求解.有关生成函数的知识将在下一章介绍.
<start> O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O B-OPR I-OPR O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O <eos>
定理A设A为多重集,
<start> O O O O O O B-CON I-CON I-CON O <eos>
(1)A的全排列数是A.
<start> O O O O O B-CON I-CON I-CON O O O O <eos>
证(1)在A个位置中先选择A个位置放A,有A种方法;再从剩下的A个位置中选择A个位置中放A,有A种方法;A最后在A个位置中选择A个位置放A,有A方法.根据乘法法则,
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
(2)A个位置中的每个位置都有A种选法,由乘法法则得A.多重集A的全排列数也记作A,这个数恰好是多项式A的展开式中A项的系数,也称作多项式系数.关于它的性质在后面还会进一步加以讨论.
<start> O O O O O O O O O O O O O O O O O O I-CON O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON O O B-CON O O O O O O B-CON I-CON O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O <eos>
再考虑多重集A的A组合.
<start> O O O B-CON I-CON I-CON O O O O O O <eos>
定理A当A时,多重集A的A组合数是A.
<start> O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON O O O O <eos>
证可以使用一一对应的思想来证明这个定理.
<start> O O O O O B-REL I-REL I-REL I-REL O O O O O O O O O O O <eos>
A的一个A组合为A的一个子多重集A,其中
<start> O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O <eos>
这个方程称为不定方程,可以在它的非负整数解A和A个A个0的排列之间建立一一对应:对于解A,排列具有下述形式:
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
其中A个0将A个1分成A段,每段含有1的个数分别为A.不难看出，这个排列是多重集A的全排列,根据定理A,这样的排列有
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O O O O O B-CON I-CON O <eos>
与选取问题的计数类似,不定方程整数解的计数也是一个重要的组合计数模型,许多组合计数问题都可以使用这两个计数模型来求解,解决的关键在于将实际问题与适当的计数模型之间建立对应关系,然后应用相应的计数公式.
<start> O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O I-CON O I-CON O <eos>
解采用分步处理的方法.先固定A和A,中间揷人7个字母,构成一个结构,有A种方法,其中2表示A在A前面与A在A前面有两种可能.将这个结构看作一个大字母再与其余17个字母进行全排列,有18!种排列的方法.根据乘法法则,A.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O <eos>
例A把A个人分成A组,每组两人,求不同的分法数A.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
解因为这个分组是无序的,而且每个组的人数还有等于2的限制,没有直接的计数模型可以使用.如果是有序分组,可以采用分步处理的方法,先选出两个人放到第1组,接着在剩下的人中选出两个人放到第2组,A,最后将剩下的两个人放到第A组.进行有序分组的另一种方法是:先找出所有A个无序分组,然后对每一个分组方案中的A个组用A进行标记,标记的方法数恰好是A!,从而得到所有的有序分组.因此这个问题的求解思路是:先计数有序分组的方法,然后除以A!,就得到无序分组的方法数.
<start> O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O <eos>
(7)完全一部图A.
<start> O O O O O O O B-CON O O <eos>
给图A中各图的顶点用尽量少的颜色着色.
<start> O O O O O B-CON O B-CON I-CON O O O O O O O O O O <eos>
假设当两台无线发射设备的距离小于A时不能使用相同的频率.现有6台设备,表A给出它们之间的距离,问它们至少需要几个不同的频率.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
有6名博士生要进行论文答辩,答辩委员会的成员分别为A张教授,李教授,王教授A李教授,赵教授,刘教授A张教授,刘教授,王教授A赵教授,刘教授,王教授A张教授,李教授,孙教授A李教授,刘教授,王教授A,那么这次论文答辩必须安排在多少个不同的时间进行?49.求图A所示各平面图的对偶图.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
用尽量少的颜色给图A中的地图面着色,并利用它们的对偶图的点着色说明你所用的颜色是最少的.
<start> O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O <eos>
加法法则与乘法法则是最基本的计数法则.
<start> B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O <eos>
加法法则使用的条件是事件A与A产生的方式不能重叠.也就是说,每一种产生的方式不能同时属于两种事件.
<start> B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
乘法法则:设事件A有A种产生方式,事件A有A种产生方式,当A与A产生的方式彼此独立时,“事件A与A”有A种产生方式.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
乘法法则使用的条件是事件A与A产生的方式彼此独立.换句话说,事件A与事件A对产生方式的选择彼此没有影响.
<start> B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
乘法法则也可以推广到A个事件的情况.设A是A个事件,它们的产生方式分别有A种,当其中任何两个事件产生的方式都彼此独立时,事件“A与A与A与A”有A种产生的方式.
<start> B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
着色的,称作五色定理.此后一直没有什么进展,直到1976年两位美国数学家阿佩尔和哈肯终于证明了它,从而使得四色猜想成为四色定理.阿佩尔和哈肯的证明是根据前人的证明思路,用计算机完成的.他们证明,如果四色猜想不成立,则存在一个反例,这个反例大约有2000种(后来有人简化到600多种)可能,然后他们用计算机分析了所有这些可能,都没有导致反例,从而证明四色猜想成立.但是,对四色定理的研究并没有到此结束,他们的证明毕竟是用计算机完成的.寻找相对短的、能被人阅读和检查的证明仍是数学家追求的目标.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O <eos>
定理11.17(四色定理)任何平面图都是4-可着色的.
<start> O O O O O O O O B-OPR I-OPR I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O <eos>
判断图A中哪些是欧拉图,哪些是半欧拉图.对欧拉图给出一条欧拉回路.对半欧拉图给出一条欧拉通路.对不是的,说明不是欧拉图或不是半欧拉图的理由.
<start> O O O O O O O O B-CON I-CON B-CON O O O O B-CON B-CON I-CON B-CON O O B-CON I-CON B-CON O O O O B-CON I-CON I-CON I-CON O O B-CON B-CON I-CON B-CON O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON B-CON O O O B-CON B-CON I-CON B-CON O O O O <eos>
判断图A中哪些是欧拉图,哪些是半欧拉图.对欧拉图给出一条欧拉回路.对半欧拉图给出一条欧拉通路.对不是的,说明不是欧拉图或不是半欧拉图的理由.
<start> O O O O O O O O B-CON I-CON B-CON O O O O B-CON B-CON I-CON B-CON O O B-CON I-CON B-CON O O O O B-CON I-CON I-CON I-CON O O B-CON B-CON I-CON B-CON O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON B-CON O O O B-CON B-CON I-CON B-CON O O O O <eos>
判断下列命题是真是假.
<start> O O O O B-CON I-CON O O O O O <eos>
(1)完全图A是欧拉图.
<start> O O O B-CON I-CON B-CON O O B-CON I-CON B-CON O <eos>
(2)A阶有向完全图是欧拉图.
<start> O O O O O B-CON I-CON B-CON I-CON I-CON O B-CON I-CON I-CON O <eos>
(3)当A为正偶数时,完全二部图A是欧拉图.
<start> O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O <eos>
画一个无向欧拉图,使它具有:
<start> O O O O O B-CON I-CON I-CON O O O O O O <eos>
（1）偶数个顶点,偶数条边.
<start> O O O O O O B-CON I-CON O O O O B-CON O <eos>
(2)奇数个顶点,奇数条边.
<start> O O O O O O B-CON I-CON O O O O B-CON O <eos>
（3）偶数个顶点,奇数条边.(4)奇数个顶点,偶数条边.
<start> O O O O O O B-CON I-CON O O O O B-CON O O O O O O O B-CON I-CON O O O O B-CON O <eos>
5.画一个有向欧拉图,要求同上题.
<start> O O O O O O O B-CON I-CON I-CON O O O O O O O <eos>
在A个长度大于等于3的彼此分离的圈（全为无向的或全为有向的)之间至少加多少条新边（有向的加有向边）才能使所得图为欧拉图?
<start> O O O B-ATT I-ATT O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O B-CON I-CON B-CON O O O O O O O O B-CON I-CON I-CON O <eos>
证明:若有向图A是欧拉图,则A是强连通的.
<start> O O O O B-CON I-CON B-CON O O B-CON I-CON I-CON O O O O B-REL B-REL I-REL O O <eos>
设A是恰含A个奇度顶点的无向连通图.证明A所有的边可以划分成A条边不重的简单通路.
<start> O O O O O O O B-CON B-ATT I-CON I-CON O B-CON I-CON B-CON I-CON I-CON O O O O O O O B-CON O O B-OPR I-OPR O O O B-CON O O O B-CON I-CON I-CON I-CON O <eos>
给出图A中各图的哈密顿回路或哈密顿通路.要求对给出哈密顿通路的说明不存在哈密顿回路的理由,
<start> O O O O O O O O B-CON I-CON I-CON B-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O <eos>
说明图A中各图不是哈密顿图,也不是半哈密顿图的理由.
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON B-CON I-CON I-CON I-CON O O O O <eos>
设A是无向连通图,证明:若A中有桥或割点,则A不是哈密顿图.
<start> O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O B-CON O B-CON I-CON O O O O O B-CON I-CON I-CON B-CON O <eos>
彼得松图既不是欧拉图,也不是哈密顿图.至少加几条新边才能使它成为欧拉图?至少加几条新边才能使它变成哈疝顿图?
<start> B-CON I-CON I-CON I-CON O O O B-CON I-CON B-CON O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON O O O O O O B-CON I-CON B-CON O O O O O O O B-CON O O O O O O B-CON I-CON I-CON B-CON O <eos>
证明图A中(a)不是哈密顿图,但是半哈密顿图.而(b)是哈密顿图.
<start> O O O O O O O O O O B-CON I-CON I-CON I-CON O O O B-CON B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O <eos>
今有A个人去完成A项任务.已知每个人均能与另外A个人中的任何人组成一组（每组两个人)去完成他们共同熟悉的任务,问这A个能否分成A组（每组两人）,每组完成一项他们共同熟悉的任务.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
今有A个人,已知他们中的任何两人合起来认识其余的A个人.证明:当A时,这A个人能排成一列,使得任何两个相邻的人都相互认识.而当A时,这A个人能排成一个圆圈,使得每个人都认识两旁的人.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-REL I-REL O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
某工厂生产由6种不同颜色的纱织成的双色布.已知在一批双色布中,每种颜色至少与其他3种颜色相搭配.证明可以挑出3种双色布,它们恰由6种不同颜色的纱织成.
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O <eos>
国际象棋中的马走日字,即在A格子的马可以走到A中的任何一个,只要棋盘中有这个格子.马从某个格子开始,走遍所有的格子且每个格子只走一次称作马的周游.证明：
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
设A为一无向图.若对于任意的A且A,均有
<start> O O O O B-CON I-CON I-CON O O O O O O O O O O O O O <eos>
则A是哈密顿图.以上结论成立吗?为什么?
<start> O O O B-CON I-CON I-CON B-CON O O O O O O O O O O O O O <eos>
设A是A阶无向简单哈密顿图,则对于任意不相邻的顶点A,均有
<start> O O O O O B-CON I-CON B-CON I-CON B-CON I-CON I-CON I-CON O O O O O O B-REL I-REL I-REL O B-CON I-CON O O O O <eos>
以上结论成立吗?为什么?
<start> O O O O O O O O O O O O <eos>
指出图A中哪些是二部图,并把二部图画成互补顶点子集分列两行的样子.对不是二部图的,说明不是的理由.
<start> O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O <eos>
设二部图A,且A.证明:
<start> O B-CON I-CON I-CON O O O O O O O O <eos>
(1)若A是哈密顿图,则A.
<start> O O O O O O B-CON I-CON I-CON B-CON O O O O <eos>
(2)若A是半哈密顿图,则A.
<start> O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O <eos>
(3)若A,则A不是哈密顿图,也不是半哈密顿图.
<start> O O O O O O O O O O B-CON I-CON I-CON B-CON O O O O B-CON B-CON I-CON I-CON B-CON O <eos>
给出图A中二部图的最大匹配,这个匹配是否是完美匹配?是否是完备匹配?
<start> O O O O O B-CON I-CON I-CON O B-ATT I-ATT I-OPR I-OPR O O O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O B-CON I-CON I-CON I-CON O <eos>
二部图A如图A所示,其中实线边是它的一个匹配A.指出A中关于A的饱和点和非饱和点.给出一条可增广的交错路径,并利用它得到一个比A多一条边的匹配.
<start> B-CON I-CON B-CON O O B-CON O O O O O O B-CON B-CON B-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O B-OPR I-OPR O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O B-CON O O I-CON O <eos>
证明:在A的国际象棋棋盘的一条主对角线上移去两立㧫的方格后,所得棋盘不能用A的长方形不重叠地填满.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
设二部图A为A-正则图,A,证明A中存在完美匹配.
<start> O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O <eos>
A位教员教A门课程,已知每个教员至少能教两门课程,而每门课程至多有两位教员能教,问能否每位教员正好教一门课.27.今有胀、王、李、赽、陈5名学生,报名参加物理、化学、生物3个课外小组活动.已知,张报了物理和化学组,王只报了物理组,李、赵都报了化学组和生物组,陈只报了生物组.根据他们的报名情况,能否从这5名学生中选出3名任这3个小组的组长?
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
又若张报了物理组和化学组,而王、李、赵、陈都只报了生物组,还能选出3名组长吗?为什么?
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
现有4名教师:张、王、李、赵,要求他们去教4门课程:数学、物理、电工和计算机基础，已知张能胜任数学和计算机基础;王能胜任物理和电工;李能胜任数学、物理和电工;而赵只能胜任电工.如何安排，才能使每位教师都教一门自己能胜任的课程并且每门课都有一名教师教?讨论有几种安排方案.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
证明图A中所示各图都是平面图,分别画出各平面图的一个平面嵌人,并验证各面次数之和等于边数的两倍.
<start> O O O O O O O O B-CON O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O B-ATT O O O O O <eos>
图A所示各图都是平面嵌人,先给图中各边标定名字,然后给出图中各面的边界及次数.
<start> B-CON O O O O B-CON O O O O O O O O O O O O B-CON O O O O O O O O O B-CON O O O O B-ATT I-CON O O O O <eos>
给图A(a)重新画两个平面嵌人,使外部面的次数分别为3和4.
<start> O O O O O O O O O O O B-CON I-CON O O O O B-CON I-CON B-CON O O O O O O O O O O <eos>
证明阶数大于等于3的极大平面图没有割点和桥.
<start> O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O B-CON O B-CON O <eos>
判断图11.31中的图是否是极大平面图.
<start> O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
图A是极小非平面图闯?为什么?
<start> B-CON O O O O B-CON I-CON I-CON I-CON O O O O O O <eos>
验证图A所示平面图满足欧拉公式.
<start> O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O <eos>
验证图A所示非连通的平面图满足欧拉公式的推广.37.利用A说明定理A的推论是A阶简单平面的一个必要条件,而不是充分条件.
<start> O O O O O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O <eos>
设A是简单平面图,面数A.证明A中存在次数小于等于4的面.举例说明,当A时,上述结论不真.
<start> O O O B-CON I-CON B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O <eos>
设A是简单平面图，
<start> O O O B-CON I-CON B-CON I-CON B-CON O <eos>
(2)证明当边数小于30时,A.
<start> O O O O O O B-CON O O O O O O O O O <eos>
设A是A阶无向简单图,证明:当A时,A和A中至少有一个是非平面图.
<start> O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
证明图A中的图全为非平面图.
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
图A所示3个图中,哪个(些)是极小非平面图?
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
给下列各图的顶点用尽量少的颜色着色.
<start> O O O O B-CON O B-CON I-CON O O O O O O O O O O <eos>
(1)5阶零图A.
<start> O O O O O O B-CON O O <eos>
(4)6阶完全图A.
<start> O O O O O B-CON I-CON I-CON O O <eos>
(5)6阶轮图A.
<start> O O O O B-CON I-CON B-CON O O <eos>
(6)7阶轮图A.
<start> O O O O B-CON I-CON B-CON O O <eos>
在图9.21中,下述顶点序列是否构成通路?哪些是简单通路?哪些是初级通路?哪些是回路?哪些是简单回路?哪些是初级回路?\\
<start> O B-CON O O O O O O O O O O O O O O O O B-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON O O O O B-CON I-CON B-CON I-CON O O O O B-CON I-CON B-CON I-CON O O O <eos>
用Dijkstra标号法求图9.22中各图中从顶点A到其余各顶点的最短路径和距离.
<start> O B-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O O B-CON O O O O O O B-CON O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O <eos>
某工厂使用一台设备,每年年初要决定是继续使用,还是购头新的.预计该设备第1年的价格为11万元,以后每年涨1万元.使用的第1年,第2年,A,第5年的维修费分别为5万、6万、8万、11万、18万元使用1年后的残值为4万元,以后每使用1年残值淢少1万元.试制定构买维修该设备的5年计划,使总支出最小.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
图9.23中各图有儿个连通分支?给出它们的所有连通分支.
<start> B-CON O O O O O O B-CON O O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
无向图A如图A所示.
<start> B-CON I-CON I-CON O O O O O O O <eos>
(1)求A的全部点割集和边割集,并指出其中的割点和桥(割边).
<start> O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O O B-CON I-CON O B-CON O B-CON B-CON O O <eos>
(2)求A的点连通度A和边连通度A.
<start> O O O O O O B-ATT I-ATT I-ATT I-ATT O O B-ATT I-ATT I-ATT I-ATT O O <eos>
无向图A如图A所示,先将该图顶点和边标定.然后求图中的全部割点和桥,以及该图的点连通度和边连通度.
<start> B-CON I-CON B-CON O O B-CON O O O O O O O B-CON B-CON I-CON O B-CON O O O O O O O O O O O O O O O O O O O B-CON O B-ATT I-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT I-ATT O <eos>
求图9.26所示图A的A.
<start> O B-CON O O O O O O B-CON O O O O <eos>
设A是A阶A条边的无向图,证明A中存在顶点A,使得A.
<start> O O O O O O O B-CON O B-CON I-CON I-CON O O O O O O O B-CON I-CON O O O O O O <eos>
设A为无向图A中的一条边,证明A为桥当且仅当A不在任何圈中.
<start> O O O B-CON I-CON I-CON O O O O O B-CON O O O O O B-CON O O O O O O O O O B-CON I-CON O <eos>
试求彼得松图的点连通度A和边连通度A.
<start> O O B-CON I-CON I-CON I-CON O B-ATT I-ATT I-ATT I-ATT O O B-ATT I-ATT I-ATT I-ATT O O <eos>
设A为无向图A中的桥,证明A(或A是割点当且仅当A(或A不是悬挂顶点.
<start> O O O B-CON I-CON I-CON O O O B-CON O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON B-CON I-CON O <eos>
设A是A阶无向简单图,A且为奇数,证明A与A中奇度顶点的个数相等.
<start> O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O O O B-ATT B-ATT B-ATT I-CON O O O O O O <eos>
若无向图A中恰有两个奇度顶点,证明这两个奇度顶点必然连通.
<start> O B-CON I-CON B-CON O O O O O O B-CON B-ATT I-CON I-CON O O O O O O B-CON B-ATT I-CON I-CON O O O O O <eos>
设A是无向简单图,A,证明A中存在长度大于等于A的圈.
<start> O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O O O O O O O B-CON O <eos>
设A是有向简单图,A,证明A中存在长度大于等于maxA,A的圈.
<start> O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O B-ATT I-ATT O O O O O I-CON O O O O O B-CON O <eos>
有向图A如图9.27所示,问A是哪类连通图.
<start> B-CON I-CON B-CON O O B-CON O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
写出图A的关联矩阵.
<start> O O O O O B-CON I-CON I-CON I-CON O <eos>
写出图A中各图的关联矩阵.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
图A40.写出图9.29中各图的邻接矩阵.
<start> B-CON O O O O O O B-CON O O O O O O O O O O B-CON I-CON O <eos>
设有向图A,其中A,其邻接矩阵为
<start> O B-CON I-CON B-CON O O O O O O O O O B-CON I-CON O <eos>
试求A中各顶点的人度与出度.
<start> O O O O O O O O O I-ATT O B-ATT I-ATT O <eos>
设无向图A,其中A,其关联矩阵为
<start> O B-CON I-CON I-CON O O O O O O O B-CON I-CON B-CON I-CON O <eos>
试在同构意义下画出A的图形.
<start> O O B-REL I-REL O O O O O O O B-CON I-CON O <eos>
有向图A如图9.29(a)所示.
<start> B-CON I-CON B-CON O O B-CON O O O O O O O O O O <eos>
（1）A中A到A长度为A的通路各为几条?
<start> O O O O O O O O O O O O O B-CON I-CON O O O O O <eos>
(2)A中A到A长度为A的回路各为几条?
<start> O O O O O O O O O O O O O B-CON I-CON O O O O O <eos>
(3)A中长度为4的通路有多少条?其中长为4的回路为多少条?
<start> O O O O O O O O O O B-CON I-CON O O O O O O O O O O O B-CON I-CON O O O O O <eos>
（4）A中长度小于等于4的通路为多少条?其中有多少条为回路?
<start> O O O O O B-ATT I-ATT O O O O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O <eos>
(5)写出A的可达矩阵.
<start> O O O O O O O O O B-CON I-CON O <eos>
有向图A如图9.A所示.求：
<start> B-CON I-CON B-CON O O B-CON O O O O O O O O <eos>
(1)A到A长度为A的通路数.
<start> O O O O O O O O O O O B-CON I-CON O O <eos>
(2)A到A长度为A的回路数.
<start> O O O O O O O O O O O B-CON I-CON O O <eos>
(3)A中长度为4的通路数(含回路).
<start> O O O O O B-ATT I-ATT O O O B-CON I-CON O O O B-CON I-CON O O <eos>
(4)A中长度小于等于4的回路数.
<start> O O O O O B-ATT I-ATT O O O O O O B-ATT I-ATT I-ATT O <eos>
（5）写出A的可达矩阵.
<start> O O O O O O O O O B-CON I-CON O <eos>
设A是A阶A条边的无向连通图,证明A.
<start> O O O O O O O B-CON O B-CON I-CON I-CON I-CON I-CON O O O O O <eos>
设A是6阶无向简单图,证明A或它的补图A中存在3个顶点彼此相邻.树是图论的重要内容,在计算机科学技术,特别是数据结构中有着广泛的应用.
<start> O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O B-CON B-CON O O O O O O B-CON I-CON O O B-REL I-REL O B-CON O B-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON O I-CON O O O O O O O O O <eos>
定义10.1连通无回路的无向图称为无向树,或简称树.每个连通分支都是树的无向图称为森林.平凡图称为平凡树.在无向树中,悬挂顶点称为树叶,度数大于A
<start> O O O O O O O O B-CON B-CON I-CON O B-CON I-CON I-CON O O B-CON I-CON B-CON O O O O B-CON O O O B-CON I-CON O O O O B-CON O B-CON I-CON I-CON O O B-CON I-CON O B-CON I-CON B-CON O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O O O B-CON O O B-ATT O O O O <eos>
图A等于2的顶点称为分支点.
<start> B-CON O O O O O O O O O B-CON I-CON I-CON O <eos>
说明:定义中的回路是指初级回路或简单回路.本章均如此约定,以后不再重复说明.
<start> O O O O O O O B-CON I-CON O O B-CON I-CON B-CON I-CON O B-CON I-CON B-CON I-CON O O O O O O O O O O O O O O O O O O <eos>
图A是一棵树,其中A是树叶,A是分支点.
<start> B-CON O O O O B-CON O O O O O B-CON I-CON O O O B-CON I-CON I-CON O <eos>
下面给出树的一些重要性质,其中定理A给出树的几个充分必要条件.
<start> O O O O B-CON O O O O O O O O O O O O O O O B-CON O O O O O O O O O O <eos>
定理A设A是A阶A条边的无向图,则下面各命题是等价的.
<start> O O O O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON O B-REL I-REL O O <eos>
(2)A中任意两个顶点之间存在唯一的路径.
<start> O O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O <eos>
(3)A中无回路且A.
<start> O O O O O O B-CON I-CON O O O <eos>
(4)A是连通的且A.
<start> O O O O O O O O O O O <eos>
(5)A是连通的且任何边均为桥.
<start> O O O O O O O O O O O B-CON O O B-CON O <eos>
(6)A中没有回路,但在任何两个不同的顶点之间加一条新边后所得图中有唯一的一个含新边的圈.
<start> O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON O O O O O O B-CON O O O B-CON O O O O O O O O O B-CON O B-CON O <eos>
证A.由A的连通性及定理A的推论可知,A与A之间存在一条路径.若路径不是唯一的,设A和A都是A到A的路径,则必存在由A和A上的边构成的回路,这与A中无回路矛盾.
<start> O O O O O O B-ATT I-ATT O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O B-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O B-CON O O O B-CON I-CON O O O O O O B-CON I-CON O O O <eos>
A.首先证明A中无回路.若A中存在关联某顶点A的环,则A到A存在长为0和1的两条路径(注意初级回路是路径的特殊情况),这与已知条件矛盾.若A中存在长度大于等于2的圈,则圈上任何两个顶点之间都存在两条不同的路径,这也引出矛盾,下面用归纳法证明AA
<start> O O O O O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON O O B-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON B-CON I-CON O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O B-ATT O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O <eos>
A时,A为平凡图,结论显然成立.设A时结论成立.当A时,设A为A中的一条边,由于A中无回路,所以A为两个连通分支A.设A分别为A中的顶点数和边数,则A.由归纳假设,A,2.于是,A.得证当AA时结论也成立.
<start> O O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O B-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-ATT O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
A.只要证明A是连通的.假设不然,设A有A个连通分支A.每个A中均无回路,因而A全为树.由A可知,A.于是AA.由于A,这与A矛盾.
<start> O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O <eos>
(4)A.只要证明A中每条边均为桥.A,均有A.由习题九中第45题可知,A不是连通图,故A为桥.
<start> O O O O O O O O O O O O O B-CON O O B-CON O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O B-CON O <eos>
A.由于A中每条边均为桥,因而A中无圈.又由于A连通,所以A为树.由(1)A可知,A中任意两个不同的顶点A之间存在唯一的路径A.设A是在A之间添加的新边,则AA是一个圈,且显然是唯一的.
<start> O O O O O O O O B-CON O O B-CON O O O O O O B-CON O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O O O O O O O B-CON O O O O O O O B-CON O O O O O O O O O <eos>
A.只要证明A是连通的.对任意两个不同的顶点A和A,在A之间添加一条新边A后产生唯一的一个含A的圈A.显然,A为A中A到A的通路,故A.由A的任意性可知,A是连通的.
<start> O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O B-CON O O O O O O O O O O O O B-CON O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O <eos>
定理A设A是A阶非平凡的无向树,则A中至少有两片树叶.
<start> O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O B-CON O O <eos>
证设A有A片树叶,由握手定理及定理A可知，
<start> O O O O O O B-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O O <eos>
例A画出所有6阶非同构的无向树.
<start> O O O O O O O O O B-REL I-REL O B-CON I-CON I-CON O <eos>
解设A是6阶无向树.由定理A可知,A的边数A.由握手定理可知,A的6个顶点的度数之和等于10.又有A.于是,A的顶点度数必为以下情况之一:
<start> O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O B-CON I-CON O B-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O <eos>
并把它们分别简记为A.
<start> O O O O O O O O O O O <eos>
另外,称度数为1的顶点为悬挂顶点,与它关联的边称为悬挂边.度为偶数(奇数)的顶点称为偶度(奇度)顶点.
<start> O O O O B-ATT O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON O O B-ATT O O O O O O O O O O O O O B-ATT O O B-ATT O O O O <eos>
在图9.1(a)中,A(注意,环提供2度),A是悬挂顶点,A是悬挂边.在图A(b)中,A(环A提供一个出度和一个人度),A4(在A点达到),A(在A点达到),A(在A点达到),A(在A和A点达到).
<start> O B-CON O O O O O O O O O O O O O B-CON O O O B-ATT O O O O B-CON I-CON B-CON I-CON O O O B-CON I-CON B-CON O O B-CON O O O O O O O O B-CON O O O O O B-ATT I-ATT O O O O I-ATT O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
下述定理是欧拉于1736年给出的,称为握手定理,是图论的基本定理.
<start> O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON O O O O O O <eos>
定理A在任何无向图中,所有顶点的度数之和等于边数的2倍.
<start> O O O O O O B-CON I-CON I-CON O O O O B-CON I-CON O B-ATT I-CON O O O O B-ATT O O O O O <eos>
证图中每条边(包括环)均有两个端点,所以在计算各顶点度数之和时,每条边均提供2度.A条边,共提供A度.
<start> O B-CON O O O B-CON O O O B-CON O O O O O B-CON I-CON O O O O O O O B-CON I-CON B-ATT I-CON O O O O O O B-CON O O O O B-ATT O O O B-CON O O O O O B-ATT O <eos>
定理A在任何有向图中,所有顶点的度数之和等于边数的2倍;所有顶点的人度之和等于所有顶点的出度之和,都等于边数.
<start> O O O O O O B-CON I-CON B-CON O O O O B-CON I-CON O B-ATT I-CON O O O O O O O O O O O O B-CON I-CON O O B-ATT O O O O O O B-CON I-CON O B-ATT I-ATT O O O O O O O O O <eos>
本定理的证明类似于定理9.1.
<start> O O O O O O O O O O O O O O O <eos>
推论任何图(无向的或有向的)中,奇度顶点的个数是偶数.
<start> O O O O B-CON O O O O O B-ATT I-ATT O O O O B-CON B-ATT I-CON I-CON O O O O O O O <eos>
证由握手定理,所有顶点的度数之和是偶数,而偶度顶点的度数之和是偶数,故奇度顶点的度数之和也是偶数.奇数个奇数之和是奇数,所以奇度顶点的个数必是偶数.
<start> O O B-CON I-CON I-CON I-CON O O O O O O B-ATT I-ATT O O O O O O O O B-ATT O I-CON O B-ATT I-ATT O O O O O O O O B-ATT I-CON I-CON O B-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O B-ATT I-CON I-CON O O O O O O O O <eos>
知识点,图的基本:例A(1)每个顶点的度数都为5的8阶无向图有几条边?
<start> O O O O O O O O O O O O O O O O B-CON I-CON O B-ATT O O O O O O O B-CON I-CON I-CON O O O B-CON O <eos>
概念与握手定理A(2)10条边的无向图最多有几个度数大于等于3的顶点?
<start> O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON O B-CON I-CON I-CON O O O O O B-ATT O O O O O O O B-CON I-CON O <eos>
解(1)顶点的度数之和为A,由握手定理,有A条边.
<start> O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O <eos>
(2)设有A个度数大于等于3的顶点,A,故最多有6个度数大于等于3的顶点.
<start> O O O O O O O B-ATT I-ATT O O O O O O B-CON I-CON O O O O O O O O O B-ATT I-ATT O O O O O O B-CON I-CON O <eos>
下述定理是显然的.
<start> O O O O O O O O O <eos>
定理A设A为任意A阶无向简单图,则A.
<start> O O O O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O <eos>
定义A设A为两个无向图(两个有向图),若存在双射函数A,使得A当且仅当A当且仅当A,并且A与A与A的重数相同,则称A与A同构,记作A.
<start> O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O B-REL I-REL B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-REL I-REL O O O O O <eos>
在图A中,(a)与(b)同构,这只需把(a)中的顶点A依次对应到(b)中的1,2,A即可.而(c)与它们不同构.(c)是两个分离的三角形.(d),(e),(f)彼此之间都不同构.
<start> O B-CON O O O O O O O O O O B-REL I-REL O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O B-REL I-REL O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-REL I-REL O <eos>
在图A中,(a),(b),(c)是4阶3条边的所有非同构的简单无向图,(d),(e),(f),(g)是3阶2条边的所有非同构的有向简单图.
<start> O O O O O O O O O O O O O O O O O O O O O B-CON O O O B-REL B-REL I-REL O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O B-CON O O O B-REL B-REL I-REL O B-CON I-CON B-CON I-CON I-CON O <eos>
在图A中,(a)称作彼得松(Peterson)图,(b),(c)均与(a)同构.
<start> O O O O O O O O O O B-CON I-CON I-CON O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O B-CON O O O O O O O O O O O O O B-REL I-REL O <eos>
图之间的同构关系“®”构成全体图集合上的二元关系.它是等价关系,具有自反性、对称性和传递性.在这个等价关系的每个等价类中的图在同构意义下都可以看成一个图.在图A中,(a)和(b)可以看成一个图.在图A中,(a),(b),(c)可以看成一个图,它们都是彼得松图.至今
<start> O O O O B-REL I-REL I-REL I-REL O O O O O O O B-CON B-CON I-CON O O B-CON I-CON I-REL I-REL O O O B-REL I-REL I-REL I-REL O O O O O O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O O O B-CON I-CON I-CON O O B-CON O B-REL I-REL O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O <eos>
还没有找到判断两个图是否同构的、便于检查的充分必要条件.显然,阶数相同、边数相同、顶点度数相同等都是必要条件,但都不是充分条件.
<start> O O O O O O O O O B-CON O O B-REL I-REL O O O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT O O O B-CON I-CON B-ATT I-ATT O O O O O O O O O O O O O O O O O O O <eos>
定义A设A为A阶无向简单图,令A,称A为A的补图.
<start> O O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O B-CON I-CON O <eos>
若图A,则称A是自补图.在图A中,(b)与(c)互为补图,(a)是自补图.
<start> O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON I-CON O <eos>
定义A设A为A阶无向简单图,若A中每个顶点均与其余的A个顶点相邻,则称A为A阶无向完全图,简称A阶完全图,记作A.
<start> O O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O B-CON I-CON O O O O O O O B-CON I-CON B-REL I-REL O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O O O <eos>
设A为A阶有向简单图,若A中每个顶点都邻接到其余的A个顶点,则称A是A阶有向完全图.
<start> O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON B-CON I-CON I-CON O <eos>
设A为A阶有向简单图,若A的基图为A阶无向完全图A,则称A是A阶竞赛图.
<start> O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON O <eos>
在图A中,(a)为A为3阶有向完全图,(c)为4阶竞赛图.
<start> O O O O O O O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O <eos>
易知,A阶无向完全图、A阶有向完全图、A阶竞赛图的边数分别为A,A
<start> O O O O O B-CON I-CON B-CON I-CON I-CON O O O B-CON I-CON B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O <eos>
定义A设A为A阶无向简单图,若A,均有A,则称A为A正则图.
<start> O O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O O O O O O O <eos>
由定义可知,A阶零图是0-正则图,A阶无向完全图是A-正则图,彼得松图是3-正则图.由握手定理可知,A阶A-正则图中,边数A,因而当A为奇数时,A必为偶数.
<start> O O O O O O O O O B-CON O O O B-CON I-CON I-CON O O O B-CON I-CON B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O I-CON B-CON O O O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O <eos>
定义A设A为两个图(同为无向图或同为有向图),若A且A,则称A是A的子图,A为A母图,记作A.又若A或A,则称A为A的真子图.若A,则称A为A的生成子图.
<start> O O O O O O O O B-CON O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O B-CON B-CON I-CON O O O O O O O O O O B-CON I-CON B-CON I-CON O <eos>
设A且A,称以A为顶点集,以A中两个端点都在A中的边组成边集A的图为A的A导出的子图,记作A.又设A且A,称以A为边集,以A中边关联的顶点为顶点集A的图为A的A导出的子图,记作A.
<start> O O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON O B-CON I-CON O O O O O O O O O O O B-CON I-CON O O O O O <eos>
在图9.6中,取A是A的A导出的子图.取A是(a)的A导出的子图.
<start> O B-CON O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O <eos>
定义A设A为无向图.
<start> O O O O O O B-CON I-CON I-CON O <eos>
（1）设A,用A表示从A中去掉边A,称为删除边A.又设A,用A表示从A中删除A中的所有边,称为删除A.
<start> O O O O O O O O O O O O O O O B-CON O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O <eos>
(2)设A,用A表示从A中去掉A及所关联的一切边,称为删除顶点A.又设A,用A表示从A中删除A中所有的顶点,称为删除A.
<start> O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O <eos>
(3)设A,用A表示从A中删除A后,将A的两个端点A用一个新的顶点A(可以用A或A充当A)代替,并使A关联除A以外A关联的所有边,称为边A的收缩.
<start> O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O B-REL I-REL O O O O O B-REL I-REL O O O B-CON O O O B-CON O O O O O <eos>
（4）设A可能相邻，也可能不相邻),用A(或A表示在A之间加一条边A,称为加新边.
<start> O O O O O O O B-REL I-REL O O O O B-REL I-REL I-REL O O O O O O O O O O O O O O O O B-CON O O O O O O B-CON O <eos>
在收缩边和加新边过程中可能产生环和平行边.
<start> O B-CON I-CON B-CON O B-CON I-CON I-CON O O O O O O O B-CON O B-CON I-CON I-CON O <eos>
在图A中,设(a)中图为A,则(b)为A,(c)为A,(d)为A为A,而A为A.
<start> O B-CON O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
(c)知识点:图的同构、
<start> O O O O O O O B-CON O B-REL I-REL O <eos>
在图中,从一个顶点出发沿一条边到一个顶点,再沿一条边到一个顶点,如此经过若干步就得到一条通路.如果最后回到出发点就得到一条回路.通路与回路的定义如下.定义9.11设A为无向标定图,A是A中顶点与边的交替序列,如果A,A为A的端点,A,则称A为A到A的通路,A分别称为A的始点与终点,A中的边数称为它的长度.若又有A,则称A为回路.若A的所有边各异,则称A为简单通路.若又有A,则称A为简单回路.若所有顶点(除A与A可能相同外)各异,所有边也各异,则称A为初级通路或路径.若又有A,则称A为初级回路或圈.长度为奇数的圈称为奇圈,长度为偶数的圈称为偶圈.
<start> O B-CON O O O O O B-CON I-CON O O O O O B-CON O O O B-CON I-CON O O O O O B-CON O O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON O B-CON I-CON O B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON B-CON O O O O O B-CON I-CON O B-CON O B-CON O B-CON I-CON O O O O O O O O O B-CON I-CON O O O O O O O O O O O B-CON <eos>
注意,在初级通路与初级回路的定义中,将初级回路看成初级通路(路径)的特殊情况.但是在应用中,初级通路(路径)始点与终点通常都是不相同的.长为1的圈只能由一个环生成,长为2的圈只能由两条平行边生成,因而在简单无向图中,圈的长度至少为3.
<start> O O O O B-CON I-CON B-CON I-CON O B-CON I-CON B-CON I-CON O O O O O O B-CON I-CON B-CON I-CON O O B-CON I-CON B-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON B-CON I-CON B-CON O O O O O O O O O O O <eos>
另外,若A中有边重复出现,则称A为复杂通路.若又有A,则称A为复杂回路.
<start> O O O O O O O B-CON B-OPR O O I-OPR O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON B-CON I-CON O <eos>
在有向图中,通路、回路及分类的定义与无向图中基本一样,只是要注意有向边方向的一致性.
<start> O B-CON I-CON B-CON O O B-CON I-CON O B-CON I-CON O B-CON I-CON O O O O B-CON I-CON B-CON O O O O O O O O O O O B-CON I-CON I-CON O O O B-ATT I-ATT I-ATT O <eos>
根据定义,回路是通路的特殊情况;初级通路(回路)必是简单通路(回路),但反之不真.
<start> O O O O O B-CON I-CON O B-CON I-CON O O O O O O B-CON I-CON B-CON I-CON O B-CON I-CON O O O B-CON I-CON I-CON I-CON O B-CON I-CON O O O O O O O O <eos>
在简单图中可以只用顶点序列表示通路(回路),写成A.
<start> O B-CON I-CON I-CON O O O O O B-CON I-CON B-CON I-CON O O B-CON I-CON O B-CON I-CON O O O O O O <eos>
定理A在A阶图A中,若从顶点A到A存在通路,则从A到A存在长度小于等于A的通路.
<start> O O O O O O B-CON O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O B-ATT I-ATT O O O O O O B-CON I-CON O <eos>
证设A为A中从A到A的通路.若A,则定理成立.假设A,此时A上的顶点数大于A中的顶点数,于是必存在A,使得A,即在A上存在A到自身的回路A,在A上删除A,得到A仍为从A到A的通路,且至少比A少一条边.若A还不满足要求,重复上述过程.经过若干步后,必得到A到A长度小于等于A的通路.
<start> O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT O O O O O B-ATT I-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
推论在A阶图A中,若从顶点A到A存在通路,则A到A一定存在长度小于等于A1的初级通路(路径).
<start> O O O O O B-CON O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O B-ATT I-ATT O O O O O O O O O B-CON I-CON O O O O O <eos>
类似可证明下面的定理和推论.
<start> O O O O O O O O O O O O O O <eos>
定理A在A阶图A中,若存在A到自身的回路,则一定存在A到自身长度小于等于A的回路.
<start> O O O O O O B-CON O O O O O O O O O O O B-CON I-CON O O O O O O O O B-ATT I-ATT B-ATT I-ATT O O O O O O B-CON I-CON O <eos>
推论在A阶图A中,若存在A到自身的简单回路,则一定存在A到自身长度小于等于A的初级回路.
<start> O O O O O B-CON O O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O B-ATT I-ATT B-ATT I-ATT O O O O O O O O B-CON I-CON O <eos>
例A无向完全图A中有几种非同构的圈?
<start> O O B-CON I-CON B-CON I-CON I-CON O O O O O B-REL I-REL I-REL O B-CON O <eos>
解长度相同的圈都是同构的,因而只有长度不同的圈才是非同构的.易知A中含长度为A的圈,所以A中有A种非同构的圈.
<start> O O O O O O B-CON O O B-REL I-REL O O O O O O O O O O O B-CON O O B-REL I-REL I-REL O O O O O O O O O O O O B-CON O O O O O O O O B-REL I-REL I-REL O B-CON O <eos>
长度相同的圈都是同构的,因此在同构意义下给定长度的圈只有一个.在标定图中,圈表示成顶点和边的标记序列.只要两个圈的标记序列不同,就称这两个圈在定义意义下不同.
<start> O O O O O B-CON O O B-REL I-REL O O O O O B-REL I-REL O O O O O O O O B-CON O O O O O O B-CON I-CON B-CON O O B-CON O O O B-CON I-CON O B-CON O O O B-CON I-CON O O O O O B-CON O O O B-CON I-CON O O O O O O O O B-CON O O O O O O O O O <eos>
例A无向完全图A的顶点依次标定为A.在定义意义下A中有多少个不同的圈?
<start> O O B-CON I-CON B-CON I-CON I-CON O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O B-CON O <eos>
解在A中只有长为3的圈.在同构意义下,只有一个长为3的圈.但在定义意义下,不同起
<start> O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O <eos>
A(因为A是函数）
<start> O O O O O O B-CON I-CON O <eos>
对于双射函数A,称A是它的反函数.
<start> O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON O <eos>
下面讨论反函数的性质.证明方法与前面类似,不再策述,这里仅给出结果.
<start> O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
定理A设A是双射的,则
<start> O O O O O O B-REL I-REL O O O <eos>
定理8.5告诉我们,对于双射函数A,有
<start> O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O <eos>
求A.如果A和A存在反函数,求出它们的反函数.
<start> O O O O O O O O O O B-CON B-CON I-CON O O O O O O B-CON B-CON I-CON O <eos>
因为A不是双射的,不存在反函数.而A是双射的,它的反函数是
<start> O O O O O B-REL I-REL O O O O O O B-CON I-CON O O O O B-REL I-REL O O O O O B-CON I-CON O <eos>
这一节将利用双射函数来讨论集合的势.通俗地说,集合的势是量度集合所含元素多少的量.集合的势越大,所含的元素越多.
<start> O O O O O O B-REL I-REL I-CON I-CON O O O B-CON I-CON O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O B-CON O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON O O O <eos>
定义A设A是集合,如果存在着从A到A的双射函数,就称A和A是等势的,记作A,如果A不与A等势,则记作A.
<start> O O O O O O B-CON I-CON O O O O O O O O O O O B-REL I-REL B-CON I-CON O O O O O O O B-REL I-REL O O O O O O O O O O O O B-REL I-REL O O O O O O <eos>
下面给出一些等势集合的例子.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O <eos>
例8.9(1)A.根据例8.6(3)定义的双射函数可以证明A.
<start> O O O O O O O O O O O O O O O O O O O O O B-REL I-REL I-CON I-CON O O O O O O <eos>
(2)A.为建立A到A的双射函数,只需把A中所有的元素排成一个有序图形,如图A所示.A中的元素恰好是坐标平面上第一象限(含坐标轴在内)中所有整数坐标的点.如果能够找到“数遍”这些点的方法,这个计数过程就是建立A到A的双射函数的过程.按照图中箭头所标明的顺序,从A开始数起,依次得到下面的序列:
<start> O O O O O O O O O O O O B-REL I-REL I-CON I-CON O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-REL I-REL B-CON I-CON O O O O O O O O O O O O O O <eos>
设A是图上的一个点,并且它所对应的自然数是A.考察A和A之间的关系.首先计数A点所在斜线下方的平面上所有的点数,是
<start> O O O B-CON O O O O B-CON O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O <eos>
根据上面的分析,不难给出A到A的双射函数A,即
<start> O O O O O O O O O O O O O O O O B-REL I-REL I-CON I-CON O O O <eos>
(3)A.为建立A到A的双射函数,先把所有形式为A为整数且A的数排成一张表.显然所有的有理数都在这张表内.如图A所示,以A作为第一个数,按照箭头规定的顺序可以“数遍”表中所有的数.但是这个计数过程并没有建立A到A的双射,因为同一个有理数可能被多次数到.例如A等都是有理数1.为此规定，在计数过程中必须跳过第二次以及以后各次所遇到的同一个有理数.如A被计数,那么A等都要被跳过.表中数A上方的方括号内标明了这个有理数所对应的计数.这样就可以定义双射函数A,其中A是A下方的有理数.从而证明了A.
<start> O O O O O O O O O O O O B-REL I-REL I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-REL I-REL O O O O O O B-CON I-CON I-CON O O O O O O O O <eos>
易见A是单调上升的,且A,从而证明了A.
<start> O O O O O O O O O O O O O O O O O O O O <eos>
为构造A到A的双射函数,必须要解决端点0和1的对应问题.为此,选择一个无限序列:
<start> O O O O O O O B-REL I-REL B-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON B-CON I-CON O <eos>
如下构造一一对应:
<start> O O O O O O O O O <eos>
显然这个对应是双射的.区间A中其余的数则自己对应自己,从而得到了双射函数AA.将A的对应法则形式化就是
<start> O O O O O O O B-REL I-REL O O O O O O O O O O O O O O O O O O O O O O O B-REL I-REL I-CON I-CON O O O O O O O O O O O O O O O <eos>
知㛣点.双射函通过以上证明可以得到A.
<start> O O O O B-CON I-CON I-CON O O O O O O O O O O O O <eos>
只需找到一个过点A和A的单调函数即可.显然一次函数是最简单的.由解析几何的知识不难得到
<start> O O O O O O O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O <eos>
类似地可以证明,对任何A,有A.
<start> O O O O O O O O O O O O O O O O <eos>
以上已经给出了若干个等势的集合.一般说来,等势具有下面的性质:自反性、对称性和传递性.
<start> O O O O O O O O O O B-REL I-REL O B-CON I-CON O O O O O O B-REL I-REL O O O O O O O O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O <eos>
定理A设A是任意集合,有
<start> O O O O O O O O B-CON I-CON O O <eos>
根据前面的分析和这个定理可以得到下面的结果.
<start> O O O O O O O O O O O O O O O O O O O O O O <eos>
而后一个结果可以进一步强化成:任何的实数区间(包括开区间、闭区间以及半开半闭的区间)都与实数集合A等势.那么A与A是否等势呢?请见下面的定理.
<start> O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O B-REL I-REL O O O O O O O O B-REL I-REL O O O O O O O O O O <eos>
(2)对任意集合A都有A.
<start> O O O O O O B-CON I-CON O O O O O <eos>
限于篇幅,这里不再给出证明.根据这个定理可以知道A.可以证明A
<start> O O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O B-OPR I-OPR O <eos>
义.下面就来做这件事.
<start> O O O O O O O O O O O <eos>
定义8.9(1)设A是集合,如果存在从A到A的单射函数,就称A优势于A,记作A.如果A不是优势于A,则记作A.
<start> O O O O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
(2)设A是集合,若A且A,则称A真优势于A,记作A.如果A不是真优势于A,则记作A.
<start> O O O O O O B-CON I-CON O O O O O O O O O B-ATT I-ATT I-ATT O O O O O O O O O O O O B-ATT I-ATT I-ATT I-ATT O O O O O O O <eos>
不加证明,我们给出下述与优势有关的性质.
<start> O O O O O O O O O O O O B-CON I-CON O O O O O O <eos>
定理A设A是任意的集合,则
<start> O O O O O O O O O B-CON I-CON O O <eos>
总结前边的讨论,有
<start> O O O O O O O O O <eos>
其中A代表任意的实数闭区间和开区间.
<start> O O O O O O O O B-CON I-CON B-CON I-CON I-CON O B-CON I-CON I-CON O <eos>
上面只是给出了集合的等势与优势的概念,表示集合势的大小的量称作集合的基数.集合A的基数记作cardA.最简单的集合是有穷集,有穷集含有的元素个数是自然数,可以用它表示集合的基数.自然数集合A和实数集A的基数是什么?请见下面的定义.
<start> O O O O O O O B-CON I-CON O B-ATT I-ATT O O I-ATT O O O O O O B-CON I-CON I-ATT O O O O O O O B-CON I-CON O O O O B-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O O I-CON I-CON I-CON O O B-CON I-CON O O O B-CON I-CON O O O O O O O O O O O O <eos>
定义8.10(1)对于有穷集合A,称A的元素个数为A的基数,记作A(或A.
<start> O O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O O O O O <eos>
（2）自然数集合A的基数记作A(读作阿列夫零)，即
<start> O O O B-CON I-CON I-CON B-CON I-CON O O B-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O <eos>
下面定义基数的相等和大小.
<start> O O O O B-CON I-CON O B-REL I-REL O B-REL I-REL O <eos>
定义8.11设A为集合,则
<start> O O O O O O O O O B-CON I-CON O O <eos>
根据上一节关于势的讨论不难得到:
<start> O O O O O O O B-CON O O O O O O O O <eos>
不难看出,两个集合相比,优势集合的基数大.由于对任何集合A都满足A,所以有
<start> O O O O O O O B-CON I-CON O O O B-CON I-CON B-CON I-CON O O O O O O O O O O B-CON I-CON O O O O O O O O O <eos>
这说明不存在最大的基数.将已知的基数按从小到大的顺序排列就得到:
<start> O O O O O O B-CON O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O O O O <eos>
其中A恰好是全体自然数,是有穷集合的基数,也称作有穷基数,而A是无穷集合的基数,也称作无穷基数,A是最小的无穷基数,而A后面还有更大的基数,如A等.
<start> O O O O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O B-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON O O O O O <eos>
在可计算性理论和程序语义中经常要考虑函数是否可计算、程序是否终止的问题,就会用到“可数”的概念.下面给出可数集的定义.
<start> O O O I-CON O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O <eos>
定义8.12设A为集合,若A,则称A为可数集或可列集.
<start> O O O O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O <eos>
例如A,整数集A,有理数集A,以及A等都是可数集,但实数集A不是可数集,与A等势的集合也不是可数集.对于任何可数集,它的元素都可以排列成一个有序图形.换句话说,都可以找到一个“数遍”集合中全体元素的顺序.回顾前边的可数集,特别是无穷可数集,都是
<start> O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O B-CON I-CON O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O B-CON I-CON O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O B-CON I-CON B-CON I-CON I-CON O O O <eos>
用这种方法来证明的.
<start> O O O O O O B-OPR I-OPR O O <eos>
关于可数集有下面的命题.
<start> O O B-CON I-CON I-CON O O O O B-CON I-CON O <eos>
可数集的任何子集都是可数集.
<start> B-CON I-CON I-CON O O O B-CON I-CON O O B-CON I-CON I-CON O <eos>
两个可数集的并是可数集.
<start> O O B-CON I-CON I-CON O B-CON O B-CON I-CON I-CON O <eos>
两个可数集的笛卡儿积是可数集.
<start> O O B-CON I-CON I-CON O B-OPR I-OPR I-OPR I-OPR O B-CON I-CON I-CON O <eos>
可数个可数集的并仍是可数集.
<start> O O O B-CON I-CON I-CON O B-CON O O B-CON I-CON I-CON O <eos>
无穷集A的幂集A不是可数集.
<start> B-CON I-CON I-CON O O B-CON I-CON O O O B-CON I-CON I-CON O <eos>
例8.10求下列集合的基数.
<start> O O O O O O O O B-CON I-CON O O O O <eos>
例8.11设A为集合,且
<start> O O O O O O O O B-CON I-CON O O <eos>
解由A可知A都是可数集.令
<start> O O O O O O O O B-CON I-CON I-CON O O <eos>
易见A是A到A的双射函数,所以
<start> O O O O O O O O B-REL I-REL I-CON I-CON O O O <eos>
如果直接使用可数集的性质,本题的求解更为简单.因为A,所以A都是可数集.从而可知A也是可数集,于是得到A.显然当A时A,这就推出A.
<start> O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O <eos>
给定函数A和集合A如下.\\
<start> O O B-CON I-CON O O B-CON I-CON O O O O O O <eos>
对以上每一组A和A,分别回答以下问题.
<start> O O O O O O O O O O O O O O O O O O O <eos>
(a)A是不是满射、单射和双射的?如果A是双射的,求A的反函数.
<start> O O O O O O O B-REL I-REL O B-REL I-REL O B-REL I-REL O O O O O O B-REL I-REL O O O O O B-CON I-CON I-CON O <eos>
(b)求A在A下的像A和A在A下的完全原像A.
<start> O O O O O O O O O B-CON O O O O O O O B-CON I-CON I-CON I-CON O O <eos>
判断下列函数中哪些是满射的,哪些是单射的,哪些是双射的.
<start> O O O O B-CON I-CON O O O O B-REL I-REL O O O O O B-REL I-REL O O O O O B-REL I-REL O O <eos>
设A,判断以下命题的真假.
<start> O O O O O O O B-CON I-CON O O O O <eos>
(1)A是从A到A的二元关系,但不是从A到A的函数.
<start> O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O B-CON I-CON O <eos>
(2)A是从A到A的函数,但不是满射的,也不是单射的.
<start> O O O O O O O O O O B-CON I-CON O O O O B-REL I-REL O O O O O B-REL I-REL O O <eos>
(3)A是从A到A的满射,但不是单射的.
<start> O O O O O O O O O O B-REL I-REL O O O O B-REL I-REL O O <eos>
(4)A是从A到A的双射.
<start> O O O O O O O O O O B-REL I-REL O <eos>
对于给定的A和A,判断A是否为从A到A的函数A.如果是,说明A是否为单射、满射、双射的.\\
<start> O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O B-REL I-REL O B-REL I-REL O B-REL I-REL O O O O <eos>
(1)给出一个函数A,使得A不是单射的,也不是满射的.
<start> O O O O O O O B-CON I-CON O O O O O O O B-REL I-REL O O O O O B-REL I-REL O O <eos>
(2)给出一个函数A,使得A不是单射的,但是满射的.
<start> O O O O O O O B-CON I-CON O O O O O O O B-REL I-REL O O O O B-REL I-REL O O <eos>
(3)能侈给出一个函数A,使得A是单射但不是满射的吗?
<start> O O O O O O O O O B-CON I-CON O O O O O O B-REL I-REL O O O B-REL I-REL O O O <eos>
（4）设A,分别说明存在单射、满射、双射函数A的条件.
<start> O O O O O O O O O O O O B-REL I-REL O B-REL I-REL O B-REL I-REL B-CON I-CON O O O O O <eos>
给出自然数集A上的函数A,使得
<start> O O O I-CON I-CON I-CON O O O B-CON I-CON O O O O <eos>
（1）A是单射的,但不是满射的.
<start> O O O O O B-REL I-REL O O O O O B-REL I-REL O O <eos>
(2)A是满射的,但不是单射的.
<start> O O O O O B-REL I-REL O O O O O B-REL I-REL O O <eos>
设A是A元集A,则从A到A的函数中有多少个双射函数?多少个单射函数?
<start> O O O O O O O O O O O O O O B-CON I-CON O O O O O B-REL I-REL I-CON I-CON O O O O B-CON I-CON I-CON I-CON O <eos>
（1）说明A是否为单射、满射、双射的.
<start> O O O O O O O O O B-REL I-REL O B-REL I-REL O B-REL I-REL O O <eos>
确定A是否为从A到A的函数,并对A指出哪些是单射,哪些是满射,哪些是双射的.
<start> O O O O O O O O O O O B-CON I-CON O O O O O O O O O B-REL I-REL O O O O B-REL I-REL O O O O B-REL I-REL O O <eos>
设A为非空集合,A为A上的等价关系,A为自然映射.
<start> O O O B-CON I-CON B-CON I-CON O O O O O O B-REL I-REL I-REL I-REL O O O B-REL I-CON B-REL I-REL O <eos>
（1）设A为给定自然数,A为整数集合上的模A相等关系,求A.
<start> O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON O O O O B-REL I-REL I-REL I-REL O O O O <eos>
（2）说明A的性质（单射、满射、双射).
<start> O O O O O O O O O O B-REL I-REL O B-REL I-REL O B-REL I-REL O O <eos>
(3)在什么条件下,A为双射函数.
<start> O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
设A为集合,A是A的子集A表示A的特征函数.且A,A,求A
<start> O O O B-CON I-CON O O O O O B-CON I-CON O O O O O B-CON I-CON B-CON I-CON O O O O O O O O <eos>
设A是A的子集,求A和A的特征函数A和A.
<start> O O O O O B-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O O <eos>
设A为A上的等价关系,且
<start> O O O O O O B-REL I-REL I-REL I-REL O O <eos>
(2)问A和A是否为单射、满射、双射的.
<start> O O O O O O O O O O B-REL I-REL O B-REL I-REL O B-REL I-REL O O <eos>
(3)A中哪些函数有反函数?如果有,求出这些反函数.
<start> O O O O O O O B-CON I-CON O O B-CON I-CON O O O O O O O O O O B-CON I-CON O <eos>
设A是从A到A的函数,且
<start> O O O O O O O O B-CON I-CON O O <eos>
(2)说明A是否为单射、满射、双射的.
<start> O O O O O O O O O B-REL I-REL O B-REL I-REL O B-REL I-REL O O <eos>
(1)说明A是否为单射和满射并说明理由;
<start> O O O O O O O O O B-REL I-REL O B-REL I-REL O O O O O O <eos>
(2)A的反函数是否存在,如果存在,求出A的反函数;
<start> O O O O O B-CON B-CON I-CON O O O O O O O O O O O O O O B-CON B-CON I-CON O <eos>
设A.在A上定义等价关系A,
<start> O O O O O O O O B-REL I-REL I-REL I-REL O O <eos>
(2)确定商集A.
<start> O O O O O B-CON I-CON O O <eos>
对于以下集合A和A,构造从A到A的双射函数.
<start> O O O O B-CON I-CON O O O O O O O O O O O B-REL I-REL I-CON I-CON O <eos>
设A,证明A是双射的.
<start> O O O O O O O B-REL I-REL O O <eos>
按照阶从低到高的次序排列下列函数,如果A与A的阶相等,则表示为A.
<start> O O O O O O O O O O O O O O B-CON I-CON O O O O O O O B-REL I-REL I-REL O O O O O O O <eos>
设A和A是实数区间,由定义证明A.
<start> O O O O O B-CON I-CON I-CON I-CON O O O O O O O O <eos>
证明定理8.6.
<start> O O O O O O O O <eos>
设A是集合,且A,证明A.29.找出3个不同的A的真子集,使得它们都与A等势.
<start> O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-REL I-REL O <eos>
找出3个不同的A的真子集A使得
<start> O O O O O O O O O B-CON I-CON I-CON O O O <eos>
计算下列集合的基数.
<start> O O O O B-CON I-CON O O O O <eos>
(6)平面上所有的圆心在A轴上的单位圆的集合
<start> O O O O O O O O O O O O O O O O O O O O B-CON I-CON <eos>
称的,因为图中只有单向边.但它不是传递的,因为2到1有边,1到3有边,但2到3没有边.
<start> O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON O O O O O B-CON O O O O O O O B-CON O <eos>
下面研究关系的性质和运算之间的联系.
<start> O O O O O O O O O O O O O O O O O O <eos>
设A和A是A上的关系,它们都具有某些共同的性质.在经过并、交、相对补、求逆或右复合运算以后,所得到的新关系A等是否还能保持原来关系的性质呢?可以证明,两个自反和对称的关系经过并运算后仍是自反和对称的,两个传递的关系经过交运算后仍是传递的.类似地,也可以考察其他的性质与运算之间的联系.有关的结论给在表A中,其中的A和A分别表示“能保持”和“不一定能保持”的含义.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR O B-OPR O B-OPR I-OPR I-OPR O B-OPR B-OPR I-OPR B-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT O B-ATT I-ATT O O O O O O O O O O O B-ATT I-ATT O B-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
表A关系性质与运算的联系
<start> O O O O O O O O O O O O <eos>
&自反性&反自反性&对称性&反对称性&传递性\\
<start> O B-ATT I-ATT I-ATT O O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O O <eos>
设A是A上的关系,我们希望A具有某些有用的性质,比如说自反性.如果A不具有自反性,我们通过在A中添加一部分有序对来改造A,得到新的关系A,使得A具有自反性.但又不希望A与A相差太多,换句话说,添加的有序对要尽可能少,满足这些要求的A就称为A的自反闭包,通过添加有序对来构造的闭包除自反闭包外还有对称闭包和传递闭包.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT O O O O O O O B-ATT I-ATT I-ATT O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O B-ATT I-ATT I-CON I-CON O <eos>
定义A设A是非空集合A上的关系,如果A上的关系A满足条件:
<start> O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O O O O O O O O O O <eos>
(1)A是自反的(对称或传递的),
<start> O O O O O B-ATT I-ATT O O B-ATT I-ATT O B-ATT I-ATT O O O <eos>
(3)对A上任何包含A的自反(对称或传递)关系A有A,则称A为A的自反(对称或传递)闭包.
<start> O O O O O O O O O O O O B-ATT I-ATT O B-ATT I-ATT I-ATT I-ATT I-ATT O O O O O O O O O O O O O B-ATT I-ATT I-ATT B-ATT I-ATT I-ATT I-ATT I-ATT I-ATT B-ATT I-ATT O <eos>
一般将A的自反闭包记作A,对称闭包记作A,传递闭包记作A.
<start> O O O O O B-OPR I-OPR I-OPR I-OPR O O O O B-OPR I-OPR I-OPR I-OPR O O O O B-OPR I-OPR B-OPR I-OPR O O O O <eos>
下面的定理和推论给出了构造闭包的方法.限于篇幅,略去有关的证明.
<start> O O O O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O O O <eos>
定理A设A为A上的关系,则有
<start> O O O O O O O O O B-CON I-CON O O O <eos>
推论设A为有穷集A上的关系,则存在正整数A使得
<start> O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O <eos>
设关系A的关系图分别记为A,则A的顶点集与A的顶点集相等.除了A的边以外,依下述方法添加新的边.
<start> O B-CON I-CON O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O B-CON O O O O O O O O O O O O B-CON O <eos>
考察A的每个顶点,如果没有环就加上一个环,最终得到的是A.
<start> O O O O O O B-CON I-CON O O O O O B-CON O O O O O B-CON O O O O O O O O O <eos>
考察A的每一条边,如果有一条A到A的单向边,A,则在A中加一条A到A的反方向边.最终得到A.
<start> O O O O O O O B-CON O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O <eos>
考察A的每个顶点A,找出从A出发的所有2步,3步,A步长的路径A为A中的顶点数).设路径的终点为A.如果没有从A到A的边,就加上这条边.当检查完所有的顶点后就得到图A.
<start> O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON I-CON O O O B-CON I-CON O O O O O O O O O O O O O O O B-CON O O O O O O B-CON O O O O O O O O B-CON I-CON O O O O O O O <eos>
例A设A,则A和A,A的关系图如图A所示.其中A的关系图就是使用上述方法直接从A的关系图得到的.
<start> O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON O O O O <eos>
知识点:关系闭包
<start> O O O O O O B-CON I-CON <eos>
输人:A(A的关系矩陎)
<start> O O O O O O O O O O O O <eos>
输凷:A的关系矩阵A
<start> O O O O O B-CON I-CON B-CON I-CON O <eos>
注意，上述算法中矩阵加法和乘法中的元素相加都使用逻辑加.考虑例A中的关系A.利用Warshall算法计算的矩阵序不如下所示,所得到的传递闭包实际上就是全域关系A这和图A的结果是一致的.
<start> O O O O O O O O B-CON I-CON I-OPR I-OPR O B-CON I-CON O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O B-REL I-REL I-REL I-REL O O O O O O O O O O O O O <eos>
限于篇吅畐,不再证明,仅用下面凹个定理给出闭包的主要性质.
<start> O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O O O O O <eos>
定理A设A是非空集合A上的关系,则(1)A是自反的当且仅当A.
<start> O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O O O B-ATT I-ATT O O O O O O O <eos>
(2)A是对称的当且仅当A.
<start> O O O O O B-REL I-REL O O O O O O O <eos>
(3)A是传递的当且仅当A.
<start> O O O O O B-OPR O O O O O O O O <eos>
定理A设A和A是非空集合A上的关系,且A,则
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O <eos>
定理A设A是非空集合A上的关系,
<start> O O O O O O B-CON I-CON B-CON I-CON O O O O O O <eos>
(1)若A是自反的,则A与A也是自反的.
<start> O O O O O O B-ATT I-ATT O O O O O O O O B-ATT I-ATT O O <eos>
(2)若A是对称的,则A与A也是对称的.
<start> O O O O O O B-REL I-REL O O O O O O O O B-REL I-REL O O <eos>
(3)若A是传递的,则A是传递的.
<start> O O O O O O B-ATT I-ATT O O O O O B-ATT I-ATT O O <eos>
定理A讨论了关系性质和闭包运算之间的联系.如果关系A是自反的或对称的.那么经过求闭包的运算以后所得到的关系仍旧是自反的或对称的.但是对于传递的关系则不然.它的自反闭包仍旧保持传递性,而对称闭包就有可能失去传递性,例如A是A上的传递关系,A的对称闭包
<start> O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O B-ATT I-ATT O O B-ATT I-ATT O O O O O O O B-CON I-CON O O O O O O O O O O O O O O B-ATT I-ATT O O B-ATT I-ATT O O O O O O B-ATT I-ATT O O O O O O O O O B-ATT I-CON B-CON I-CON O O O O B-ATT I-ATT I-ATT O O B-CON I-CON B-CON I-OPR O O O O O O B-ATT I-ATT I-ATT O O O O O O O O B-ATT I-ATT I-REL I-REL O O O B-CON I-CON B-CON I-CON <eos>
显然A不再是A上的传递关系.从这里可以看出,如果计算关系A的自反、对称、传递的闭包,为了不失去传递性,传递闭包运算应该放在对称闭包运算的后边,若令A表示A的自反、对称、传递闭包,则
<start> O O O O O O O O O B-ATT I-REL I-REL I-REL O O O O O O O O O O O O O O O O O B-ATT I-ATT O B-ATT I-ATT O O O O B-ATT I-CON O O O O O O B-ATT I-ATT I-ATT O O O B-CON I-OPR O O O O O O B-ATT I-CON B-CON I-CON I-OPR I-OPR O O O O O O O O O O O B-ATT I-ATT O B-ATT I-ATT O B-ATT O B-ATT I-ATT O O <eos>
等价关系是一类重要的二元关系.
<start> B-REL I-REL I-REL I-REL O O O O O O B-CON I-REL I-REL I-REL O <eos>
定义A设A为非空集合A上的关系.如果A是自反的、对称的和传递的,则称A为A上的等价关系.设A是一个等价关系,若A,称A等价于A,记作A.
<start> O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O B-REL I-REL O O B-REL I-REL O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O O O O O O B-REL I-REL I-REL I-REL O O O O O O B-REL I-REL O O O O O O O <eos>
例A设A,如下定义A上的关系A:
<start> O O O O O O O O O O O O B-CON I-CON O O <eos>
其中A称为A与A模3相等,即A除以3的余数与A除以3的余数相等.不难验证A为A上的等价关系,因为
<start> O O O O O O O O O O O I-REL O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O O O <eos>
A,若A,则有A.该关系的关系图如图A所示.\\
<start> O O O O O O O O O O B-CON I-CON O B-CON I-CON I-CON O O O O O O O O <eos>
不难看到,上述关系图被分为3个互不连通的部分.每部分中的数两两都有关系,不同部分中的数则没有关系.每一部分中所有的顶点构成一个等价类.
<start> O O O O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O B-CON I-CON I-CON O <eos>
定义A设A为非空集合A上的等价关系,A,令
<start> O O O O O O B-CON I-CON I-CON I-CON O O O B-REL I-REL I-REL I-REL O O O O <eos>
称A为A关于A的等价类,简称为A的等价类,简记为A或A.
<start> O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O O O <eos>
从以上定义可以知道,A的等价类是A中所有与A等价的元素构成的集合.例A中的等价类是
<start> O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O B-CON I-CON O O O B-CON I-CON O O O O O B-CON I-CON I-CON O <eos>
将例A中的模3等价关系加以推广,可以得到整数集合A上的模A等价关系.设A是任意整数,A为给定的正整数,则存在唯一的整数A和A,使得
<start> O O O O O O O B-REL I-REL I-REL I-REL O O O O O O O O O O O B-CON I-CON O O O O O B-REL I-REL I-REL I-REL O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
对于任意的整数A和A,定义模A相等关系:
<start> O O O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O <eos>
不难验证它是整数集合A上的等价关系.将A中的所有整数根据它们除以A的余数分类如下.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O B-REL I-REL I-REL I-REL O O O O O O O O O O O O O O O O O O O O O O O O <eos>
以上构成了A个等价类,使用等价类的符号可记为
<start> O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O <eos>
下面的定理给出了等价类的性质.
<start> O O O O O O O O B-ATT I-ATT I-ATT O O O O <eos>
定理A设A为非空集合A上的等价关系,则
<start> O O O O O O B-CON I-CON I-CON I-CON O O O B-REL I-REL I-REL I-REL O O <eos>
在日常生活、生产活动及科学研究中,人们常用点表示事物,用点与点之间是否有连线表示事物之间是否有某种关系,这样构成的图形就是图论中的图.其实,集合论中二元关系的关系图都是图论中的图.在这些图中,人们只关心点之间是否有连线,而不关心点的位置,以及连线的曲直,这是图论中的图与几何学中的图形的本质区别.为了给出图论中图的抽象而严格的数学定义,先给出无序积的概念.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
设A为任意的两个集合,称
<start> O O O O O O O O B-CON I-CON O O <eos>
为A与A的无序积,记作A.
<start> O O O O O B-OPR I-OPR I-OPR O O O O O <eos>
为方便起见,将无序积中的无序对A,记为A,并且允许A.需要指出的是,无论A,A是否相等,均有A,因而A.
<start> O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-REL I-REL O O O O O O O O O <eos>
定义A一个无向图A是一个有序的二元组A,其中
<start> O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O <eos>
（1）A是一个非空有穷集,称为顶点集,其元素称为顶点或结点.(2)A是无序积A的有穷多重子集(1),称为边集,其元素称为无向边,简称边.定义A一个有向图A是一个有序的二元组A,其中
<start> O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O B-CON I-CON I-CON O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON O O B-CON I-CON B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON O O B-CON I-CON O O B-CON I-CON B-CON O O O B-CON O O O O O O B-CON I-CON B-CON O O O O O O O B-CON I-CON I-CON O O O O <eos>
(2)A是笛卡儿积A的有穷多重子集,称为边集,其元素称为有向边,简称边.
<start> O O O O O B-OPR I-OPR I-OPR I-OPR O O B-CON I-CON B-CON I-CON I-CON I-CON O O O B-CON I-CON O O B-CON I-CON O O B-CON I-CON B-CON O O O B-CON O <eos>
通常用图形来表示无向图和有向图:用小圆圈(或实心点)表示顶点,用顶点之间的连线表示无向边,用带箭头的连线表示有向边.
<start> O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O B-CON O I-CON O O B-CON I-CON I-CON O O O B-CON I-CON O O B-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O <eos>
例A(1)给定无向图A,其中A,A;
<start> O O O O O O O B-CON I-CON I-CON O O O O O O O O <eos>
(2)给定有向图A,其中,A,A;
<start> O O O O O B-CON I-CON B-CON O O O O O O O O O <eos>
画出A与A的图形.
<start> O O O O O O B-CON I-CON O <eos>
解图9.1中(a),(b)分别给出了无向图A和有向图A的图形.
<start> O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O <eos>
与定义A和A有关的还有下面一些概念和规定.
<start> O O O O O O O O O O O O O O O O O O O O O <eos>
无向图和有向图统称为图,但有时也常把无向图简称为图.通常用A表示无向图,A表示有向图,有时也用A泛指图(无向的或有向的).用A分别表示A的顶点集和边集,A分别是A的顶点数和边数.有向图也有类似的符号.
<start> B-CON I-CON B-CON O B-CON I-CON B-CON O O O B-CON O O O O O O O B-CON I-CON B-CON O O O B-CON O O O O O O O B-CON I-CON B-CON O O O O B-CON I-CON B-CON O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O B-CON I-CON O O B-CON I-CON O O O O O O O B-CON I-CON O O B-CON O O B-CON I-CON B-CON O O O O O O O O <eos>
顶点数称作图的阶,A个顶点的图称为A阶图.
<start> B-CON I-CON O O O B-CON O O O O O B-CON I-CON O B-CON O O B-CON I-CON B-CON O <eos>
一条边也没有的图称为零图.A阶零图记作A.一阶零图A称为平凡图.平凡图只有一个顶点,没有边.
<start> O O B-CON O O O O B-CON O O B-CON I-CON O O O B-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O B-CON I-CON O O O B-CON O <eos>
在图的定义中规定顶点集A为非空集,但在图的运算中可能产生顶点集为空集的运算结果,为此称顶点集为空集的图为空图,并将空图记为A.
<start> O O O O O O O O B-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON O O B-CON I-CON O O O O O O O O O B-CON I-CON O O B-CON I-CON O O O O O O O O O O O O O O <eos>
当用图形表示图的时候,如果给每一个顶点和每一条边起一个名字(字母或数字,当然字
<start> O O B-CON I-CON O O B-CON O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O <eos>
(1)元素可以重复出现的集合称为A重集,或称多重集合.某元素重复出现的次数称为该元素的重复度.例如,在多重集A,A中,A的重复度分别为A.从多重集的角度考虑,无元素重复出现的集合是各元素重复度均为1的多重集.母还可以带下标),则称这样的图为标定图,否则称为非标定图.
<start> O O O B-CON I-CON O O O O O O O B-CON I-CON O O B-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O B-CON I-CON O O O O O O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O O O O O O B-ATT I-ATT I-ATT O O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O B-CON I-CON B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON O O O O <eos>
将有向图的各条有向边改成无向边后所得到的无向图称为这个有向图的基图.
<start> O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O <eos>
设A为无向图,A,称A为A的端点,A与A关联.若A,则称A与A的关联次数为1;若A,则称A与A的关联次数为2,并称A为环.如果顶点A不与边A关联,则称A与A的关联次数为0.
<start> O O O B-CON I-CON B-CON O O O O O O O O B-CON I-CON O O O O B-REL I-REL O O O O O O O O O O B-REL I-REL O O O O O O O O O O O O O O B-REL I-REL O O O O O O O O O B-CON O O O B-CON I-CON O O O O O B-REL I-REL O O O O O O O B-REL I-REL O O O O O <eos>
若两个顶点A与A之间有一条边连接,则称这两个顶点相邻.若两条边至少有一个公共端点,则称这两条边相邻.
<start> O O O B-CON I-CON O O O O O O O O B-CON O O O O O O O O B-CON I-CON O I-REL O O O O B-CON O O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON O I-REL O <eos>
设A为有向图,A,称A为A的端点,A为A的始点,A为A的终点,并称A与A关联.若A,则称A为A中的环.
<start> O O O B-CON I-CON B-CON O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O B-REL I-REL O O O O O O O O O O O B-CON O <eos>
若两个顶点之间有一条有向边,则称这两个顶点相邻.若两条边中一条边的终点是另一条边的始点,则称这两条边相邻.
<start> O O O B-CON I-CON O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON O I-REL O O O O B-CON O O O B-CON O B-CON I-CON O O O O O O B-CON I-CON O O O O O O B-CON O I-REL O <eos>
图(无向的或有向的)中没有边关联的顶点称为孤立点.
<start> B-CON O O O O O O O O O O O O B-REL I-REL I-REL O B-CON I-CON O O B-CON I-CON I-CON O <eos>
定义A在无向图中,如果关联一对顶点的无向边多于1条,则称这些边为平行边,平行边的条数称为重数.在有向图中,如果关联一对顶点的有向边多于1条,并且这些边的始点与终点相同(也就是它们的方向相同),则称这些边为平行边.含平行边的图称为多重图,既不含平行边也不含环的图称为简单图.
<start> O O O O B-CON I-CON B-CON O O O O O O O O B-CON I-CON O B-CON I-CON B-CON O O O O O O O O O B-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON B-CON O O O O O O O O B-CON I-CON O B-CON I-CON I-CON O O O O O O O O O B-CON O B-CON I-CON O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O <eos>
在图9.1(a)中A与A是平行边,在图A中,A与A是平行边,而A与A不是平行边.图A中A与(b)两个图都不是简单图.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON O O B-CON O O O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
定义A设A为无向图,A,称A作为边的端点的次数为A的度数,简称为度,记作A.在不发生混淆时,略去下标A,简记为A.设A为有向图,A,称A作为边的始点的次数为A的出度,记作A,简记作A.称A作为边的终点的次数为A的入度,记作A,简记作A.称A为A的度数,记作A,简记作A.
<start> O O O O O O B-CON I-CON B-CON O O O O O O O B-CON O B-CON I-CON O O O O O O B-ATT I-CON O O O O B-ATT O O O O O O O O O B-ATT I-ATT O O O O O O O O O O O O O O O O B-CON I-CON B-CON O O O O O O O B-CON O B-CON I-CON O O O O O O B-ATT I-ATT O O O O O O O O O O O O O O B-CON O B-CON I-CON O O O O O O B-ATT I-ATT O O O O O O O O O O O O O O O B-CON I-CON O <eos>
注意:在无向图中,顶点A上的环以A作两次端点.在有向图中,顶点A上的环以A作一次始点和一次终点,共作两次端点.
<start> O O O O B-CON I-CON I-CON O O B-CON I-CON O O O B-CON O O O O O B-CON I-CON O O B-CON I-CON B-CON O O B-CON I-CON O O O B-CON O O O O O B-CON I-CON O O O B-CON I-CON O O O O O B-CON I-CON O <eos>
在无向图A中,令
<start> O B-CON I-CON I-CON O O O O <eos>
分别称为A的最大度和最小度.可类似定义有向图A的最大度A、最小度A和最大出度A、最小出度A、最大人度A、最小人度A.
<start> O O O O O O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O O O O O O B-CON I-CON B-CON O O B-ATT I-ATT I-ATT O O B-ATT I-ATT I-ATT O O B-ATT I-ATT I-ATT I-ATT O O B-ATT I-ATT B-ATT I-ATT O O B-ATT I-ATT B-ATT I-ATT O O B-ATT I-ATT B-ATT I-ATT O O <eos>
(1)A是A的非空子集;
<start> O O O O O O O O O B-CON I-CON O <eos>
(3)A,如果A,则A与A不交;
<start> O O O O O O O O O O O O O B-REL I-REL O <eos>
证(1)由等价类的定义可知,A有A.又由于等价关系的自反性有A,即A非空.
<start> O O O O O B-REL I-REL I-REL O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O B-REL I-REL O O O O O O O O O <eos>
从而证明了A.综合上述必有A.
<start> O O O O O O O O O O O O O O O <eos>
(3)假设A,则存在A,从而有A,即AA成立.根据A的对称性和传递性必有A,与A矛盾,即假设错误,原命题成立.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O O O O O O O O O O O O O O O O B-CON I-CON O O O <eos>
由非空集合A和A上的等价关系A可以构造一个新的集合一一商集.
<start> O B-CON I-CON I-CON I-CON O O O O O B-REL I-REL I-REL I-REL O O O O O O O O O B-CON I-CON O O B-CON I-CON O <eos>
定义A设A为非空集合A上的等价关系,以A的所有等价类作为元素的集合称为A关于A的商集,记作A,即
<start> O O O O O O B-CON I-CON I-CON I-CON O O O B-REL I-REL I-REL I-REL O O O O O O B-REL I-CON O O O B-CON I-CON O B-CON I-CON O O O O O O O B-CON I-CON O O O O O O <eos>
而整数集合A上模A等价关系的商集是
<start> O B-CON I-CON I-CON I-CON O O O O B-REL I-REL I-REL I-REL O B-CON I-CON O <eos>
和等价关系及商集有密切联系的概念是集合的划分.先给出划分的定义.
<start> O B-REL I-REL I-REL I-REL O B-CON I-CON O O O O O O O O O B-CON I-CON O B-OPR I-OPR O O O O B-OPR I-OPR O O O O <eos>
定义A设A为非空集合,若A的子集族A,是A的子集构成的集合)满足下面的条件:
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O B-CON I-CON O O O B-CON I-CON O O O O O O O O O <eos>
则称A是A的一个划分,称A中的元素为A的划分块.
<start> O O O O O O O O B-OPR I-OPR O O O O O B-CON I-CON O O O B-OPR I-OPR I-CON O <eos>
则A和A是A的划分,其他都不是A的划分.因为A中的子集A和A有交,AA中含有空集,而A根本不是A的子集族.
<start> O O O O O O O B-OPR I-OPR O O O O O O O O B-OPR I-OPR O O O O O O B-CON I-CON O O O O B-OPR O O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON I-CON O <eos>
把商集A和划分的定义相比较,易见商集就是A的一个划分,并且不同的商集将对应于不同的划分.反之,任给A的一个划分A,如下定义A上的关系A:
<start> O B-CON I-CON O O B-OPR I-OPR O O O O O O O O O B-CON I-CON O O O O O O B-OPR I-OPR O O O O O O B-CON I-CON O O O O O O O B-OPR I-OPR O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O O <eos>
则不难证明A为A上的等价关系,且该等价关系所确定的商集就是A.由此可见,A上的等价关系与A的划分是一一对应的.
<start> O O O O O O O O O O B-REL I-REL I-REL I-REL O O O B-REL I-REL I-REL I-REL O O O O B-CON I-CON O O O O O O O O O O O O B-REL I-REL I-REL I-REL O O O B-REL I-REL O O O O O O O <eos>
例7.16给出A上所有的等价关系.
<start> O O O O O O O O O O O O B-REL I-REL I-REL I-REL O <eos>
解如图7.6,先给出A的所有划分.
<start> O O B-CON O O O O O O O O O O O O O O <eos>
这些划分与A上的等价关系之间的一一对应是:A对应于全域关系A对应于恒等关系A和A分别对应于等价关系A和A,其中
<start> O O O O O O O O B-REL I-REL I-REL I-REL O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O O O O B-REL I-REL I-REL I-REL O O O O O O O O B-REL I-REL I-REL I-REL O O O O O O <eos>
下面介绍另一种重要的关系一一偏序关系.
<start> O O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O <eos>
定义A设A为非空集合A上的关系.如果A是自反的、反对称的和传递的,则称A为A上的偏序关系,记作A.设为偏序关系,如果A,则记作A,读作A“小于等于”A.
<start> O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O B-REL I-REL O O B-ATT I-REL I-REL O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O O O O O O O B-REL I-REL I-REL I-REL O O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O O O <eos>
注意这里的“小于等于”不是指数的大小,而是指在偏序关系中的顺序性.A“小于等于”A的含义是:依照这个序,A排在A的前边或者A就是A.根据不同偏序的定义,对序有着不同的解释.例如整除关系是偏序关系A的含义是3整除6.大于等于关系也是偏序关系,针对这个关系写A是说在大于等于关系中5排在4的前边,也就是说5比4大.
<start> O O O O O O B-REL I-REL I-REL I-REL O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O O O O O O O O B-REL I-REL I-REL I-REL O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-REL I-REL O O O O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O B-REL I-REL I-REL I-REL O O O O O O O O O O B-REL I-REL I-REL I-REL I-REL I-REL O O B-REL I-REL I-REL I-REL O O O O O O O <eos>
例如集合A上的恒等关系A是A上的偏序关系.小于等于关系、整除关系和包含关系也是相应集合上的偏序关系.一般说来,全域关系A不是A上的偏序关系.
<start> O O B-CON I-CON O O O B-REL I-REL I-REL I-REL O O O O O B-REL I-REL I-REL I-REL O B-REL I-REL I-REL I-REL I-REL I-REL O B-REL I-REL I-REL I-REL O B-REL I-REL I-REL I-REL O O O O B-CON I-CON O O B-REL I-REL I-REL I-REL O O O O O O B-REL I-REL I-REL I-REL O O O O O O B-REL I-REL I-REL I-REL O <eos>
(2)A与A可比A其中A读作A“小于”A.这里所说的“小于”是指在偏序中A排在A的前边.
<start> O O O O O O O O O O O O O O O O B-REL I-REL O O O O O O O O O B-REL I-REL O O O O B-CON I-REL O O O O O O O O O <eos>
例如A是A上的整除关系,则有
<start> O O O O O O O B-REL I-REL I-REL I-REL O O O <eos>
定义A设A为非空集合A上的偏序关系,如果A与A都是可比的,则称A为A上的全序关系(或线序关系).
<start> O O O O O O B-CON I-CON B-CON I-CON O O O B-REL I-REL I-REL I-REL O O O O O O O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O O B-CON I-REL I-REL I-REL O O <eos>
例如数集上的小于等于关系是全序关系,因为任何两个数总是可比大小的.但整除关系一般说来不是全序关系,如集合A上的整除关系就不是全序关系,因为2和3不可比.
<start> O O O O O O B-REL I-REL I-REL I-REL I-REL I-REL O B-REL I-REL I-REL I-REL O O O O O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O O O O O O B-REL I-REL I-REL I-REL O O B-CON I-CON O O O B-REL I-REL I-REL I-REL O O O B-REL I-REL I-REL I-REL O O O O O O O O O O <eos>
定义A集合A和A上的偏序关系A一起称作偏序集,记作A.
<start> O O O B-CON I-CON O O O O O B-REL I-REL I-REL I-REL O O O O O B-CON I-CON I-CON O O O O O <eos>
例如整数集合A系A构成偏序集<P(A),A.
<start> O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O O O O O O <eos>
利用偏序关系的自反性、反对称性和传递性可以简化一个偏序关系的关系图,得到偏序集的哈斯图.为了说明哈斯图的画法,首先定义偏序集中顶点的覆盖关系.
<start> O O B-REL I-REL I-REL I-REL O O O O O O O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O B-CON I-CON B-CON O O O O O O O O B-CON I-CON I-CON O O O O B-REL I-REL I-REL I-REL O <eos>
定义A设A为偏序集,A,如果A且不存在A使得A,则称A覆盖A.例如A集合上的整除关系,有2覆盖1,4和6都覆盖2.但4不覆盖1,因为有AA也不覆盖4,因为A不成立.
<start> O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O B-REL I-REL I-REL I-REL O O O B-CON I-CON O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON O O O O O O O O O <eos>
在画偏序集A的哈斯图时,首先适当排列顶点的顺序使得:A,若A,则将A画在A的下方.对于A中的两个不同元素A和A,如果A覆盖A,就用一条线段连接A和A.
<start> O O B-CON I-CON I-CON O O B-CON I-CON B-CON O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O O O O O O O O O O O O O <eos>
例A画出偏序集A和A的哈斯图.
<start> O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O <eos>
解两个哈斯图如图A所示.
<start> O O O B-CON I-CON I-CON O B-CON O O O O <eos>
例A已知偏序集A的哈斯图如图A所示,试求出集合A和关系A的表达式.
<start> O O O O B-CON I-CON I-CON O O B-CON I-CON B-CON O O O O O O O O O B-CON I-CON O O B-CON I-CON O O O O O O <eos>
下面考臣偏序集中的一些特硃元孝。
<start> O O B-CON I-CON I-CON I-CON O O O O O O O O O O <eos>
定义7.24叒A为偏序集,A.
<start> O O O O O O O O O B-CON I-CON I-CON O O O <eos>
(1)若A成立,则称A为A的最小元.
<start> O O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
(2)若A成立,则称A为A的最大元.
<start> O O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
(4)若A成立,则称A为A的极大元.
<start> O O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
从以上定义可以看出,最小元与极小元是不一样的.最小元是A中最小的元素,它与A中其他元素都可比;而极小元不一定与A中元素都可比,只要没有比它小的元素,它就是极小元.对于有穷集A,极小元一定存在,但最小元不一定存在.最小元如果存在,一定是唯一的,但极小元可能有多个.如果A中只有一个极小元,则它一定是A的最小元.类似地,极大元与最大元也有这种区别.
<start> O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
例A设偏序集A,A如图A所示,求A的极小元、最小元、极大元和最大元.
<start> O O O B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O <eos>
没有最小元与最大元.
<start> O O B-CON I-ATT I-CON O B-CON I-CON I-CON O <eos>
由这个例子可以知道,哈斯图中的孤立顶点既是极小元,也是极大元.例A设A为集合,A,且A.若A,问:
<start> O O O O O O O O O O B-CON I-CON B-CON O O B-CON I-CON B-CON I-CON O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O O O <eos>
(1)偏序集A是否存在最大元?
<start> O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O <eos>
(2)偏序集A是否存在最小元?
<start> O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O <eos>
(3)偏序集A中极大元和极小元的一般形式是什么?并说明理由.
<start> O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O O O O O O O O O O <eos>
解A不存在最小元和最大元,因为A.
<start> O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O <eos>
考察幂集A的哈斯图,最底层的顶点是空集,记作第0层.由底向上,第1层是单元集,第2层是二元子集,A,由A,则第A层是A的A元子集,第A层,也就是最高层只有一个顶点A.偏序集A与A相比,恰好缺少第0层与第A层(因为A是A元集).因此A的极小元就是A的所有单元集,即A;而极大元恰好比A少一个元素,即A.
<start> O O B-CON I-CON O O B-CON I-CON B-CON O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O <eos>
定义A设A为偏序集,A.
<start> O O O O O O B-CON I-CON I-CON O O O <eos>
(1)若A成立,则称A为A的上界.
<start> O O O O O O O O O O O O O O B-ATT I-ATT O <eos>
(2)若A成立,则称A为A的下界.
<start> O O O O O O O O O O O O O O B-ATT I-ATT O <eos>
(3)令A为A的上界A,则称A的最小元为A的最小上界或上:知识点:偏序关系确界.
<start> O O O O O O O O B-ATT I-ATT O O O O O O B-ATT I-ATT I-ATT O O O B-ATT I-ATT B-ATT I-ATT O O O O O O O B-REL I-REL I-REL I-REL B-ATT I-ATT O <eos>
(4)令A为A的下界A,则称A的最大元为A的最大下界或下确界.
<start> O O O O O O O O B-ATT I-ATT O O O O O O B-CON I-CON I-CON O O O B-ATT I-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O <eos>
由以上定义可知,A的最小元一定是A的下界,同时也是A的最大下界.同理,A的最大元一定是A的上界,同时也是A的最小上界.但反过来不一定正确,A的下界不一定是A的最小元,因为它可能不是A中的元素;A的上界也不一定是A的最大元.
<start> O O O O O O O O O O B-ATT I-ATT I-ATT O O O O O B-ATT I-ATT O O O O O O O B-ATT I-ATT I-ATT I-ATT O O O O O O B-CON I-CON I-CON O O O O O B-ATT I-ATT O O O O O O O B-ATT I-ATT B-ATT I-ATT O O O O O O O O O O O O O B-ATT I-ATT O O O O O O B-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON O O O B-ATT I-ATT O O O O O O O B-CON I-CON I-CON O <eos>
A的上界、下界、最小上界、最大下界都可能不存在.如果存在,最小上界与最大下界是唯一的.
<start> O O B-ATT I-ATT O B-ATT I-ATT O B-ATT I-ATT B-ATT I-ATT O B-ATT I-ATT B-ATT I-ATT O O O O O O O O O O O O B-ATT I-ATT B-ATT I-ATT O B-ATT I-ATT B-ATT I-ATT O O O O O <eos>
考虑图A中的偏序集.令A,则A的下界和最大下界都不存在,上界有A和A,最小上界为A.
<start> O O O O O O B-CON I-CON I-CON O O O O O O O B-ATT I-ATT O B-ATT I-ATT I-ATT I-ATT O O O O O O O O O O O O B-ATT I-ATT B-ATT I-ATT O O O <eos>
偏序关系广泛存在于实际问题中,调度问题就是典型的实例.一般性的调度问题可以描述如下.
<start> B-REL I-REL I-REL I-REL O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O <eos>
给定有穷的任务集A和A台相同的机器,A上存在偏序关系A,如果A,那么任务A完成以后A才能开始工作.A表示完成任务A所需要的时间,A表示任务A的截止时间,A.设开始时间为A表示对任务集A的一个调度方案,其中A表示任务A的开始时间.A表示完成所有任务的最终时间.假设每项任务都可以安排在任何一台机器上进行加工,如果A满足下述3个条件,则称A为可行调度：
<start> O O O O O O O O O O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
在偏序集A中求A的上界、下界、最小上界和最大下界.
<start> O B-CON I-CON I-CON O O O O O B-ATT I-ATT O B-ATT I-ATT O B-ATT I-ATT B-ATT I-ATT O B-ATT I-ATT I-ATT I-ATT O <eos>
设A和A为偏序集，在集合A上定义关系A如下：
<start> O O O O O B-CON I-CON I-CON O O B-CON I-CON O O O O B-CON I-CON O O O O <eos>
证明A为A上的偏序关系.
<start> O O O O O O O B-REL I-REL I-REL I-REL O <eos>
设A为偏序集,在A上定义新的关系A,称A为A的对偶关系.
<start> O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O B-CON I-REL I-REL I-REL O <eos>
(1)证明A也是A上的偏序关系.
<start> O O O O O O O O O O O B-REL I-REL I-REL I-REL O <eos>
(2)如果A是整数集合上的小于等于关系,那么A是什么关系?如果A是正整数集合上的整除关系,那么A是什么关系?
<start> O O O O O O O B-CON O B-CON I-CON O O B-REL I-REL I-REL I-REL I-REL I-REL O O O O O O O O O O O O O O O O O B-CON I-CON O O B-REL I-REL I-REL I-REL O O O O O O O O O O <eos>
（3）偏序集A和A中的极大元、极小元、最大元、最小元等之间有什么关系?
<start> O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O O O O <eos>
一个项目A由12个任务构成,任务之间的顺序关系如图A所示.任务A到A有一条边表示任务A必须安排在A之前完成.试给出A的一个拓扑排序.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
函数是一种特殊的二元关系.
<start> B-CON I-CON O O O O O O B-CON I-CON B-CON I-CON O <eos>
定义8.1设A为二元关系,若A都存在唯一的A使A成立,则称A为函数(1).对于函数A,如果有A,则记作A,并称A为A在A的值.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O <eos>
判断它们是否为函数.
<start> O O O O O O O B-CON I-CON O <eos>
解A是函数.A不是函数,因为对应于A存在A和A满足A和A,与函数定义矛盾.
<start> O O O B-CON I-CON O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O <eos>
由于函数是集合,可以用集合相等来定义函数的相等.
<start> O O B-CON I-CON O B-CON I-CON O O O O B-CON I-CON B-REL I-REL O O O B-CON I-CON O B-REL I-REL O <eos>
定义A设A为函数,则
<start> O O O O O O B-CON I-CON O O <eos>
由以上定义可知,如果两个函数A和A相等,一定满足下面两个条件:
<start> O O O O O O O O O O O O B-CON I-CON O O O B-REL I-REL O O O O O O O O O O O O <eos>
(1)函数也可以称作映射.(1)A;
<start> O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O <eos>
例如,函数A是不相等的.团为
<start> O O O B-CON I-CON O O O B-REL I-REL O O O O <eos>
定义8.3设A为集合,如果A为函数,且A,则A称为从A到A的函数,记作A.
<start> O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O <eos>
例如,A是从A到A的函数;A也是从A到A的函数.
<start> O O O O O O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON O <eos>
由排列组合的知识不难证明:若A,且A,则A.在例A中,AA,而A.
<start> O B-OPR I-OPR B-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
当A或A中至少有一个集合是空集时,可以分成下面3种情况.
<start> O O O O O O O O O O B-CON I-CON O B-CON I-CON O O O O O O O O O O O O O <eos>
定义8.5谋函数A.
<start> O O O O O O B-CON I-CON O O <eos>
(1)令A,称A为A在A下的像.特别地,当A时称A为函数的像.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O B-CON O <eos>
(2)今A,称A为A在A下的完全原像.
<start> O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
在这里注意区别函数的值和像两个不同的概念.函数值A,而像A.
<start> O O O O O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O O O O <eos>
设A,显然A在A下的完全原像A是A的子集.考虑A,那么A的完圶原像就是A.一般说来A,昍是A.例如函数AA,满足
<start> O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON O O O O O <eos>
知识点:函数定义
<start> O O O O O O O O <eos>
下面讨论函数的性质.
<start> O O O O B-CON I-CON O O O O <eos>
(1)若A,则称A是满射的.
<start> O O O O O O O O O O B-REL I-REL O O <eos>
(2)若A都存在唯一的A使得A,则称A是单射的.
<start> O O O O O O O O O O O O O O O O O O O O B-REL I-REL O O <eos>
(3)若A既是满射又是单射的,则称A是双射的(或一一映像).
<start> O O O O O O O B-REL I-REL O O B-REL I-REL O O O O O O B-REL I-REL O O O B-REL I-REL I-REL I-REL O O <eos>
由定义不难看出,如果A是满射的,则对于任意的A,都存在A,使得A.如果A是单射的,则对于A,一定有A.换句话说,如果对于AA有A,则一定有A.
<start> O O O O O O O O O O O O B-REL I-REL O O O O O O O O O O O O O O O O O O O O O O O B-REL I-REL O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例A判断下列函数是否为单射、满射、双射的.为什么?
<start> O O O O O O B-CON I-CON O O O B-REL I-REL O B-REL I-REL O B-REL I-REL O O O O O O <eos>
解(1)A是开口向下的抛物线,不是单调函数,并且在A点取得极大值0.因此它既不是单射也不是满射的.
<start> O O O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-REL I-REL O O O B-REL I-REL O O <eos>
(2)A是单调上升的,因此是单射的.但不是满射的,因为A,A.
<start> O O O O O O O O O O O O O O B-REL I-REL O O O O O B-REL I-REL O O O O O O O O <eos>
(3)A是满射的,但不是单射的,例如A.
<start> O O O O O B-REL I-REL O O O O O B-REL I-REL O O O O O O <eos>
(4)A是满射、单射、双射的.因为它是单调函数且A.
<start> O O O O O B-REL I-REL O B-REL I-REL O B-REL I-REL O O O O O O O O B-CON I-CON O O O <eos>
(5)A不是单射的,也不是满射的.当A时,A;而当A时,A.在A处函数A取得极小值A.所以该函数既不是单射的,也不是满射的.
<start> O O O O O O B-REL I-REL O O O O O B-REL I-REL O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O B-CON I-CON O O O B-REL I-REL O O O O O B-REL I-REL O O <eos>
例8.5对于以下各题给定的A和A,判断是否构成函数A.如果是,说明A是否为单射、满射和双射的.并根据要求进行计算.
<start> O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O B-REL I-REL O B-REL I-REL O B-REL I-REL O O O O O O O O O O O O <eos>
解(1)能构成A,但A既不是单射的也不是满射的.因为AA.
<start> O O O O O O O O O O O O O O B-REL I-REL O O O O B-REL I-REL O O O O O O O <eos>
(2)不能构成A,因为A不是函数.A且A,与函数定义矛盾.
<start> O O O O O O O O O O O O O O B-CON I-CON O O O O O O B-CON I-CON O O O O O <eos>
(4)能构成A.且A是双射的.
<start> O O O O O O O O O O O B-REL I-REL O O <eos>
(5)能构成A.但A既不是单射的,也不是满射的.因为该函数在A处取得极大值A,函数不是单调的,且A.
<start> O O O O O O O O O O O O O B-REL I-REL O O O O O B-REL I-REL O O O O O B-CON I-CON O O O O O B-CON I-CON I-CON O O B-CON I-CON O O O O O O O O O <eos>
(6)能构成A,且A是双射的.
<start> O O O O O O O O O O O B-REL I-REL O O <eos>
(7)能构成A既不是单射的,也不是满射的.因为AA,且A.
<start> O O O O O O O O O O B-REL I-REL O O O O O B-REL I-REL O O O O O O O O O O <eos>
例A对于给定的集合A和A,构造双射函数A.
<start> O O O O O O O B-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O <eos>
圈.否则,由于A,因而A除与A上的A相邻外,还存在A上的顶点A和AA与A相邻.于是,A为一个圈且长度大于等于4,见图9.13.
<start> O O O O O O O O O O O O O O O O O O B-REL I-REL O O O O O O O O B-CON I-CON O O O O O O B-REL I-REL O O O O O O O O B-CON O B-ATT I-ATT O O O O O O O O O O O O O <eos>
图多半用图形来表示,也可以用集合来定义,还可以用矩阵来表示.用矩阵表示图便于用代数方法研究图的性质.为了用矩阵表示图,必须指定顶点或边的顺序,使其成为标定图.本节中讨论图的关联矩阵、邻接矩阵和可达矩阵.
<start> B-CON O O O B-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O B-CON O O O B-CON I-CON O O O O B-CON O O O O O O O B-CON I-CON O O B-CON O O O O O B-CON I-CON O B-CON O O O O O O O O B-CON I-CON B-CON O O O O O O O O B-CON I-CON B-CON I-CON O O O B-CON I-CON O O O B-CON I-CON O <eos>
定义9.21设无向图A,令A为顶点A与边
<start> O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON O O B-CON <eos>
图A所示无向图的关联矩阵为
<start> O O O O B-CON I-CON I-CON O B-CON I-CON B-CON I-CON O <eos>
每条边恰好关联两个顶点(环所关联的两个顶点重合).
<start> O O B-CON O O O O O O B-CON I-CON O B-CON O B-REL I-REL O O O B-CON I-CON O I-REL O O <eos>
A,这个结果正是握手定理的内容,即各顶点的度数之和等于边数的2倍.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON O B-ATT O O O O O O O O O O O <eos>
第A列与第A列相同当且仅当边A与A是平行边.
<start> O O B-CON O O O B-CON O O O O O O O O O O O B-CON I-CON I-CON O <eos>
A当且仅当A是孤立点.
<start> O O O O O O O B-CON I-CON I-CON O <eos>
定义9.22设有向图A中无环,A,令
<start> O O O O O O O B-CON I-CON I-CON O O B-CON B-CON O O O O <eos>
图A所示图A的关联矩阵为
<start> O O O O O O O B-CON I-CON I-CON I-CON O <eos>
苺列恰好有A和A.
<start> O O O O O O O O O <eos>
A的个数等于A的个数,都等于边数A,这正是有向图握手定理的宾.
<start> O O O O O O O O O O O O O O O O O O O O O B-CON I-CON B-CON B-CON I-CON I-CON I-CON O O O <eos>
第A行中,A的个数等于A的个数等于A.
<start> O O O O O O O O O O O O O O O O O O O <eos>
平㐹边所对应的邜相同.
<start> O O B-CON O O O O O O O O <eos>
图A所示有吕图A的邻接矩阵为
<start> B-CON O O O O B-CON B-CON O O O O B-CON I-CON O <eos>
有向图的邻接矩阵有以下性质.
<start> B-CON I-CON B-CON O O O B-CON I-CON O O O O O O <eos>
上述性质表明,A中所有元系之和为A中长度为1的通路（即边）的条数，A为A中长度为1的回路(即环)的条数.现在考虑A的2㐸幂A)A,其中A.对每一个A等于顶点A邻接到贶点A的边数乘以顶点A邻接到顶点A的边数,即顶点A到顶点A的长度为2的通路的条数.从而A的元素之和A等于A中所有长度为2的通路数.这里的通路可以是复杂通路,包括回路在内,且是在定义的意义下计数的.而A为A到自身的长度为2的回路数,A等于A中所有长度为2的回路数.根据这个思路,不难用归纳法证明下述定理.
<start> O O O O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O B-ATT B-ATT O O O B-CON I-CON O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O B-CON I-CON O O O O O O B-CON I-CON O O B-CON I-CON O O O B-ATT O O O B-CON I-CON O O O O O O O <eos>
定理A设A为有向图A的邻接矩阵,A的顶点集A,则A的A次幂AA中元素A为A中A到A长度为A的通路数,其中A为A到自身长度为A的回路数,而A为A中长度为A的通路总数,其中A为A中长度为A的回路总数.
<start> O O O O O O B-CON I-CON B-CON O O O O B-CON I-CON O O O B-CON I-CON I-CON O O O O O O O B-OPR O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON I-ATT O O O O O O O O O B-ATT I-ATT O O O B-CON I-CON I-ATT O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O B-CON I-CON O O O <eos>
前面已经计算出图9.16所示有向图A的邻接矩阵A,下面给出A.
<start> O O O O O O O B-CON O O O O O O B-CON I-CON B-CON O O O O B-CON I-CON O O O O O O O O <eos>
定义A设A为有向图,A,令
<start> O O O O O O B-CON I-CON I-CON O O O O <eos>
图9.15、图A所示有向图的可达矩阵分别为
<start> B-CON O O O O O B-CON O O O B-CON I-CON B-CON O O O B-CON I-CON O O O <eos>
对无向图可以同样定义邻接矩阵和可达矩阵,实际上只要把每一条无向边A看作一对方向相反的有向边A和A即可.定理A及推论对无向图同样成立.与有向图的区别是,无向图的邻接矩阵和可达矩阵都是对称的.
<start> O B-CON I-CON B-CON O O O O O O O O B-CON I-CON O O O B-CON I-CON O O O O O O O O O O B-CON I-CON B-CON O O O O O O O O O O B-CON I-CON B-CON O O O O O O O O O O O O O B-CON I-CON B-CON O O O O O O B-CON I-CON B-CON O O O O O B-CON I-CON B-CON O O O B-CON I-CON O O O B-CON I-CON O O B-REL I-REL O O <eos>
给定下面4个图(前两个为无向图,后两个为有向图)的集合表示,画出它们的图形表示.
<start> O O O O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O B-CON I-CON O O O O O O O O O O O O O <eos>
先将图9.17中各图的顶点标定顺序,然后写出各图的集合表示.
<start> O O B-CON O O O O O O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O <eos>
写出图9.17中各图的顶点的度数,对有向图还要写出出度和人度.
<start> O O B-CON O O O O O O B-CON O B-CON I-CON O B-ATT I-ATT O O B-CON I-CON B-CON O O O O B-ATT B-ATT O B-ATT I-ATT O <eos>
（1）写出图9.18(a)中与顶点A相邻的顶点.
<start> O O O O O O O O O O O O O O O B-CON I-CON O B-REL I-REL O B-CON I-CON O <eos>
（2）写出图9.18(b)中与顶点A相邻的顶点,以及以A为始点的边的终点和以A为终点的边的始点.
<start> O O O O O O O O O O O O O O O B-CON I-CON O B-REL I-REL O B-CON I-CON O O O O O O B-CON I-CON O B-CON O B-CON I-CON O O O O B-CON I-CON O B-CON O B-CON I-CON O <eos>
设无向图A有10条边,3度与4度顶点各两个,其余顶点的度数均小于A中至少有几个顶点?在最少顶点的情况下,写出各顶点的度数及A.
<start> O B-CON I-CON B-CON O O O O O B-CON O O O O O B-CON B-CON I-CON O O O O O O B-CON I-CON O B-ATT O O O O O O O O O O O B-CON I-CON O O O O B-CON I-CON O O O O O O O O B-CON I-CON O B-ATT O O O O <eos>
（1）设A阶图A中有A条边,证明:
<start> O O O O O O B-CON O O O O O B-CON O O O O <eos>
(2)A阶非连通的简单图的边数最多可为多少?最少可为多少?
<start> O O O O O O O O O B-CON I-CON I-CON O B-ATT O O O O O O O O O O O O O O O <eos>
已知4阶有向图A的顶点度数依次为A,出度依次为A,求A的顶点的人度及A,A
<start> O O O O B-CON I-CON B-CON O O B-CON I-CON B-ATT O O O O O O B-ATT I-ATT O O O O O O O O B-CON I-CON O O I-ATT O O O O <eos>
已知5阶图的顶点度数分别为A,问它有多少条边.
<start> O O O O B-CON O B-CON I-CON B-ATT O O O O O O O O O O O O B-CON O <eos>
设无向图中有6条边,3度与5度顶点各一个,其余的都是2度顶点,问该图有几个顶点.
<start> O B-CON I-CON I-CON O O O O B-CON O O O O O B-CON B-CON I-CON O O O O O O O O O O B-CON B-CON I-CON O O O O O O O B-CON I-CON O <eos>
是否存在具有下列顶点度数的5阶图?若有,则画出一个这样的图.\\
<start> O O O O O O O O B-CON I-CON O O O O O B-CON O O O O O O O O O O O O B-CON O O O <eos>
画顶点度数为A的4阶简单图和非简单图各一个.
<start> O B-CON I-CON B-ATT O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O <eos>
设9阶无向图A中,每个顶点的度数不是5就是6,证明A中至少有5个6度顶点或至少有6个度顶点.
<start> O O O B-CON I-CON I-CON O O O O O B-CON I-CON O B-ATT O O O O O O O O O O O O O O O O O O O I-CON I-CON O O O O O O B-CON I-CON I-CON O <eos>
证明三维空间中不可能存在有奇数个面且每个面都有奇数条棱的多面体.
<start> O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON O O O B-CON O O O O O O O B-CON I-CON I-CON O <eos>
设A是A阶无向简单图,A为它的补图,已知A,求A和A.
<start> O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O B-CON B-CON O O O O O O O O O O <eos>
图9.19中各对图是否同构?若同构,则给出它们顶点之间的双射函数.\\
<start> B-CON O O O O O O O B-CON O O B-REL I-REL O O B-REL I-REL O O O O O O B-CON O O O O B-REL I-REL I-CON I-CON O O O <eos>
画出所有3条边的5阶简单无向图和3条边的3阶简单有向图.
<start> O O O O O O B-CON O O O B-CON I-CON I-CON I-CON I-CON O O O B-CON O O O B-CON I-CON I-CON I-CON I-CON O <eos>
设A是A阶自补图,证明A或A,其中A为正整数.
<start> O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O <eos>
已知A阶无向简单图A有A条边,试求A的补图A的边数A.
<start> O O O O B-CON I-CON B-CON I-CON I-CON O O O O B-CON O O O O O B-CON B-CON O O B-CON O O O <eos>
设A与A均为无向简单图.A与A分别为A与A的补图.证明A当且仅当A.
<start> O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O B-CON B-CON O O O O O O O O O O <eos>
20.6阶2-正则图有儿种非同构的情况?
<start> O O O O O O O B-CON I-CON I-CON O O O B-REL B-REL I-REL O O O O <eos>
在图9.20中,下述顶点序列是否构成通路?哪些是简单通路?哪些是初级通路?哪些是回路?哪些是简单回路?哪些是初级回路?\\
<start> O B-CON O O O O O O O O O O O O O O O O B-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON O O O O B-CON I-CON B-CON I-CON O O O O B-CON I-CON B-CON I-CON O O O <eos>
点(终点)的圈是不同的,顶点间排列顺序不同的圈也看成是不同的,因而A中有
<start> B-CON O B-CON O O O B-CON O O O O O B-CON I-CON O O O O O O O O B-CON O O O O O O O O O O O O O <eos>
知识点:通路与A个不同的长为3的圈:A.
<start> O O O O O O O O O O O O O O O O B-CON O O O <eos>
下面介绍最短路径问题.设想有若干个城市,某些城市之间有直接到达的公路,现在要选择一条从A城到B城的最短的路.为此,可以用图表示这些城市和城市之间的公路.此外,还要在每一条边的旁边标上这条边所表示的公路的长度.这种在边的旁边标有数字的图称作带权图.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON B-CON O <eos>
定义A设图A(无向图或有向图),对A的每一条边A,给定一个数A,称作边A的权.把这样的图称为带权图,记作A.当A时,把A记作A.
<start> O O O O B-CON O O B-CON I-CON B-CON O B-CON I-CON B-CON O O O O O O O O B-CON O O O O O O O O O O O B-CON O O B-ATT O O O O O B-CON O O B-CON I-CON I-CON O O O O O O O O O O O O O O O <eos>
设A是A中的一条通路,A中所有边的权之和称为A的长度,记作A.类似地,可定义回路A的长度A.
<start> O O O O O O O O B-CON I-CON O O O O O B-CON O B-ATT O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O <eos>
设带权图A(无向图或有向图),其中每一条边A的权A为非负实数.A,当A和A连通A可达A时,称从A到A长度最短的路径为从A到A的最短路径,称其长度为从A到A的距离,记作A.约定:A;当A和A不连通A不可达A时,A.
<start> O B-CON I-CON B-CON O O B-CON I-CON B-CON O B-CON I-CON B-CON O O O O O O O O O O B-ATT O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-ATT O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
最短路径问题:给定带权图A及顶点A和A,其中每一条边A的权A为非负实数,求从A到A的最短路径.
<start> O O O O O O O O O B-CON I-CON B-CON O O B-CON I-CON O O O O O O O O O O O O B-ATT O O O O O O O O O O O O O O O O O O <eos>
不难看出,如果A是从A到A的最短路径,则对每一个A是从A到A的最短路径.根据这条性质,E.W.Dijkstra于1959年给出下述最短路径算法.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O <eos>
算法给出从起点A到每一点的最短路径.在计算过程中,赋予每一个顶点A一个标号AA).标号分永久标号和临时标号.在A的永久标号A中,A是从A到A的距离,A是A到A的最短路径上A的前一个顶点.当A是临时标号时,A和A分别是当前从A经过永久标号的顶点到A的长度最短的路径上A的前一个顶点和这条路径的长度.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
输人:带权图A和A,其中A
<start> O O O B-CON I-CON B-CON O O O O O O O <eos>
输出:A到A中每一顶点的最短路径及距离
<start> O O O O O O O O O O O O O O O O O O O <eos>
for与A关联的临时标号的顶点A
<start> O O O O O O O O O O O O O B-CON I-CON O <eos>
计算结束时,对每一个顶点A,利用A从A开始回溯找到从A到A的最短路径.
<start> O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O <eos>
例A带权图A如图A所示,求从A到其余各点的最短路径和距离.
<start> O O B-CON I-CON B-CON O O B-CON O O O O O O O O O O O O O O O O O O O O O <eos>
根据表A的最后一行,从A到其余各点的最短路径和距离如下.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
首先讨论无向图的连通性.
<start> O O O O B-CON I-CON B-CON O O O O O <eos>
定义A设无向图A,若A之间存在通路,则称A是连通的,记作A.规定:A.若无向图A是平凡图或A中任何两个顶点都是连通的,则称A为连通图,否则称A为非连通图.
<start> O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O B-CON I-CON B-CON O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O <eos>
由定义不难看出,无向图中顶点之间的连通关系是A上的等价关系,具有自反性、对称性和传递性.
<start> O O O O O O O O B-CON I-CON B-CON O B-CON I-CON O O O B-REL I-REL I-REL I-REL O O O O B-REL I-REL I-REL I-REL O O O B-ATT I-ATT I-ATT O B-ATT I-ATT O O B-ATT I-ATT I-ATT O <eos>
完全图A都是连通图,而零图A都是非连通图.
<start> B-CON I-CON I-CON O O O B-CON I-CON I-CON O O B-CON I-CON O O O B-CON I-CON I-CON I-CON O <eos>
定义A设无向图A是A关于顶点之间的连通关系的一个等价类,称导出子图A为A的一个连通分支.A的连通分支数记为A.
<start> O O O O B-CON I-CON I-CON O O O O O B-CON I-CON O O O B-REL I-REL I-REL I-REL O O O B-ATT I-ATT I-ATT O O O O B-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O O O <eos>
由定义,若A为连通图,则A;若A为非连通图,则A.在所有的A阶无向图中,A阶零图是连通分支最多的,A.
<start> O O O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON O B-CON I-CON B-CON I-CON O O O O O O <eos>
下面讨论无向图的连通程度.
<start> O O O O B-CON I-CON B-CON O O O O O O <eos>
定义A设无向图A.若存在A使得A,且对于任意的A,均有A,则称A是A的点割集.若A,则称A为割点.割点.注意,A与悬挂顶点A不在任何点割集中.
<start> O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O B-CON I-CON I-CON O O <eos>
在图A中,A都是点割集,而A都是
<start> O B-CON O O O O O O B-CON I-CON I-CON O O O O O <eos>
定义A设无向图A,若存在A使得A,且对于任意的A,均有AA,则称A是A的边割集,或简称为割集.若A,则称A为割边或桥.
<start> O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON O O O O O O O O B-CON I-CON O B-CON O <eos>
在图9.9中,A都是割集,其中A是桥.
<start> O B-CON O O O O O O O O B-CON I-CON O O O O O B-CON O <eos>
定义A设A为无向连通图且不是完全图,则称
<start> O O O O O O B-CON I-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON O O O <eos>
为A的点连通度,简称连通度.A有时简记为A.规定完全图A的点连通度为A,非连通图的点连通度为0.又若A,则称A是A连通图,A为非负整数.
<start> O O O B-ATT B-ATT I-ATT I-ATT O O O O O O O O O O O O O O O O O B-CON I-CON B-CON O O B-ATT B-ATT I-ATT I-ATT O O O B-CON I-CON I-CON I-CON O B-ATT B-ATT I-ATT I-ATT O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O <eos>
图9.9中图的点连通度为1,此图为1-连通图,A的点连通度A,所以A是1-连通图,2-连通图,3-连通图,4-连通图.图A中,(a)图的点连通度A,所以它是2-连通图,也是1-连通图.若A是A-连通图A,则在A中删除任何A个顶点后,所得图一定还是连通的.
<start> B-CON O O O O B-CON O B-ATT B-ATT I-ATT I-ATT O O O O B-CON O O O B-CON I-CON I-CON O O O B-ATT B-ATT I-ATT I-ATT O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O B-CON O B-ATT B-ATT I-ATT I-ATT O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O B-CON O O O O O O O <eos>
定义A设A是无向连通图,称
<start> O O O O O O B-CON I-CON I-CON I-CON I-CON O O <eos>
为A的边连通度.A有时简记为A.规定非连通图的边连通度为0.又若A,则称A是A边-连通图.
<start> O O O O B-ATT I-ATT I-ATT O O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT O O O O O O O O O O O O O O O O O O <eos>
若A是A边-连通图,则在A中任意删除A条边后,所得图依然是连通的.完全图A的边连通度为A,因而A是A边-连通图,A.图A中图的边连通度A,它只能是1边-连通图.
<start> O O O O O O B-CON I-CON I-CON O O O O O O O O O O O B-CON O O O O B-CON O O O O O O O B-CON I-CON B-CON O O O B-ATT I-ATT I-ATT O O O O O O O O B-CON O B-CON I-CON I-CON O O O O O O O O O B-ATT I-ATT I-ATT O O O O O O O O O B-CON I-CON I-CON O <eos>
例A求图9.10所示各图的点连通度和边连通度,并指出它们各是几连通图及几边连通图.
<start> O O O B-CON O O O O O O O B-CON O B-ATT I-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT I-ATT O O O O O O O O O B-CON I-CON I-CON O O O I-CON I-CON I-CON O <eos>
解设第A个图的点连通度为A,边连通度为A.容易看出,AA.
<start> O O O O O B-CON O B-ATT I-ATT I-ATT I-ATT O O O B-ATT I-ATT I-ATT I-ATT O O O O O O O O O O O <eos>
(a)是A-连通图,1,2,3,4边一连通图.
<start> O O O O O O B-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O <eos>
（b）是A-连通图,1,2,3边一连通图.
<start> O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON O <eos>
(c)是1，2-连通图,1,2边一连通图.
<start> O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O <eos>
（d）是1-连通㠽,1边一连通图.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
（f）是1,2-连通图,1,2边一连通图.
<start> O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O <eos>
（g）是0-连通图,0边-连通图.
<start> O O O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O <eos>
（h）是0-连通图,0边一连通图.
<start> O O O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O <eos>
根捃定义不难证明点连通度和边连通度有下述性质.
<start> O O O O O O O O B-ATT I-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT I-ATT O O O O O O <eos>
定理9.6对于住何无向图A,有
<start> O O O O O O O O O B-CON I-CON I-CON O O O <eos>
例9.7(1)给出A的无向简单图.
<start> O O O O O O O O O O O B-CON I-CON B-CON I-CON I-CON O <eos>
(2)给出A的无向简单图.
<start> O O O O O O O B-CON I-CON B-CON I-CON I-CON O <eos>
解(1)A阶无向完全图A和A阶零图A都满足A.
<start> O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O B-CON B-CON O O O O O O <eos>
（2）在两个A之间放置一个顶点A,并连接A与苇一个A的两个顶点.所得简单图有一个割点,A.它没有桥,但有两条边组成的边害集,所以A当A时,A,当A时,A4.图9.11给出了A和A的情况.
<start> O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O B-CON I-CON O O O B-CON I-CON B-CON O O O B-CON I-CON O O O O O O B-CON O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O <eos>
图9.11下面讨论有向图的连通性.
<start> B-CON O O O O O O O O B-CON I-CON B-CON O B-ATT I-ATT O O <eos>
定义A设A为一个有向图,A,若从A到A存在通路,则称A可达A,记作A.规定A总是可达自身的,即A.若A且A,则称A与A是相互可达的,记作A.规定A.
<start> O O O O O O O O B-CON I-CON B-CON O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
定义9.20若有向图A的基图是连通图,则称A是弱连通图,简称为连通图.若A与A至少有一个成立,则称A是单向连通图.若A,均有A,则称A是强连通图.
<start> O O O O O O O B-CON I-CON I-CON O O B-CON I-CON O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
由定义可知,强连通图一定是单向连通图,单向连通图一定是弱连通图.在图A中,(a)为强连通图,(b)为单向连通图,(c)是弱连通图.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O <eos>
下面给出强连通图与单向连通图的判别定理.
<start> O O O O B-CON B-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O O O O O <eos>
定理A有向图A是强连通图当且仅当A中存在经过每个顶点至少一次的回路.
<start> O O O B-CON I-CON B-CON O O B-CON B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O <eos>
证充分性显然.下面证明必要性.设A,由A的强连通性,A,A.设A为A到A的通路,A.又因为A,设A为A到A的通路.于是,依次连接A所得到的回路经过A中每个顶点至少一次.
<start> O O O O O O O O O O O O O O O O O O O O O B-ATT B-ATT I-ATT I-ATT O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O O B-CON I-CON O O O O O <eos>
定理A有向图A是单向连通图当且仅当A中存在经过每个顶点至少一次的通路.证明略.
<start> O O O B-CON I-CON B-CON O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O <eos>
下面介绍一种在涉及路径和圈的构造性证明中常用的方法.设A为A阶无向图,A为一条路径.若A的始点和终点都不与A外的顶点相邻,则称A是一条极大路径.“极大”的意思是这条路径不能再向外延长了.任给一条路径,如果它的始点或终点与路径外的某个顶点相邻,就把它延伸到这个顶点.继续这一过程,直到最后不能向外延伸为止,最后总能得到一条极大路径.称如此构造一条极大路径的方法为扩大路径法.在有向图中可以同样定义极大路径的概念和用扩大路径法构造图中的一条极大路径.
<start> O O O O O O O O O B-CON I-CON O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O B-CON I-CON O B-CON I-CON O O O O O O B-CON I-CON B-REL I-REL O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O B-CON I-CON O B-CON I-CON O O O O B-CON I-CON B-REL I-REL O O O O O O <eos>
例A设A为A阶无向简单图,A,证明A中存在长度大于等于4的圈.
<start> O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O O O O O O O B-CON O <eos>
证不妨设A是连通图,否则,因为A的各连通分支的最小度也都大于等于3,因而可对它的某个连通分支进行讨论.设A为A中任意两个顶点,由A是连通图,因而A之间存在通路,由定理A的推论可知,A之间存在一条路径.用扩大路径法扩大这条路径,设最后得到的极大路径为A.由于A,必有A.若A与A相邻,则A为长度大于等于4的
<start> O O O O O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON O B-ATT I-ATT I-ATT O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O <eos>
(3)将A中元素依下列顺序排列并与A中元素对应:
<start> O O O O O O B-CON I-CON O O O O O O O O O O O B-CON I-CON O O O <eos>
则这种对应所表示的函数是
<start> O O O O O O O O O B-CON I-CON O <eos>
下面定义一些常用的函数.
<start> O O O O O O O O O B-CON I-CON O <eos>
定义8.7(1)设A,如果存在A使得对所有的A都有A,则称A是常函数.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O I-CON I-CON O <eos>
(2)称A上的恒等关系A为A上的恒等函数.对所有的A都有A.
<start> O O O O O O O B-REL I-REL I-REL I-REL O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O <eos>
(3)设A为偏序集,A,如果对任意的A,就有AA,则称A为单调递增的;如果对任意的A,就有A,则称A为严格单调递增的.类似地也可以定义单调递減的和严格单调递减的函数.
<start> O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT I-ATT O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT I-ATT O O O O O O O O O O B-ATT I-ATT O O O O O O B-ATT I-ATT I-ATT I-ATT O B-CON I-CON O <eos>
(4)设A为集合,对于任意的A的特征函数A定义为
<start> O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O O <eos>
(5)设A是A上的等价关系,令
<start> O O O O O O O O O B-REL I-REL I-REL I-REL O O <eos>
称A是从A到商集A的自然映射.
<start> O O O O O O B-CON I-CON O O B-OPR I-OPR B-OPR I-OPR O <eos>
大家都很熟悉实数集A上的函数A,它是单调递增的且是严格单调递增的,但它只是上面定义中的单调函数的特例.而在上面的定义中,单调函数可以定义于一般的偏
<start> O O O O O O B-CON I-CON I-CON O O O B-CON I-CON O O O O O I-ATT I-ATT I-ATT O O O O O B-ATT I-ATT I-ATT I-ATT O O O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O <eos>
序集上,例如,给定偏序集A,其中A为集合的包含关系,A为一般的小于等于关系.令A,则A是单调递增的,但不是严格单调递增的.
<start> O O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON O B-REL I-REL I-REL I-REL O O O O O O B-REL I-REL I-REL I-REL I-REL I-REL O O O O O O O B-ATT I-ATT I-ATT I-ATT O O O O O O O B-ATT I-ATT I-ATT I-ATT O O <eos>
再谈谈集合的特征函数.设A为集合,不难证明,A的每一个子集A都对应于一个特征函数,不同的子集则对应于不同的特征函数.例如A,则有
<start> O O O B-CON I-CON O B-CON I-CON I-CON I-CON O O O O B-CON I-CON O O O O O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O <eos>
由于A的子集与特征函数的对应关系,可以用特征函数来标记A的不同的子集.
<start> O O O O B-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON O <eos>
下面讨论自然映射A.给定集合A和A上的等价关系A,就可以确定一个自然映射A.例如A是A上的等价关系,那么有
<start> O O O O B-CON I-CON B-CON I-CON O O O O B-CON I-CON O O O O O B-REL I-REL I-REL I-REL O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O B-REL I-REL I-REL I-REL O O O O <eos>
不同的等价关系将确定不同的自然映射,其中恒等关系所确定的自然映射是双射,而其他的自然映射一般说来只是满射.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-REL I-REL O O O O O B-CON I-CON I-CON I-CON O O O O O O B-REL I-REL O <eos>
最后介绍一类定义在自然数集合上的函数.许多实际问题都需要用计算机求解,在求解过程中首先需要将实际问题用形式化的方法表述出来,然后要选择一个好的算法.算法的好坏取决于运行效率和占用资源的多少,一般说来,效率较高、占用资源较少的算法就是比较好的算法.估计算法效率的方法是:选择一个基本运算,对于给定规模为A的输人,计算算法所做基本运算的次数,将这个次数表示为输人规模的函数.比如排序和检索问题的基本运算是比较,矩阵乘法的基本运算是元素的相乘.容易看到,对于规模为A的不同输人,一个算法所做的基本运算次数是不同的.例如检索问题,设A是A个不同的数构成的有序数组,从A中检索给定的元素A.如果A在A中,输出A在A中的位置A;如果A不在A中,输出0.这个问题的基本运算是比较运算,输人规模是A,算法采用顺序比较的方法.如果给定数组A和元素A,恰好A,那么只需要1次比较,算法就可以输出结果;如果A不在A中,必须通过A次比较才能输出0.为了解决这个问题,一般只估计算法在最坏情况下所做基本运算的次数和平均情况下所做基本运算的次数,通常将最坏情况下的基本运算次数记为A,平均情况下的基本运算次数记为A,分别称为算法最坏情况下和平均情况下的复杂度.显然,A和A都是正整数集合或自然数集合上的函数.例如顺序搜索算法最坏情况下的复杂度函数A.
<start> O O O O O O O O O O O O B-CON I-CON O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
设A是定义在自然数集合上的函数,当A很大时,函数值A的增长取决于函数的阶.函数的阶越高,增长得越快,算法的复杂度就越高,同时也意味着算法的效率越低.算法分析的主要工作就是估计复杂度函数的阶.复杂度函数的阶可以是A等,这里的A是A的简写.如果这个函数是指数函数,那么它随着A的增加将增长得非常快.当A比较大时,即使最先进的计算机也不可能在允许的时间内求解,这就是所谓的“指数爆炸”问题.
<start> O O O O O O O O O B-CON I-CON O O B-CON I-CON O O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O <eos>
在算法分析中,为了表示函数的阶,经常使用下述符号.
<start> O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O <eos>
若存在正数A和A,使得对于一切A有A,记作A.若存在正数A和A,使得对于一切A有A,记作A.若A且A,则A.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例如A,则A,则A.而A则表示常数函数.显然A.
<start> O O O O O O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O <eos>
在算法设计中分治策略是经常采用的设计技术，它的基本思想是:设问题的输人规模为A.用某种方法把原问题分解为A个规模相等的子问题.这些子问题互相独立,除了输人规模减小以外,其他都与原问题相同.使用同样的算法分别求解这些子问题,然后把子问题的解组合起来就得到了原问题的解.这种方法称为分治策略.例如,上面的检索问题就可以采用二分检索算法.它的基本思想就是把A和中间的数比较,如果A等于这个数,那么算法结束;如果A大于这个数,下面只需搜索后半个数组;如果A小于这个数,那么只需搜索前半个数组.不管怎样,经过一次比较,数组的规模将缩小一半.忽略算法的细节处理,可以用伪码描述如下.
<start> O O O O O O B-CON I-CON O I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
输人:数组A,下标从1到A;数A
<start> O O O B-CON I-CON O O O O O O O O O O O <eos>
根据前面的分析,经过一次比较,问题规模将至少减半.如果原来的问题规模A,那么至多经过A次比较,问题规模就可以减少到1.所以复杂度函数A的阶为A.不难看出,在最坏情况下的复杂度函数,对于顺序搜索算法为A,而对于二分搜索算法为A.显然二分搜索算法的复杂度函数的阶更低,是效率高的算法.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O B-CON I-CON I-CON I-CON <eos>
例A下面是一些常用函数,它们是按照阶从高到低的顺序排列的.
<start> O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O <eos>
函数是一种特殊的二元关系,函数的复合就是关系的右复合.一切和关系右复合有关的定理都适用于函数的复合.下面着重考虑函数在复合中的特有性质.
<start> B-CON I-CON O O O O O O B-CON I-CON B-CON I-CON O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON O O O O O O O O O O <eos>
定理A设A是函数,则A也是函数,且满足
<start> O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O <eos>
证因为A是关系,所以A也是关系.
<start> O O O O O O O O O O O O O O O O <eos>
若对某个A有A和A,则
<start> O O O O O O O O O O O <eos>
所以(1A和A得证。
<start> O O O O O O O O O O <eos>
利用这个定理不难得到下面两个推论.
<start> O O O O O O O O O O O O O O O O O <eos>
推论1设A为函数,则A和A都是函数,且
<start> O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O <eos>
下面两个定理给出了函数复合运算的性质,由于篇幅所限,略去相关的证明.
<start> O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O <eos>
(1)如果A都是满射的,则A也是满射的.
<start> O O O O O O O O B-REL I-REL O O O O O O B-REL I-REL O O <eos>
(2)如果A都是单射的,则A也是单射的.(3)如果A都是双射的,则A也是双射的.
<start> O O O O O O O O B-REL I-REL O O O O O O B-REL I-REL O O O O O O O O O O B-REL I-REL O O O O O O B-REL I-REL O O <eos>
定理A设A,则有
<start> O O O O O O O O <eos>
定理A说明函数的复合运算能够保持函数单射、满射、双射的性质.但该定理的逆命题不为真,即如果A是单射(或满射、双射的),不一定有A和A都是单射(或满射、双射的).考虑集合A.令
<start> O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON B-REL I-REL O B-REL I-REL O B-REL I-REL O O O O O O O O O O B-CON I-CON O O O O O O O O O B-REL I-REL O O B-REL I-REL O B-REL I-REL O O O O O O O O O O O O B-REL I-REL O O B-REL I-REL O B-REL I-REL O O O O O B-CON I-CON O O O <eos>
不难看出,A和A都是单射的,但A不是单射的.关于满射的情况也可以给出类似的反例.
<start> O O O O O O O O O O B-REL I-REL O O O O O O B-REL I-REL O O O O B-REL I-REL O O O O O O O O O O O O O O <eos>
定理A说明了恒等函数在函数复合中的特点,特别对于A有A.
<start> O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON O I-CON O O O O O O O O O O O O O <eos>
下面考虑函数的逆运算.
<start> O O O O B-CON I-CON O B-OPR I-OPR I-OPR O <eos>
任给函数A,它的逆A不一定是函数,只是一个二元关系.例如
<start> O O B-CON I-CON O O O O B-CON O O O O O B-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O O <eos>
显然,A不是函数.因为对于A有A和A两个值与之对应,破坏了函数的单值性.
<start> O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O B-ATT I-ATT O O <eos>
任给单射函数A,则A是函数,且是从A到A的双射函数,但不一定是从A到A的双射函数.因为对于某些A没有值与之对应.
<start> O O B-CON I-CON B-CON I-CON O O O O O B-CON I-CON O O O O O O O O B-REL I-REL I-CON I-CON O O O O O O O O O O O B-REL I-REL I-CON I-CON O O O O O O O O O O O O O O O O <eos>
对于什么样的函数A,它的逆A是从A到A的函数A呢?有以下定理.
<start> O O O O O O B-CON I-CON O O O O B-CON O O O O O O O B-CON I-CON O O O O O O O O O <eos>
定理A设A是双射的,则A也是双射的.
<start> O O O O O O B-REL I-REL O O O O O O B-REL I-REL O O <eos>
证先证明A是从A到A的函数A.因为A是函数,所以A是关系,且由定理A得
<start> O O O O O O O O O O O B-CON I-CON O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O <eos>
成立,则由逆的定义有
<start> O O O O O B-CON O O O O <eos>
根据A的单射性可得A,从而证明了A是函数.综上所述,A是满射的函数.
<start> O O O O B-REL I-REL O O O O O O O O O O O O B-CON I-CON O O O O O O O O B-REL I-REL O B-CON I-CON O <eos>
再证明A的单射性.若存在A使得A.从而有
<start> O O O O O B-REL I-REL I-REL O O O O O O O O O O O O <eos>
条件(1)表示每项任务都要在截止时间之前完成,条件(2)表示任何时刻同时工作的机器台数不超过A,条件(3)表示任务安排必须满足任务集的偏序约束.求使得A最小的可行调度.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-OPR I-CON I-CON O O O O O O O O O O B-CON I-OPR O <eos>
例A设A,每项任务的截止时间都等于7.去掉自反成分,A中的偏序约束如图A所示,每个任务结点中的数字表示完成该任务所用的时间.图中给出了两个可行的调度方案,其中A的方案是最优的方案,因为根据A和A的顺序关系,完成所有的任务至少需要5个单位的时间.\\
<start> O O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT I-ATT O O O O B-ATT I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
对于一般性的调度问题,目前还没找到好的算法.如果只有一台机器,并且每项任务的截止时间没有限制,那么问题将简化很多.对于这种问题可以使用拓扑排序给出调度方案.所谓拓扑排序,就是将原来的偏序集A扩展成一个对应的全序集A,忽略关系A的自反性部分得到拓扑排序的序关系A.因此有A.图A给出了一个偏序集的哈斯图和两个不同的拓扑排序的结果,出现多个结果的原因是:在扩展成全序关系时,原来偏序集中不可比的元素之间的次序可以任意确定.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-OPR I-OPR O O O O O O O O O B-CON I-OPR I-OPR I-OPR O O O O O O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-OPR I-OPR O <eos>
设A是任意集合，
<start> O O O O O B-CON I-CON O <eos>
(2)下列等式中哪些成立?哪些不成立?对于成立的给出证明,对于不成立的举一反例.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
判断下述命题的真假,如果为真,给出证明;如果为假,给出反例.\\
<start> O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
(3)存在集合A使得A\\
<start> O O O O O B-CON I-CON O O O O O O <eos>
设A为任意集合,证明:若A,则A.
<start> O O O O O B-CON I-CON O O O O O O O O O O <eos>
列出从集合A到A的所有的二元关系.
<start> O O O B-CON I-CON O O O O O O O B-CON I-CON B-CON I-CON O <eos>
列出集合A上的恒等关系A、全域关系A小于等于关系A和整除关系A.
<start> O O B-CON I-CON O O O B-REL I-REL I-REL I-REL O O B-REL I-REL I-REL I-REL O B-REL I-REL I-REL I-REL I-REL I-REL O O B-REL I-REL I-REL I-REL O O <eos>
设A,列出下列关系A.
<start> O O O O O O O O O O O <eos>
给定A上的关系A和A,满足
<start> O O O O O O O O O O O O O <eos>
对于下面每个小题,确定哪些有序对属于给定的关系.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O <eos>
（1）关系:A;有序对:A.
<start> O O O O O O O O B-CON I-CON I-CON O O O <eos>
(2)关系A;有序对:A.
<start> O O O O O O O B-CON I-CON I-CON O O O <eos>
（3）关系:A(以全域关系为全集）;有序对:A.
<start> O O O O O O O O O B-REL I-REL I-REL I-REL O B-CON I-CON O O B-CON I-CON I-CON O O O <eos>
A是A上的二元关系,对于A定义集合
<start> O O O O O B-CON I-CON B-CON I-CON O O O O O O B-CON I-CON <eos>
设A是A上的关系,且
<start> O O O O O O O O O O <eos>
给出A的关系矩阵和关系图.
<start> O O O O B-CON I-CON B-CON I-CON O B-CON I-CON I-CON O <eos>
设A为A上的关系,其中
<start> O O O O O O O O O O O <eos>
设A,试给出A上两个不同的关系A和A,使得A.
<start> O O O O O O O O O O O O O B-CON I-CON O O O O O O O O <eos>
设A和A为A上的关系,证明:
<start> O O O O O O O O O O O O O O <eos>
设A,定义A上的关系
<start> O O O O O O O O O O <eos>
说明A具有哪些性质并说明理由.
<start> O O O O O O O O O O O O O O O <eos>
给定A上的关系A,试
<start> O O O O O O O O O O <eos>
(1)画出A的关系图
<start> O O O O O O O B-CON I-CON B-CON <eos>
设A.图A给出了12种A上的关系,对于每种关系写出相应的关系矩阵,并说明它所具有的性质.
<start> O O O B-CON O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O B-CON I-CON B-CON I-CON O O O O O O O O O O O O <eos>
请看表A,试对表中打“V"部分的命题给出证明,对打“A”部分的命题举出反例.
<start> O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O <eos>
设A的关系图如图A所示,试给出A和A的关系图.
<start> O O O B-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
设A为A上的关系,A的关系图如图A所示.
<start> O O O O O O B-CON I-CON O O O B-CON I-CON I-CON O O O O O O <eos>
（1）求A的集合表达式.
<start> O O O O O O B-CON I-CON O O O O <eos>
(2)求A的集合表达式.
<start> O O O O O O B-CON I-CON O O O O <eos>
设A是A上的等价关系,且A在A上所构成的等价类是A.
<start> O O O O O O B-REL I-REL I-REL I-REL O O O O O O O O O O B-REL I-REL I-REL O O O <eos>
（3）求A的传递闭包.
<start> O O O O O O B-CON I-CON B-CON I-CON O <eos>
对于给定的A和A,判䉼A是否为A上的等价关系.
<start> O O O O O O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O <eos>
设A上的等价关系
<start> O O O O B-REL I-REL I-REL I-REL <eos>
画出A的关系图,并求出A中各元素的等价类.
<start> O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON O B-CON I-CON I-CON O <eos>
设A是正整数集A的子集族,判断A是否构成A的划分.
<start> O O O O I-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O O O O O B-OPR I-OPR O <eos>
对任意非空的集合A且A是A的非空集合族,A是否构成A的划分?
<start> O O O B-CON I-CON O B-CON I-CON O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O <eos>
设A,在A上定义二元关系A,
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O <eos>
(1)证明A是A上的等价关系.
<start> O O O O O O O O O O B-REL I-REL I-REL I-REL O <eos>
(2)确定由A引起的对A的划分.
<start> O O O O O O O O O O O O O B-OPR I-OPR O <eos>
设A是A上的关系,且A,设A,则A是A上的等价关系.
<start> O O O O O O B-REL I-REL O O O O O O O O O O O O O B-REL I-REL I-REL I-REL O <eos>
（1）给出A的关系矩阵.
<start> O O O O O O O B-CON I-CON B-CON I-CON O <eos>
(2)写出商集A.
<start> O O O O O B-CON I-CON O O <eos>
设A为A上的自反和传递的关系,证明A是A上的等价关系.
<start> O O O O O O B-ATT I-ATT O B-ATT I-ATT O O O O O O O O O O O B-REL I-REL I-REL I-REL O <eos>
设A是A上的自反关系,证明A是A上等价关系的充分必要条件是:耇A且A,则有A
<start> O O O O O O B-REL I-REL I-REL I-REL O O O O O O O B-REL I-REL I-REL I-REL O O O O O O O O O O O O O O O O O <eos>
设A为A上的二元关系,A,
<start> O O O O O O B-REL I-REL I-REL I-REL O O O <eos>
（1）证明A为等价关系.
<start> O O O O O O O B-REL I-REL I-REL I-REL O <eos>
(2)求商集A.
<start> O O O O B-CON I-CON O O <eos>
设A为A上的二元关系,A,
<start> O O O O O O B-REL I-REL I-REL I-REL O O O <eos>
(1)证明A为等价关系;
<start> O O O O O O O B-REL I-REL I-REL I-REL O <eos>
(2)求A导出的划分.
<start> O O O O O O O O B-OPR I-OPR O <eos>
设A是A上的自反和传递关系,如下定义A上的关系A,使得A,
<start> O O O O O O B-ATT I-ATT O B-ATT I-ATT I-REL I-REL O O O O O O O O O O O O O O O O <eos>
证明A是A上的等价关系.
<start> O O O O O O O B-REL I-REL I-REL I-REL O <eos>
对于下列集合与整除关系画出哈斯图.
<start> O O O O B-CON I-CON O B-OPR I-OPR I-OPR I-CON O O B-CON I-CON I-CON O <eos>
针对图A中的每个哈斯图,写出集合以及偏序关系的表达式.
<start> O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON O O B-REL I-REL I-REL I-REL O O O O O <eos>
图A是两个偏序集A的哈斯图.分别写出集合A和偏序关系A的集合表达式.
<start> B-CON O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O B-CON I-CON O O B-REL I-REL I-REL I-REL O O B-CON I-CON O O O O <eos>
分别画出下列各偏序集A的哈斯图,并找出A的极大元、极小元、最大元和最小元.
<start> O O O O O O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O <eos>
代人初值A,得A,最终得到A.这说明揷人排序在最坏情况下是A的算法.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例13.6Hanoi塔问题的递推方程是
<start> O O O O O B-CON I-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O <eos>
这是一个含有零次多项式函数的非齐次的递推方程.设特解为A,代人原方程得A1,因此A.从而得到递推方程的通解是
<start> O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON O <eos>
第二种情况:A为指数函数A,这里的A代表某个常数.若A不是特征根,则特解为A,其中A为待定系数;若A是A重特征根,则特解为A.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O O O O O O <eos>
例13.7求解下述递推方程
<start> O O O O O O O O O B-CON I-CON I-CON I-CON <eos>
解因为2是对应齐次方程的二重特征根,因此特解是A,代人递推方程得
<start> O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
解得A.因此原递推方程的通解是
<start> O O O O O O O B-CON I-CON I-CON I-CON O O O O <eos>
解得A,从而得到递推方程的解是A.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O O <eos>
公式解法只能用于常系数线性递推方程,对于某些其他形式的递推方程,还可以使用换元法、迭代归纳法等技术求解.先考虑换元法.换元法的基本思想就是将原来关于某个变元的递推方程通过函数变换转变成关于其他变元的常系数线性递推方程,然后使用公式法求解.当得到解以后,再利用相反的变换将解转变成关于原来变元的函数.请看下面的例子.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON O B-CON I-CON I-CON I-CON O O B-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O <eos>
这个算法的主要思想是:将被排序的数组划分成相等的两个子数组,然后递归使用同样的算法分别对两个子数组排序,最后将两个排好序的子数组归并成一个数组.归并的过程如下:假设两个子数组是A和A,它们的元素都按照从小到大的顺序排列.将A与A归并后的数组记作A.设定两个指针A,初始分别指向A和A的最小元素.归并时只需比较A和A指向的元素,哪个元素小,就把它从原来的数组移到A,原来指向它的指针向后移动一个位置.如果A或A中有一个数组(比如说A)的元素已经被全部移走,那么比较过程结束,剩下的工作就是将A中剩下的元素顺序移到A的后面.算法描述如下.
<start> O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O <eos>
MergeA把排好序的数组A与A归并.
<start> O I-CON I-CON O O O O O O O O B-CON I-CON O O O O B-OPR O <eos>
如果A,以比较作为基本运算,试给出最坏情况下归并排序算法的时间复杂度函数.
<start> O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O B-CON I-CON I-CON I-CON I-CON O <eos>
解设A表示归并排序算法在最坏情况下所做的比较次数,根据上面的分析,分别排序A和A的工作量为A.在归并A和A时,每比较一次,就可以移走一个元素.因为A和A总共有A个元素,至多需要A次比较,就可以完成归并工作.因此,对A个数进行二分归并排序在最坏情况下的比较次数满足如下递推方程:
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O <eos>
将A代人,该递推方程可以转换成关于变元A的常系数线性递推方程.即
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O <eos>
该方程是非齐次的,其函数部分是A,为指数函数A与多项式函数A之和,因此特解也是指数函数与多项式函数的组合形式.由于2是特征根,令
<start> O O O O O O O O O O B-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O O <eos>
根据特解得到通解
<start> O O B-CON I-CON O O B-CON I-CON <eos>
下面考虑迭代归纳法.所谓迭代就是从原始递推方程开始,利用方程所表达的数列中后项对前项的依赖关系,把表达式中的后项用相等的前项的表达式代人,直到表达式中没有函数项为止.这时等式右边可能是一系列迭代后的项之和,然后,将右边的项求和并将结果进行化简.为了保证结果的正确性,往往需要代人原递推方程进行验证.下面用迭代归纳法求解归并排序的递推方程.
<start> O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON O O B-CON O O O O O O O O O O O O O B-CON O B-REL I-REL O O B-CON O O O O O O O O O O O O O O O B-CON I-CON B-CON O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O O O O B-CON O O O O O O O O O O O O O O O <eos>
在这个递推方程中,函数项是A.通过一次迭代,A被A替换.在接着的迭代中,A将被A替换,A将被A替换,A直到右边的函数项只有A为止.具体的求解过程如下.
<start> O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O <eos>
对结果进行验证.使用数学归纳法.把A代人上述公式,得
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
符合初始条件.假设对于任何小于A的正整数A都是正确的,将结果代人原递推方程的右边得
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O <eos>
这说明得到的解满足原来的递推方程.
<start> O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
迭代方法一般适用于一阶的递推方程,对于某些二阶以上的递推方程,需要先进行化简.请看下面的例子.
<start> O O O O O O O O O B-CON I-CON O B-CON I-CON I-CON I-CON O O O O O B-CON O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O <eos>
例A前面曾经使用包含排斥原理求解错位排列的计数问题(见例6.7),现在用递推方程来求解这个问题.
<start> O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR O O B-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O <eos>
解将A位的错位排列按照它的第一位是A等分成A个组,不难看出每个组的排列个数一样多.考虑其中的一组,不妨设它的第1位是2.那么它的第2位可能是1,也可能不是1.如果第2位是1,那么剩下的A位是A的错位排列,有A个;如果第2位不是1,那么从第2位到第A位构成A的错位排列,有A个.根据这个分析得到下述递推方程和初值.
<start> O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-CON O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
这个方程不是常系数线性的,不能使用公式法.由于它是二阶的,如果直接迭代,所得到的项太多,求和比较困难.这里先使用差消的方法把它转换为一阶方程.因为
<start> O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O <eos>
从而得到一阶递推方程
<start> O O O O B-CON I-CON I-CON I-CON I-CON I-CON <eos>
使用差消法也可以将某些高阶递推方程化简为一阶递推方程.下面的例子是关于快速排序算法平均情况下复杂度A的递推方程.快速排序是实践中广泛应用的排序算法.这种算法的基本思想是:设要排序的数组是A,不妨假设A中的元素彼此不等.以A的首元素A作为标准,对A进行划分,使得所有小于A的元素构成子数组A,所有大于A的元素构成子数组A.需要说明的是,这个划分过程Partition并不对子数组A和A进行排序,只是把原来规模为A的问题转变成两个小规模的子问题.然后算法分别递归地对A和A进行排序.这个递归调用过程一直进行下去,直到子问题的数组只含有一个元素为止.下面给出快速排序算法的伪码描述.
<start> O O B-CON I-CON O O O O O O O B-CON I-CON B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O <eos>
算法QuicksortA和A分别表示数组A的首元素和末元素的下标
<start> O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O O O <eos>
其中的划分过程Partition描述如下.
<start> O O O O O O O O O O O O O O O O O O O O O <eos>
A选首元素作为划分标准A
<start> O O O B-CON I-CON O O B-OPR I-OPR O O O <eos>
untilA是从后向前找到的第一个比A小的元素7.repeatA
<start> I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O I-OPR I-OPR O O <eos>
untilA是从前向后找到的第一个比A大的元素9.ifA继续搜索A到A之间的范围
<start> I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O <eos>
thenA与A交换,回到第4步
<start> O O O O O O O O O O O O O O O <eos>
考虑下面的划分实例,设数组A初始是
<start> O O O O O O O O O O O B-CON I-CON O O O O <eos>
A的首元素是27,它就是划分数组的标准.算法Quicksort先调用Partition过程,Partition过程的步骤5到6从后向前寻找第一个比27小的数,第一次找到25;然后步骤7到8从前向后找第一个比27大的数,就是99.这时候A,过程进行到步骤10,99和25交换.交换后的数组变成
<start> O O B-CON B-CON I-CON O O O O O O O B-OPR I-OPR B-CON I-CON O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR O I-OPR O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
接着,过程Partition回到步骤4,从当前交换的位置继续向中间搜索,寻找下一对交换的位置.不难看到,下一次需要交换的是64和10,交换后的数组是
<start> O O O O O O I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O <eos>
继续这个过程,交换86和7,得到
<start> O O O O O O O O O O O O O O O O <eos>
下面的搜索将导致A大于A,步骤9的条件不再满足,过程Partition结束,返回A.算法Quicksort继续进行步骤3,把27和16交换,得到
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O <eos>
以27为界,原来的数组被划分成两个子数组:A与A.算法Quicksort的步骤A接着递归地对这两个子数组继续排序.
<start> O O O O O O O O O B-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O O O O I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O B-CON I-CON O O O O O <eos>
考虑算法Quicksort在平均情况下的时间复杂度.如果首元素恰好是最小元素,用它作为划分标准,得到的子数组分别是空数组和具有A个元素的数组;如果首元素恰好是第二小元素,划分后得到的子数组分别是一个元素和A个元素的数组,如此等等.一般说来,如果首元素处在第A个位置,那么划分后的两个子问题的规模分别为A和A,其中A.假定这A种情况出现的可能性相等,为计算平均时间复杂度,只需要对这A种情况分别计算各自的比较次数,然后取平均值即可.
<start> O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT O O O B-ATT I-ATT I-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O B-CON B-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON O O O B-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
设Quicksort算法对于规模为A的输人的平均比较次数是A.若首元素处在第A个位置,划分后的子问题规模分别为A和A,平均比较次数分别是A和A,而划分过程Partition需要的比较次数是A,因此总的比较次数为A.对A求和,去掉A的项,就得到
<start> O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O <eos>
把上式除以A就得到平均比较次数A,因而得到下述递推方程.
<start> O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
A,由A不一定能得到A.但对称差运算满足消去律.A运算不存在零元,A,都有
<start> O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR O O B-CON I-CON I-CON O O O O O O O B-CON I-CON O O O O O <eos>
例A对于下面给定的集合和该集合上的二元运算,指出该运算的性质,并求出它的单位元、零元和所有可逆元素的逆元.
<start> O O O O O O O O O B-CON I-CON O O B-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON O O O B-CON I-CON B-CON I-CON O B-CON I-CON O <eos>
(1)A,即求A和A的最小公倍数.
<start> O O O O O O O O O O O B-ATT I-ATT I-ATT I-CON I-CON O <eos>
解(1)*运算可交换,可结合,适合幂等律.A为单位元.不存在零元.只有1有逆元,是它本身,其他正整数无逆元.
<start> O O O O O O O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O <eos>
(2)A运算适合交换律,因为A,有
<start> O O O O O O O O B-CON I-CON I-CON O O O O O O <eos>
*运算不适合幂等律,因为A,但A.
<start> O O O O O O B-CON I-CON I-CON O O O O O O O O <eos>
*运算适合消去律,因为A(1为零元),有
<start> O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON O O O <eos>
由于A是可交换的,右消去律显然成立.
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O <eos>
0是A运算的单位元,因为A,有A是A运算的零元,因为A,有A.
<start> O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O O O O O <eos>
A,欲使A和A成立,即A,解得
<start> O O O O O O O O O O O O O O O <eos>
例A设A上的二元运算A如表A所示.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O O <eos>
(1)说明A和·运算是否适合交换律、结合律、消去律和幂等律.
<start> O O O O O O O O O I-CON O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O <eos>
(2)求出关于A和A运算的单位元、零元和所有可逆元素的逆元.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON O O O B-CON I-CON I-CON I-CON O B-CON I-CON O <eos>
解A运算适合交换律、结合律和消去律,不适合幂等律.单位元是A,没有零元,且A.
<start> O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O B-CON I-CON O O O O <eos>
-运算适合交换律、结合律和幂等律,不适合消去律.单位元是A,零元是A.只有A有逆元,A.
<start> O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O B-CON I-CON O O O O O O O B-CON I-CON O O O <eos>
运算不适合交换律,适合结合律和幂等律,不适合消去律.没有单位元,没有零元,没有可逆元素.
<start> B-CON I-CON O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O B-CON I-CON O O O B-CON I-CON B-CON I-CON O <eos>
下面定义代数系统.
<start> O O O O B-CON I-CON I-CON I-CON O <eos>
定义14.11非空集合A和A上A个一元或二元运算A组成的系统称为一个代数系
<start> O O O O O O O B-CON I-CON B-CON I-CON O O O O O O B-CON I-CON I-CON B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON <eos>
A也是代数系统,其中含有两个二元运算A和A以及一个一元运算A
<start> O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O <eos>
在某些代数系统中存在着一些特定的元素,它们对该系统的一元或二元运算起着重要的作用,例如二元运算的单位元和零元.在定义代数系统的时候,若把含有这样的特定元素也作为系统的性质,如规定系统的二元运算必须含有单位元,在这种情况下称这些元素为该代数系统的特异元素或代数常数.有时为了强调某个代数系统是含有代数常数的系统,也可以把这些代数常数列到系统的表达式中,例如A中的+运算有单位元0,为了强调0的存在,将A记作A.又如A中的A和A运算存在单位元A和A,当规定A和A是该系统的代数常数时,也可将它记为A.当然,在不发生混淆的情况下,为了叙述的简便也常用集合的名字来标记代数系统,例如上述代数系统可以简记为A和A.
<start> O O O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O I-CON I-CON I-CON <eos>
定义A如果两个代数系统中运算的个数相同,对应运算的元数相同,且代数常数的个数也相同,则这两个代数系统具有相同的构成成分,也称它们是同类型的代数系统.
<start> O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
同类型的代数系统仅仅是构成成分相同,不一定具有相同的运算性质.上述的A和A是同
<start> O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
A和・可交换,可结合
<start> O O O O B-OPR I-OPR O O B-OPR I-OPR <eos>
算及性质统,简称代数,记作A.
<start> O O O O O O O O B-CON I-CON O O O O O <eos>
是同类型的代数系统,它们都含有两个二元运算、一个一元运算和两个代数常数.类型的代数系统,但它们的运算性质却很不一样,请看表14.6.续表
<start> O O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
本节将简要介绍几个具有广泛应用背景的代数系统:半群、独异点与群,环与域,格与布尔代数.
<start> O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON B-CON O B-CON I-CON I-CON O B-CON O B-CON O B-CON O O O B-CON I-CON I-CON I-CON O <eos>
半群、独异点与群都是具有一个二元运算的代数系统.
<start> B-CON B-CON O B-CON I-CON I-CON O B-CON O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O <eos>
定义14.13(1)设A是代数系统,。为二元运算,如果。是可结合的,则称A为半群.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O O O O B-OPR I-ATT O O O O O O B-CON B-CON O <eos>
(2)设A是半群,若A是关于。运算的单位元,则称A是么半群,也称作独异点.有时也将独异点A记作A.
<start> O O O O O O B-CON B-CON O O O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON B-CON O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O O O <eos>
(3)设A是独异点,A是关于。运算的单位元,若A,则称A是群.通常将群记作A.
<start> O O O O O O B-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON O O O O B-CON O O O O <eos>
例A都是半群,+是普通加法.这些半群中除A,+外都是独异点,其中A都是群,分别称作整数加群、有理数加群、实数加群和复数加群.
<start> O O O O B-CON B-CON O O O O O O O O O O B-CON B-CON O O O O O O O O B-CON I-CON I-CON O O O O O O B-CON O O O O O O O O B-CON O B-CON I-CON I-CON O B-CON O B-CON I-CON O B-CON O B-CON I-CON O B-CON O <eos>
(3)A是半群,也是独异点和群,其中A为集合的对称差运算.
<start> O O O O O B-CON B-CON O O O B-CON I-CON I-CON O B-CON O O O O O B-CON I-CON O B-OPR I-OPR I-OPR I-OPR I-OPR O <eos>
(4)A是半群,也是独异点和群,其中A为模A加法.
<start> O O O O O B-CON B-CON O O O B-CON I-CON I-CON O B-CON O O O O O B-CON I-CON I-CON I-CON O <eos>
(5)A为半群,也是独异点,其中。为函数的复合运算.因为只有双射函数才有反函数,请读者思考:当A是什么集合时,它能构成群?
<start> O O O O O B-CON B-CON O O O B-CON I-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O B-REL I-REL I-CON I-CON O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O O O B-CON O <eos>
(6)A,A为半群,其中A为非零实数集合,。运算定义如下:A,这个系统不构成独异点和群,因为它没有单位元.
<start> O O O O O O O B-CON B-CON O O O O O O O O I-CON B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O B-CON I-CON I-CON O B-CON O O O O O O B-CON I-CON I-CON O <eos>
知识点:群与半群
<start> O O O O B-CON O B-CON B-CON <eos>
在半群、独异点和群中,由于只有一个二元运算,在不发生混淆的情况下,经常将算符省去.例如将A写作A.下面的讨论中将采用这种简略表示.
<start> O B-CON B-CON O B-CON I-CON I-CON O B-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O O O B-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O I-CON I-CON O O <eos>
例A设A是有穷字母表,A,定义下述集合:
<start> O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON O <eos>
是A上所有长度为A的串的集合.当A时,A表示空串.令A
<start> O O O O O O O O O O O O B-CON I-CON O O O O O O O O O I-CON O O O <eos>
A表示A上所有有限长度的串的集合,A则表示A上所有长度至少为1的有限串的集合.在A上可以定义串的连接运算,A,有
<start> O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON O O O O O O O O B-CON O O O O O O O O O <eos>
显然A关于连接运算构成一个独异点,称为A上的字代数.A上的语言A(这里的语言指形式语言,不是一般的自然语言)就是A的一个子集.计算机的编译系统就是在这种半群上工作的.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON O O O O O <eos>
例A某二进制码的码字A由7位构成,其中A和A为数据位,A和A为校验位,并且满足
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-ATT O O O O O <eos>
这里的A是模2加法.设A为所有码字构成的集合,在A上定义二元运算如下:
<start> O O O O O B-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O B-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O <eos>
那么A构成群.这样的码称为群码.
<start> O O O O O B-CON O O O O O O O B-CON I-CON O <eos>
群A的某些非空子集A关于群的运算也能构成群,称为A的子群.例如,A是整数加群,
<start> B-CON O O O O O O B-CON I-CON O O O B-CON O O O O O O O B-CON O O O O O B-CON I-CON O O O O O O O O O B-CON O <eos>
关于加法构成A的子群.例如,当A和1时,这个子群分别是A和A,称为平凡子群;而A由能被2整除的全体整数构成,也是A的子群.
<start> O O O O O O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O <eos>
测试题A除了通过子集,还可以通过笛卡儿积构成新的群一一群的直积.
<start> O O O O O O O O B-CON I-CON O O O O O O B-OPR I-OPR I-OPR I-OPR O O O O B-CON O O B-OPR O B-CON I-CON O <eos>
定义A设A和A是群,。和A分别为它们的二元运算,在集合A上定义新的二元运算·,A,有
<start> O O O O O O O O B-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O O O <eos>
称A为A与A的直积,记作A.
<start> O O O O O O O B-CON I-CON O O O O O <eos>
例A设A和A分别为模3和模2加群,给出A的运算表.解运算表如表A所示.表A
<start> O O O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O <eos>
易见A也是Abel群,其单位元是A.
<start> O O O O O B-CON I-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O O O <eos>
环与域是具有两个二元运算的代数系统,它和群及半群有着密切的联系.先给出环和域的定义.
<start> B-CON O B-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O O O B-CON O B-CON I-CON O O O O O O O O O O O B-CON O B-CON O O O O <eos>
定义A设A是代数系统,A和A是二元运算,如果满足以下条件:
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O <eos>
(1)A构成交换群;
<start> O O O O O O B-CON I-CON I-CON O <eos>
(2)A构成半群;
<start> O O O O O O B-CON B-CON O <eos>
(3)-运算关于+运算适合分配律;则称A是环.
<start> O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON O <eos>
为了区别环中的两个运算,通常称A运算为环中的加法,-运算为环中的乘法.
<start> O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON I-CON O <eos>
定义A设A是环,A和·是二元运算,如果满足以下条件:
<start> O O O O O O B-CON O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O <eos>
(1)A中乘法可交换;
<start> O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR O <eos>
(2)A中至少含有两个元素,且A;则称A是域.
<start> O O O O O O O O O O O B-CON I-CON O O O O O O O O B-CON O <eos>
例A(1)整数集、有理数集、实数集和复数集关于普通的加法和乘法构成环.其中除了整数环A之外,其他都构成域,分别称为有理数域A、实数域A和复数域A.
<start> O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O O O B-CON I-CON O O B-CON O O O O O B-CON I-CON B-CON O O O O O O O O O B-CON O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O <eos>
(3)集合的幂集A关于集合的对称差运算和交运算构成环.
<start> O O O B-CON I-CON O B-CON I-CON O O O B-CON I-CON O B-OPR I-OPR I-OPR I-OPR I-OPR O B-OPR I-OPR O O O B-CON O <eos>
(4)设A和A分别表示模A的加法和乘法,则A构成环,称为模A的整数环.当A是素数时,可以证明A构成域.
<start> O O O O O O O O O O O O O O B-CON I-CON O B-CON I-CON O O O O O B-CON O O O O O O B-CON O B-CON O O O O B-CON I-CON O O O O O O O O O B-CON O <eos>
类似于群,也可以定义子环和子域等概念,限于篇幅,这里不再罗列.
<start> O O O B-CON O O O O O O B-CON I-CON O B-CON I-CON O O O O O O O O O O O O O O O O <eos>
信息安全是关系国计民生的重大问题,也是计算机科学和数学的一个重要的研究领域.群与有限域的理论在密码学中有着重要的应用.
<start> B-CON I-CON O I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O B-CON I-CON I-CON O O O O B-CON I-CON O O O O O O O O O O <eos>
格与布尔代数是另一类具有两个二元运算的代数系统,与环具有完全不同的性质.格或布尔
<start> O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON O I-CON I-CON O B-CON I-CON I-CON I-CON O O B-CON O O O O O O O O O O O O B-CON I-CON <eos>
代数在逻辑电路设计、软件形式方法、数据仓库等各方面都有重要的应用.下面先给出格的定义和基本性质.
<start> B-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
首先说明,下面的A和A的符号不再代表逻辑上的合取与析取,而是格中的运算符,涉及合取和析取,这里将使用自然语言加以叙述.下面给出格作为偏序集的第一个定义.
<start> O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O B-OPR I-OPR O O O O O O O O O O O O B-OPR I-OPR O B-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O <eos>
定义A设A是偏序集,如果A都有最小上界和最大下界,则称A关于偏序构成一个格.
<start> O O O O O O B-CON I-CON I-CON O O O O O O B-ATT I-ATT B-ATT I-ATT O B-ATT I-ATT B-ATT I-ATT O O O O O O B-CON I-CON O O O O B-CON O <eos>
由于最小上界和最大下界的唯一性,可以把求A的最小上界和最大下界看成A与A的二元运算A和A,即A和A分别表示A与A的最小上界和最大下界.
<start> O O B-ATT I-ATT B-ATT I-ATT O B-ATT I-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O O O O O O O B-ATT I-ATT B-ATT I-ATT O B-ATT I-ATT B-ATT I-ATT O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-ATT I-ATT B-ATT I-ATT O B-ATT I-ATT B-ATT I-ATT O <eos>
例A设A是正整数,A是A的正因子的集合.A为整除关系,则偏序集A构成格.A是A,即A与A的最小公倍数.A是A,即A与A的最大公约数.图A给出了格A和A.
<start> O O O O O O O O O O O O O O O O O B-CON I-CON O O O B-REL I-REL I-REL I-REL O O B-CON I-CON I-CON O O O O O O O O O O O O O O B-ATT I-ATT B-CON I-CON I-CON O O O O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O O O O O O O O O <eos>
例14.11判断下列偏序集是否构成格,并说明理由.
<start> O O O O O O O O O O B-CON I-CON I-CON O O O O B-CON O O O O O O O <eos>
(1)A,其中A是集合A的幂集.
<start> O O O O O O O O O B-CON I-CON O O B-CON I-CON O <eos>
(2)A,其中A是整数集,A为小于等于关系.
<start> O O O O O O O O O B-CON I-CON I-CON O O O B-REL I-REL I-REL I-REL I-REL I-REL O <eos>
(3)偏序集的哈斯图在图A中分别给出.
<start> O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O O O O <eos>
解(1)是格.A就是A就是A.由于A和A运算在A上是封闭的,所以A.称A为A的幂集格.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT O O O O O O O O O O O B-CON I-CON I-CON O <eos>
(2)是格.A,它们都是整数.(3)都不是格.在图A中,(a)中的A没有最大下界;(b)中的A有两个上界A和A,但没有最小上界;(c)中的A有3个上界A和A,但没有最小上界;(d)中的A没有最大下界.
<start> O O O O B-CON O O O O O O O O O O O O O O O O B-CON O O B-CON O O O O O O O O O O O B-ATT I-ATT B-ATT I-ATT O O O O O O O O O O B-ATT I-ATT O O O O O O O B-ATT I-ATT B-ATT I-ATT O O O O O O O O O O B-ATT I-ATT O O O O O O O B-ATT I-ATT B-ATT I-ATT O O O O O O O O O B-ATT I-ATT I-ATT I-ATT O <eos>
不难证明格中运算A和A适合以下算律,即
<start> O O O O B-CON O O O O O O O O O O B-CON I-CON O O <eos>
交换律:A有A;
<start> B-CON I-CON I-CON O O O O O <eos>
幂等律:A有A;
<start> B-CON I-CON I-CON O O O O O <eos>
类似于群、环与域,也可以通过代数运算及其性质来给出格的定义.设A是具有两个二元运算的代数系统,且对于A和。运算适合交换律、结合律、吸收律,可以证明A中存在适当的偏序A,使得A,\A构成一个格,且A有A.这就说明两种定义方法是等价的,以后不再区别通过偏序集和代数系统定义的格,统称为格A.
<start> O O O B-CON O B-CON O B-CON O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON <eos>
下面讨论一些特殊的格—一分配格、有补格和布尔代数.
<start> O O O O O O O O O O O O B-CON I-CON I-CON O O B-CON I-CON O B-CON I-CON I-CON I-CON O <eos>
定义A设A是格,若A,有
<start> O O O O O O B-CON O O O O O <eos>
成立,则称A为分配格.
<start> O O O O O O O B-CON I-CON I-CON O <eos>
不难证明,以上两个等式中只要成立一个,另一个也一定成立.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例A参见图14.3.A是不是分配格?
<start> O O O O B-CON O O O O O O O O O B-CON I-CON I-CON O <eos>
解A和A是分配格,A和A不是分配格.在A中,
<start> O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O O O O <eos>
称A为钻石格,A为五角格.
<start> O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O <eos>
类似于群,可以定义子格的概念.设A是格A的非空子集,如果A关于格A中的运算A和A是封闭的,就称A为A的子格.可以证明格A是分配格的充分必要条件是:A的子格中没有钻石格,也没有五角格.
<start> O O O B-CON O O O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O O O B-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON O O O O O I-CON O O O O O O I-CON O <eos>
例14.13说明图A中的格是否为分配格,为什么?
<start> O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O <eos>
解A和A都不是分配格,因为A是A的子格,是钻石格;A是A的子格,是五角格.A是A的子格,也是钻石格.
<start> O O O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON O O O O I-CON O O O O O B-CON I-CON O O O O I-CON O O O O O B-CON I-CON O O O B-CON I-CON I-CON O <eos>
下面考虑另一种特殊的格—一有补格.先引人有界格的概念.
<start> O O O O O O O O O O B-CON O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O <eos>
定义A设A是格,
<start> O O O O O O B-CON O <eos>
(1)若存在A使得A有A,则称A为A的全下界.若存在A使得A有A,则称A为A的全上界.鉴于全下界或全上界的唯一性,一般将全下界记为0,全上界记为1.
<start> O O O O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT O O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT O O O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O O O O B-CON I-CON I-ATT O O O O B-CON I-CON I-ATT O O O O <eos>
(2)若A存在全下界和全上界,则称A为有界格,并将A记为A.
<start> O O O O O O O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O O O O O B-CON I-CON I-CON O O O O O O O O <eos>
定义A设A是有界格,A,若存在A使得
<start> O O O O O O B-CON I-CON I-CON O O O O O O O O O <eos>
成立,则称A是A的补元.
<start> O O O O O O O O O B-ATT I-ATT O <eos>
由定义不难看出,若A是A的补元,则A也是A的补元.换句话说,A和A互为补元.
<start> O O O O O O O O O O O O O B-ATT I-ATT O O O O O O O B-ATT I-ATT O O O O O O O O O O O B-ATT I-ATT O <eos>
例A考虑图A中的4个格.
<start> O O O O O O O O O O B-CON O <eos>
A中的A与A互为补元,其中A为全下界,A为全上界,A没有补元.
<start> O O O O O O O O B-ATT I-ATT O O O O O B-ATT I-ATT I-ATT O O O B-ATT I-ATT I-ATT O O O O B-ATT I-ATT O <eos>
A中的A与A互为补元,其中A为全下界,A为全上界,A与A也互为补元.
<start> O O O O O O O O B-ATT I-ATT O O O O O B-ATT I-ATT I-ATT O O O B-ATT I-ATT I-ATT O O O O O O O B-ATT I-ATT O <eos>
A中的A与A互为补元,其中A为全下界,A为全上界,A的补元是A和A的补元是A和A的补元是A和A每个元素都有两个补元。
<start> O O O O O O O O B-ATT I-ATT O O O O O B-ATT I-ATT I-ATT O O O B-ATT I-ATT I-ATT O O O B-ATT I-ATT O O O O O B-ATT I-ATT O O O O O B-ATT I-ATT O O O O O O B-CON I-CON O O O O B-ATT I-ATT O <eos>
A中的A与A互为补元,其中A为全下界,A为全上界,A的补元是A和A的补元是A的补元是A.
<start> O O O O O O O O B-ATT I-ATT O O O O O B-ATT I-ATT I-ATT O O O B-ATT I-ATT I-ATT O O O B-ATT I-ATT O O O O O B-ATT I-ATT O O O B-ATT I-ATT O O O <eos>
不难证明,在任何有界格中,全下界0与全上界1总是互补的.而对于其他的元素,可能存在补元,也可能不存在补元.如果存在补元,可能是唯一的,也可能是多个补元.
<start> O O O O O O O O B-CON I-CON I-CON O O B-ATT I-ATT I-ATT O O B-ATT I-ATT I-ATT O O O B-ATT I-ATT O O O O O O O O B-CON I-CON O O O O O B-ATT I-ATT O O O O O O O B-ATT I-ATT O O O O O B-ATT I-ATT O O O O O O O O O O O O O O B-ATT I-ATT O <eos>
定义A设A是有界格,若A,在A中都有A的补元存在,则称A是有补格.例如图A中的A和A是有补格,A不是有补格.
<start> O O O O O O B-CON I-CON I-CON O O O O O O O O O O O B-ATT I-ATT I-ATT I-ATT O O O O O O B-ATT I-CON O O O B-CON O O O O O O O O B-ATT I-ATT O O O O O B-ATT I-ATT O <eos>
定义A如果一个格是有补分配格,则称它为布尔格或布尔代数.
<start> O O O O O O O B-CON O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON I-CON O <eos>
可以证明在分配格中,如果一个元素存在补元,则是唯一的.因此,在布尔代数中,每个元素都存在着唯一的补元,可以把求补元的运算看作是布尔代数中的一元运算.从而可以把布尔代数标记为A,其中A和有界格一样,'为求补运算.
<start> O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON O O B-ATT I-ATT O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON O O O O O O O B-ATT I-ATT O O O O O B-ATT I-ATT O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON O O O O O B-OPR I-OPR I-OPR I-OPR O <eos>
例A(1)设A是110的正因子集合.令A分别表示求两个数的最大公约数和最小公倍数的运算.则格A构成布尔代数.
<start> O O O O O O O O O O O O B-CON I-CON I-CON B-CON I-CON O O O O O O O O O O O O B-ATT I-ATT I-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT I-ATT I-ATT O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
（2）设A为任意集合,A的幂集格A构成布尔代数,称为集合代数.
<start> O O O O O O O O B-CON I-CON O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O <eos>
(3)数理逻辑中的命题代数是布尔代数.
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O <eos>
（4）数字电路中的逻辑代数也是布尔代数.
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O <eos>
读者对集合代数、命题代数、逻辑代数的性质已经比较熟悉了,有趣的是有限布尔代数的结构.可以证明任何有限布尔代数都含有A个元素,其中A是某个自然数.
<start> O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON B-CON I-CON I-CON I-CON O O O O O B-CON I-CON O O O O O O O B-CON I-CON I-CON O <eos>
上面已经给出了几类典型代数系统的定义,最后简单讨论一下代数系统间的同构,以此作为本节的结束.
<start> O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O B-REL I-REL O O O O O O O O O O O <eos>
实践中存在着很多不同的代数系统,有些系统是同类型的,有些不但是同类型的,而且具有共同的运算性质,因此是同种的.在同种的代数系统中,有些系统在结构上更为相似,甚至完全一样.例如代数系统A,其中A,A和A分别表示模3和模6加.那么这两个代数系统的运算表见表A和表14.9。
<start> O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O <eos>
表A代数系统运算A
<start> O O B-CON I-CON I-CON I-CON O O O <eos>
表A代数系统运算A。
<start> O O B-CON I-CON I-CON I-CON O O O O <eos>
把表A中的1和2分别替换成2和4,就可以得到表14.9.这个替换可以表示成函数
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON <eos>
在双射函数A的作用下,代数系统A转换成了A.从性质上讲,它们是完全一样的代数系统,都是某个抽象代数系统A的实例.
<start> O B-REL I-REL B-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O <eos>
定义A设A和A是同类型的代数系统,其中。和*是二元运算,A:A,且A有
<start> O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O <eos>
则称A是A到A的同态映射,简称同态.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O B-REL I-CON O <eos>
根据同态映射的性质可以将同态分为单同态、满同态和同构.即:A如果是单射,则称为单同
<start> O O B-CON I-CON I-CON I-CON O O O O O O B-REL I-REL O O B-REL I-REL I-REL O B-REL I-REL I-REL O B-REL I-REL O O O O O O O B-REL I-REL O O O O B-REL I-REL <eos>
态;如果是满射,则称为满同态,这时称A是A的同态像,记作A;如果是双射,则称为同构,也称代数系统A同构于A,记作A.
<start> O O O O O B-REL I-REL O O O O B-REL I-REL I-REL O O O O O O O O B-REL I-CON I-REL O O O O O O O O B-REL I-REL O O O O B-REL I-REL O O O B-CON I-CON I-CON I-CON O B-REL I-REL O O O O O O O <eos>
如果同态映射A是A到A的,则称A为自同态.类似地可以定义单自同态、满自同态和自同构.
<start> O O B-CON I-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O B-REL I-REL I-REL O B-REL I-REL I-REL I-REL O B-REL I-REL I-REL O <eos>
设A是A到A的同态映射,那么A具有许多良好的性质.首先,如果。运算具有交换律、结合律、幂等律等,那么在同态像A中,*运算也具有相同的算律(注意,消去律可能有例外).此外,同态映射A恰好把A的单位元A映到A的单位元A,即A.同样对于零元和可逆元也有
<start> O O O O O O O B-REL I-REL I-REL I-REL O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O B-CON I-CON O B-CON I-CON I-CON O O <eos>
例A(1)设代数系统A.其中A为整数集合,+为普通加法;A,A为模A加.令
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O <eos>
那么A是A到A的满同态.显然A是满射,且A有
<start> O O O O O O O O B-REL I-REL I-REL O O O O O B-REL I-REL O O O O <eos>
(2)设A,其中A和A分别为实数集与非零实数集,+和•分别表示普通加法与乘法.令
<start> O O O O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON O B-CON I-CON O O <eos>
则A是A到A的单同态,易见A是单射,且A有
<start> O O O O O O O B-REL I-REL I-REL O O O O O B-REL I-REL O O O O <eos>
(3)设A,其中A为整数集合,+为普通加法.A,令
<start> O O O O O O O O O O B-CON I-CON B-CON I-CON O O O O O B-CON I-CON O O O O <eos>
则A是A的自同态.因为A,有
<start> O O O O O B-CON I-CON I-CON O O O O O O <eos>
当A时称A为零同态;当A时,称A为自同构;除此之外其他的A都是单自同态.
<start> O O O O O O O I-REL I-REL O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
上述关于同态映射的定义可以推广到具有有限多个运算的代数系统.例如,对于具有两个二元运算的代数系统A和A,如果A有
<start> O O O O B-REL I-REL I-REL I-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O <eos>
知识占同态：则A是A到A的同态映射.
<start> O O O B-REL I-REL O O O O O O O O B-REL I-REL I-REL I-REL O <eos>
通过同态和同构映射,可以在同一种代数系统(如群、环、域、格、布尔代数)的不同实例之间建立联系,它是研究不同系统之间关系的有力工具.利用同构映射可以证明:对于任何给定的自然数A,含有A个元素的布尔代数都与A元集合的幂集格同构.这就是说,在抽象的意义上,A个元素的布尔代数只有一个.
<start> O O B-REL I-REL O B-REL I-REL I-REL I-REL O O O O O O O B-CON I-CON I-CON I-CON O O B-CON O B-CON O B-CON O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O I-CON O O O O O O O O O O O O B-REL I-REL I-REL I-OPR O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O B-CON I-CON I-CON I-CON O O O O B-CON I-CON O B-CON I-CON I-CON B-REL I-REL O O O O O O O O O O O O O O O <eos>
从A到A的关系析取联结词
<start> O O O O O B-CON O O I-CON B-CON I-CON I-CON <eos>
构造性二难推理规则
<start> O O O B-CON I-CON I-CON I-CON I-CON I-CON <eos>
破坏性二难推理规则
<start> O O O B-CON I-CON I-CON I-CON I-CON I-CON <eos>
假言推理规则(分离规则)
<start> B-CON I-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O <eos>
严格单调递㦹函数单调递增函数
<start> O O O O B-CON I-CON I-CON I-CON O I-CON I-CON I-CON I-CON I-CON <eos>
严格单调递增函数
<start> O O O O B-CON I-CON I-CON I-CON <eos>
组合(集合的,多重集的)
<start> O O O B-CON I-CON O O B-CON I-CON I-CON O O <eos>
AA叉正则有序树
<start> O O O B-CON I-CON I-CON I-CON I-CON <eos>
顺序揷人排序算法
<start> O O O O B-CON I-CON I-CON I-CON <eos>
前束范式存在定理
<start> B-CON I-CON I-CON I-CON O O O O <eos>
A叉完全正则有序树
<start> O O O I-CON I-CON I-CON I-CON I-CON I-CON <eos>
二分归并排序算法
<start> B-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON <eos>
常系数线性递推方程
<start> O O O O O B-CON I-CON I-CON I-CON <eos>
全部历史递推方程
<start> O O O O B-CON I-CON I-CON I-CON <eos>
递推方程的求解方法
<start> B-CON I-CON I-CON I-CON O O O O O <eos>
全排列（集合的,多重集的）
<start> B-CON I-CON I-CON O B-CON I-CON O O B-CON I-CON I-CON O O <eos>
排列(集合的,多重集的)
<start> O O O B-CON I-CON O O B-CON I-CON I-CON O O <eos>
不难看出,A既是集合组合数序列A的普通生成函数,也是集合排列数序列A的指数生成函数.
<start> O O O O O O O O B-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O <eos>
例A设A,则A的指数生成函数为
<start> O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O <eos>
使用指数生成函数可以求解多重集的排列问题.
<start> O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O O <eos>
定理A设A为多重集,则A的A排列数的指数生成函数为
<start> O O O O O O B-CON I-CON I-CON O O O O O B-CON O O O B-CON I-CON I-CON I-CON I-CON I-CON O <eos>
证考察上述指数生成函数展开式中A的项,它是由A个因式的乘积构成的,并具有下述形式:
<start> O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O <eos>
其中求和是对满足方程(13.7)的一切非负整数解来求.一个非负整数解对应了A的一个子多重集A,即A的一个A组合,而该组合的全排列数是A,因此A,代表了A的所有A排列数.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON B-CON I-CON I-CON O O O O O O O O B-OPR I-OPR O O O B-OPR I-OPR O B-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON O O <eos>
例A由A构成长度为A的序列,如果要求在排列中A与A出现的次数之和为偶数,问这样的序列有多少个.
<start> O O O O O O B-CON O O O O B-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O <eos>
解设所求序列数为A,在这样的序列中A和A出现次数的奇偶性一样,指数函数中对应于A和A的成分或者同时为A,或者同时为A.因此,A的指数生成函数为
<start> O O O O B-CON I-CON O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O <eos>
将这个函数展开得到A!项的系数是
<start> O O O B-CON I-CON O O O O O O B-CON O B-CON I-CON O <eos>
设有递推方程A,且A,求A.
<start> O O B-CON I-CON I-CON I-CON O O O O O O O O <eos>
求解递推方程.\\
<start> O O B-CON I-CON I-CON I-CON O O O <eos>
有A条封闭的曲线,两两相交于两点,并且任意3条都不交于一点,求这A条封闭曲线把平面划分成的区域个数.
<start> O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O <eos>
双Hanoi塔问题是Hanoi塔问题的一种推广,与Hanoi塔的不同点在于:A个圆盘,分成大小不同的A对，每对圆舟完全相同.初始时这些圆盘按照从大到小的次序从下到上放在A柱上,最终要把它们全部移到A柱,移动的规则与Hanoi塔相同.
<start> O B-CON I-CON I-OPR I-OPR I-OPR I-CON O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-CON O O O <eos>
（1）设计一个移动的算法.
<start> O O O O O O O O O O B-CON I-CON O <eos>
(2)计算你的算法所需要的移动次数.
<start> O O O O O O O O O O O O O O O O O O <eos>
在长方形A中,A.作线段A,使A是一个正方形,证明长方形A和A相似.如果重复这个过程,就得到图A中的图形.证明苺一步得到的长方形都和原来的长方形相似.
<start> O B-CON I-CON I-CON O O O O O O B-CON I-CON O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O <eos>
某公司有A于万元可以用于对A三个项目的投资.假设每年投资一个项目，投资的规则是:或者对A投资1千万元,或者对A投资2千万元,或者对A投资2千万元.问用完A千万元有多少种不同的方案.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
求A位A串中相邻两位不出现11的串的个数.
<start> O O O O O O O O O O O O O O O O O O O O O <eos>
一个质点在水平方向运动,每秒钟它走过的距离等于它前一秒走过距离的2倍.设质点的初始位置为3,并设第一步走了1个单位长的距离.求第A秒钟质点的位置.
<start> O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O <eos>
一个A的方格图形用红、蓝两色涂色每个方格,如果每个方格只能涂一种颜色,且不允许两个红格相令,问有冬少种涂色方案.
<start> O O O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
使用两个不同的信号在通信信道发送信息.传送一个信号需要A,传送另一个信号要A个信息的脢个信号紧跟着下一个信号.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
（1）求与在A中可以发送的不同信号数有关的递推方程.
<start> O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
(2)对于（1）的递推方程,初始条件是什么?
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O <eos>
(3)在A内可以发送多少个不同的信息?
<start> O O O O O O O O O O O O O O O O O O O <eos>
已知数列A的生成函数是A,求A.
<start> O O B-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O <eos>
设数列A的生成函数分别为A,其中A;A.如果A,求A.
<start> O B-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O <eos>
分别确定下述数列A的生成函数.
<start> O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
使用生成函数求解递推方程A,初始条件A.
<start> O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O O O <eos>
设多重集A是A的满足以下条件的A组合数,且数列A的生成函数为A,求A.
<start> O B-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON O O B-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O <eos>
把A个苹果A为奇数)恰好分给3个孩子,如果第一个孩子和第二个孩子分的苹果数不相同,问有多少种分法.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
如果传送信号A要A,传送信号A和A各需要A,一个信息是字符A或A构成的有限长度的字符串(不考虑空串),问在A内可以传送多少个不同的信息.
<start> O O O O B-CON O O O O O B-CON O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
设三角形A的边长为整数,且A为奇数A,其中A为给定的正整数.问这样的三角形有多少个.21.分别确定下面数列A的指数生成函数.\\
<start> O O O O O O B-ATT I-ATT O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O <eos>
一个A的方格图形用红、蓝、绿或橙色4种颜色涂色,如果有偶数个方格被涂成红色,还有偶数个方格被涂成绿色,有多少种方案?
<start> O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O I-CON O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O <eos>
确定由A个奇数字组成并且1和3每个数字出现偶数次的数的个数.
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
设A是一个字母表且A和A是A中两个不同的字母.试求A上的A和A均出现的长为A的字(字符串)的个数.
<start> O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O <eos>
把5项任务分给4个人,如果每个人至少得到1项任务,有冬少种方式?
<start> O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
设A是A个不等的正整数构成的集合,其中A为正整数.考虑下述在A中找最大数和最小数的算法MaxMin:如果A中只有两个数,那么比较一次就可以确定最大数与最小数.否则,将A划分成相等的两个子集A与A.用算法MaxMin递归地在A与A中找最大数与最小数.令A分别表示A与A中的最大数,A与A分别表示A与A中的最小数,那么A与A就是所需要的结果.
<start> O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O O O O I-OPR I-OPR O I-OPR O O O O O O O O O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O O O O O O O O O O O O O O B-CON I-CON O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O O O <eos>
（1）用伪码描述算法的主要步㵵.
<start> O O O O B-CON I-CON O O O O O O O O O O <eos>
（2）对于规模为A的输人,计算算法MaxMin最坏情况下所做的比较次数.
<start> O O O O O O O O O O O O O O O O O O I-CON O O O O O O O O O O O O O O O O O <eos>
Internet上的搜索引擎经常需要对信息进行比较,比如可以通过某个人对一些事物的排名来估计他＼cjkstart或她）对各种不同信息的兴趣,从而实现个性化的服务.对于不同的排名结果可以用逆序来评价它们之间的差异.考虑A的排列A,如果其中存在A,使得A但是A,那么就称A是这个排列的一个羊㡴.一个排列含有逆序的个数称为这个排列的逆庠数.例如排列263451含有8个逆序A,A,它的逆序数就是8.显然,由A构成的所有A!个排列中,最小的逆序数是0,对应的排列就是A;最大的逆序数是A,对应的排列就是A.逆序数越大的排列与原始排列的差异度就越大.不难看到,如果使用顺序枚举逆序的蛮力算法来计算排列的逆序数,最坏情况下需要A的时间.利用二分归并排序算法Mergesort可以设计一个计数逆序的更好的算法,它仅使用A(Alogn)时间.它的主要思想是:在递归调用算法分别对子数组A与A排序时,计数每个子数组内部的逆序;在归并排好序的
<start> O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
可增广的交错路径
<start> O O O O B-CON I-CON I-CON I-CON <eos>
阿贝仦(Abel)群
<start> B-CON I-CON I-CON O B-CON I-CON I-CON I-CON O B-CON <eos>
合取联结词,最大下界运算
<start> B-CON I-CON I-CON I-CON I-CON O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR <eos>
析取联结词,最小上界运算
<start> B-CON I-CON I-CON I-CON I-CON O B-OPR I-OPR B-OPR I-OPR I-OPR I-OPR <eos>
生成树A的余树矩阵A的转置
<start> O O B-CON O O B-CON I-CON I-CON I-CON O O B-OPR I-OPR <eos>
小于等于A的最大整数大于等于A的最小整数
<start> B-ATT I-ATT I-ATT O O O B-ATT I-ATT I-ATT I-ATT O O O O O O B-ATT I-ATT I-ATT I-ATT <eos>
互补顶点子集基数为A
<start> B-CON I-CON I-CON I-CON B-CON I-CON O O O O <eos>
集合A对A的相对补
<start> B-CON I-CON O O O O B-ATT I-ATT I-ATT <eos>
从A中删除顶点A
<start> O O O O O B-CON I-CON O <eos>
从A中删除A中所有顶点
<start> O O O O O O O O O B-CON I-CON <eos>
A从A中删除A中所有边
<start> O O O O O O O O O O B-CON <eos>
A与A的笛卡儿积
<start> O O O O B-OPR I-OPR I-OPR I-OPR <eos>
代数系统A同构于A
<start> B-CON I-CON I-CON I-CON O O O O O <eos>
以A为顶点集的导出子图
<start> O O O B-CON I-CON I-CON O B-CON I-CON B-CON I-CON <eos>
以A为边集的导出子图
<start> O O O B-CON I-CON O B-CON I-CON I-CON I-CON <eos>
A在A的值,集合A在A下的像
<start> O O O O O O B-CON I-CON O O O O O O <eos>
集合A在A下的完全原像
<start> B-CON I-CON O O O O O B-CON I-CON I-CON I-CON <eos>
有向图A中A的出度
<start> B-CON I-CON B-CON O O O O B-ATT I-ATT <eos>
有向图A中A的人度
<start> B-CON I-CON B-CON O O O O B-CON I-ATT <eos>
有向图A中A的度数
<start> B-CON I-CON B-CON O O O O B-ATT O <eos>
无向图A中A的度数
<start> B-CON I-CON I-CON O O O O B-ATT O <eos>
A中顶点A关联的边集
<start> O O B-CON I-CON O O O O B-CON I-CON <eos>
有向图A的最大度
<start> B-CON I-CON B-CON O O B-ATT I-ATT I-ATT <eos>
有向图A的最大出度
<start> B-CON I-CON B-CON O O B-ATT I-ATT B-ATT I-ATT <eos>
有向图A的最大人度
<start> B-CON I-CON B-CON O O B-ATT I-ATT B-ATT I-ATT <eos>
有向图A的最小度
<start> B-CON I-CON B-CON O O B-ATT I-ATT I-ATT <eos>
有向图A的最小出度
<start> B-CON I-CON B-CON O O B-ATT I-ATT B-ATT I-ATT <eos>
有向图A的最小人度
<start> B-CON I-CON B-CON O O B-ATT I-ATT B-ATT I-ATT <eos>
A阶实矩阵的集合
<start> B-CON I-CON I-CON I-CON I-CON O B-CON I-CON <eos>
集合A的特征函数
<start> B-CON I-CON O O B-CON I-CON I-CON I-CON <eos>
A与A模A相等(同余)
<start> O O O O O O I-REL O O O O <eos>
A与A模A不相等(不同余)
<start> O O O O O O B-REL I-REL O O O O O <eos>
A或A元集的A组合数,二项式系数
<start> O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON <eos>
的全排列数,多项式系数
<start> O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON I-CON <eos>
这些公式将在后面求解计数问题中用到.下面讨论生成函数.
<start> O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
定义13.6设序列A,构造形式幂级数
<start> O O O O O O O O O O O O O O O B-CON I-CON I-CON <eos>
称A为序列A的生成函数.
<start> O O O B-CON I-CON O O B-CON I-CON I-CON I-CON O <eos>
例如,A的生成函数为A,给定正整数A的生成函数为
<start> O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
生成函数与序列是一一对应的,我们经常使用生成函数做工具来求解序列的通项公式,而这些项恰好代表了某个组合计数问题的解.给定序列A或关于A的递推方程,如何求它的生成函数A呢?反之,给定生成函数A,如何求对应序列的通项公式A呢?请看下面的例子.
<start> B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O <eos>
例A求序列A的生成函数.
<start> O O O B-CON I-CON O O B-CON I-CON I-CON I-CON O <eos>
给定序列A的生成函数,求A.基本方法就是利用部分分式的待定系数法将原来的函数化成基本生成函数的表达式之和,然后利用这些基本生成函数的展开式求出A.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O I-CON O O O O O B-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O <eos>
例A已知A的生成函数为A,求A.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O <eos>
生成函数在组合问题中有着广泛的应用.可以用生成函数求解递推方程,特别是某些不适合使用公式法和迭代归纳法的方程,下面关于Catalan数A的递推方程就是一个例子.
<start> B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O O <eos>
例A求解递推方程
<start> O O O O B-CON I-CON I-CON I-CON <eos>
解设A的生成函数为A,两边平方得
<start> O O O O B-CON I-CON I-CON I-CON O O O O O O O O <eos>
这是一个关于A的一元二次方程,利用求根公式得到
<start> O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O I-CON I-CON O O <eos>
回顾例A关于栈输出结果的计数实例,通过使用非降路径的模型,得到A个元素的栈的不同输出的个数是A,这个数恰好是第A个Catalan数.下面使用生成函数的方法求解这个问题.
<start> O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON O B-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O <eos>
考虑字符序列A.当某个字符A进栈时,在A前面记录一个左括号(;当A出栈时在A后面记录一个右括号).在这两个括号之间,除A之外的其他字符就是在A之后进栈并且在A之前出栈的字符.例如(1(2(3))(4))表示的过程是
<start> O O B-CON I-CON O I-CON O O O O O O I-CON O O B-CON O O O O O O O O O O O O O O O O O O B-OPR O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O <eos>
按照上述对应规则,栈的任何一种输出都对应了A个字符的进栈、出栈的一种操作序列,而这个操作序列又对应了A对括号的合理配对的方法数.显然,在A次进栈、A次出栈的操作序列中,从开始到中间的任何位置,进栈次数不可能少于出栈次数.这就意味着在括号配对的序列中,从左边算起到序列的任何位置,左括号的数目都不少于右括号的数目.
<start> O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O B-OPR O O B-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR O O O O O O O O O O O O B-OPR O O O O B-OPR O O O O O O O O O O O O O O O O O O O B-CON B-ATT O O O O O O O O B-OPR O O O O O O O O O O O O O O O O O O O <eos>
设A对括号的配对方法数是A,考虑与最左边的左括号配对的右括号的位置,在这对括号中间有A对其他括号,这A对括号有A种配对方法;而在这对括号后面有A对括号,其配对方法数是A.因此,对于给定的A,构成输出序列的方法数是A.由于A可能的取值是A.根据加法法则,可以得到递推方程
<start> O O O B-CON I-CON O O O O O O O O O O O O O O O O B-CON B-CON I-CON O O O B-CON B-CON I-OPR O O O O O O O B-CON I-CON O O O O O O O B-CON I-CON O O O O B-OPR I-CON O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
设序列A的生成函数是A,那么有A,从而得到
<start> O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O <eos>
求解关于A的一元二次方程,得到A.由于A时,上式的左边趋于0,因此取根为A,展开成幂级数得
<start> O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
因此,不同输出的个数就是右边展开式中A的系数,即A.
<start> O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O <eos>
通过这个例子可以看到,可以使用生成函数来求解关于A的递推方程,主要步骤如下.
<start> O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O <eos>
先设定序列A的生成函数A.
<start> O O O B-CON I-CON O O B-CON I-CON I-CON I-CON O O <eos>
利用递推方程的依赖关系导出关于生成函数A的方程(可以是一次方程、二次方程、二元一次方程组、微分方程等不同的形式).
<start> O O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O I-CON O I-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O O O <eos>
通过求解方程得到A的函数表达式.
<start> O O O O O O O O O O B-CON I-CON O O O O <eos>
将A展开成幂级数,其中A项的系数就是A.
<start> O O O O O B-CON I-CON I-CON O O O O O O B-CON I-CON O O O O <eos>
生成函数除了上述应用之外,还可以用来计算多重集的A组合数.
<start> B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O I-CON I-CON O <eos>
是多重集,A的一个A组合就是一个子多重集A,其中A表示在这个A组合中含有元素A的个数.因此A是非负整数,A,并且所有的A之和应该等于A.于是得到不定方程
<start> O B-CON I-CON I-CON O O O O O O B-OPR I-OPR O O O O B-CON B-CON I-CON I-CON O O O O O O O O O O O O I-OPR O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O I-CON <eos>
这就建立了A的A组合与上述不定方程的解之间的一一对应关系.考虑函数
<start> O O O O O O O O O O O O O O O O O O O O O O O I-REL B-REL I-REL I-REL O O O O B-CON I-CON <eos>
右边展开式中的每个项,恰好由A个因式A相乘构成,因此具有下述形式:A.展开式中A的系数,恰好是上述不定方程的解的个数,也就是多重集A的A组合数.
<start> O O O O O O O O O B-CON O O O O O O O O O O B-OPR O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON I-CON O <eos>
从上面的分析可以看到,利用生成函数可以求不定方程的解的个数.下面对不定方程的解的计数问题进一步加以分析.考虑不定方程
<start> O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON O I-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON <eos>
根据定理A,解的个数是A,下面通过生成函数的方法求解这个问题.类似于上面的分析,生成函数为
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
考虑对变量取值存在限制情况下的不定方程
<start> O O O B-CON I-CON O O O O O O O O O O O O O I-CON <eos>
这时没有一般的公式,生成函数是
<start> O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
那么也可以使用生成函数的方法求解,对应的生成函数是
<start> O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
最后需要说明的是,在不定方程既存在限制条件,同时系数也不全为1的情况下,也可以参照上面的方法写出对应的生成函数.请读者思考这种生成函数的形式.
<start> O O O O O O O O O O O O O I-CON O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O O <eos>
下面给出一个用生成函数求解实际问题的例子.
<start> O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O <eos>
例A设A为自然数,求平面上由直线A与两个坐标轴所围成的直角三角形内(包括边上)的整点个数,其中整点表示横、纵坐标都是整数的点.
<start> O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
解对于A,直线A上的整点个数就是不定方程A的非负整数解的个数A,设关于A的生成函数为A,则
<start> O O O O O O O O O O O O O O O O O O I-CON I-CON O O B-CON I-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O <eos>
对A求和就得到三角形中的全体整点个数
<start> O O O O O O O B-CON I-CON I-CON O O O O B-CON I-CON O O <eos>
上一节已经看到生成函数在组合计数问题中的广泛应用,本节将进一步引人指数型生成函数,并讨论它在有序计数中的应用.
<start> O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O O O <eos>
定义A设A为序列,称
<start> O O O O O O B-CON I-CON O O <eos>
为A的指数生成函数.
<start> O O O B-CON I-CON I-CON I-CON I-CON I-CON O <eos>
例A给定正整数A,则A的指数生成函数为
<start> O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O <eos>
从这个方程不难看出,A依赖于A等所有的项,这种递推方程也称为全部历史递推方程.求解过程在例A中给出.
<start> O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O <eos>
例A求解关于快速排序算法平均复杂度A的递推方程.
<start> O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O I-CON I-CON O O B-CON I-CON I-CON I-CON O <eos>
解先使用差消法将原方程化简成一阶的方程.由原方程得到
<start> O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O <eos>
上面公式中的A是某个常数,求和使用了积分作为近似结果,请见图13.2.根据积分有
<start> O O O O O O O O O O O O O O O O O O B-OPR I-CON O O B-OPR I-OPR O O O O O O O O O O O O O B-CON I-CON O <eos>
因此得到原递推方程的解A.
<start> O O O O O B-CON I-CON I-CON I-CON O O O O <eos>
如上面的例子所示,许多递推方程不能求出精确的解,但是可以估计出函数的阶,这对于算法分析工作是有意义的.
<start> O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O B-CON I-CON O O O O O O O O O O <eos>
用递归树的模型可以说明上述迭代的思想.下面以二分归并排序算法的递推方程
<start> O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O B-CON I-CON I-CON I-CON <eos>
为例来构造递归树.递归树是一棵带权的二叉树,每个结点都有权.初始的递归树只有一个结点,它的权标记为A.然后不断进行迭代,直到树中不再含有权为函数的结点为止.迭代规则就是把递归树中权为函数的结点,如A等,用和这个函数相等的递推方程右部的子树来代替.这种子树只有两层,树根标记为方程右部除了函数之外的剩余表达式,每一片树叶则代表方程右部的一个函数项.例如第一步迭代,树中唯一的结点(第0层)A可以用根是A、两片树叶都是A的子树来代替.代替以后递归树由一层变成了两层.第二步迭代,应该用根为A、两片树叶都是A的子树来代替树中权为A的叶结点(第1层),代替后递归树就变成了3层.照这样进行下去,每迭代一次,递归树就增加一层,直到树叶都变成初值1为止.整个迭代过程与递归树的生成过程完全对应起来,正如图A所示.不难看出,在整个迭代过程中,递归树中全部结点的权之和不变,总是等于函数A.
<start> O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O B-ATT O B-CON I-CON B-CON O O O O O O O B-ATT O O O O B-CON I-CON I-CON O O O O O O O O O B-ATT O O O O O O O O O O O O O O O O B-CON O O O O O B-ATT O B-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON O B-ATT O B-CON I-CON O O O O O O O O O O O O B-CON I-CON O O O B-CON I-CON I-CON I-CON O O O O I-CON O O O O O O O <eos>
为了计算最终的递归树中所有结点的权之和,可以采用分层计算的方法.递归树有A层,各层结点的值之和分别为
<start> O O O O O O O B-CON I-CON I-CON O O O O O O B-ATT O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O <eos>
这个结果与前面用换元法计算的结果完全一致.
<start> O O O O O O O O B-OPR I-OPR I-OPR O O O O O O O O O O <eos>
递归算法是一种常用的算法,它的特点就是在算法中要递归调用自己.递归算法的分析中经常用到递推方程.分治策略是算法设计中的一种重要技术,它的主要思想是将原问题分解成规模更小的子问题,分别求解每个子问题,然后将子问题的解进行综合,从而得到原问题的解.设A为正整数,A为问题的输人规模,A为子问题的输人规模,A为子问题个数,A为将原问题分解成子问题以及将子问题的解综合得到原问题解的代价.例如,对A个正整数进行二分归并排序,那么A.一般情况下有
<start> B-CON I-CON I-CON I-CON O O O O O O O I-CON O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O I-CON O O O O O O O O O O I-CON O O O O O O O O O I-CON O O O O O O I-CON O O O O O O O O O O O O O O O O O O O O O <eos>
这些结果可以直接用于求解递推方程,例如二分归并排序的递推方程是
<start> O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O <eos>
其中A,根据上面的结果有A.
<start> O O O O O O O O O O O O O O <eos>
这些公式在递归算法的分析中经常会用到.下面给出一个实际应用的例子.
<start> O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O <eos>
例A设A为正整数且恰好是2的幂.下述算法Power是计算A的算法.
<start> O O O O O B-CON I-CON I-CON O O O O O O B-OPR O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O <eos>
针对这个算法考虑下面的问题.
<start> O O O O O O O O O O O O O O <eos>
（1）设A为实数,如果以两个数的相乘做基本运算,估计算法Power最坏情况下的时间复杂度.
<start> O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR O O O O O O O O O O O O I-CON O <eos>
(2)在Fibonacci数列A等的前面加上一个0,得到数列A,证明
<start> O O O O B-CON I-CON I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-CON B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O <eos>
(3)对于A为正整数,如何利用上述公式和算法Power计算A?把这个算法与直接利用递推公式计算A的算法进行比较,哪个效率更高?为什么?解(1)令A表示Power算法最坏情况下的计算复杂度,则A满足
<start> O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O B-CON I-CON I-CON O O O O O <eos>
根据(13.5)式得到A.
<start> O O O O O O O O O O O O O <eos>
只要利用Power算法计算出上述二阶矩阵的A次幂,就得到了A.两个二阶矩阵相乘需要8次乘法,使用Power算法完成整个计算需要A次乘法.而按照递归定义直接从初值计算A需要A次加法.对于比较大的A,显然A比起A的值要小很多,因此使用Power算法效率更高.
<start> O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O B-CON I-CON I-CON I-CON O O O B-OPR O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-OPR I-OPR I-OPR I-OPR I-OPR I-OPR I-OPR O O O O <eos>
生成函数是与序列相对应的形式幂级数,利用生成函数可以直接求解组合计数序列.为了处理幂级数的需要,先引人牛顿二项式系数A.
<start> B-CON I-CON I-CON I-CON O O O O O O O O B-CON I-CON B-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O O <eos>
称为牛顿二项式系数.
<start> O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O <eos>
表面上看,这个符号与二项式系数的符号一样,但是在这里它只是一个形式符号,不具有任何组合意义.当A为自然数时,牛顿二项式系数就成为普通的二项式系数,这时才与集合的组合计数联系到一起.
<start> O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O <eos>
和二项式定理对应,也有一个牛顿二项式定理,它恰好表示了某些函数的幂级数.
<start> O B-CON I-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O O O O O O O B-CON I-CON O B-CON I-CON I-CON O <eos>
定理13.6(牛顿二项式定理)设A为实数,则对一切实数A,有
<start> O O O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O O B-CON I-CON O O O O O O I-CON O O O <eos>
这个定理的证明可以在一般的数学分析书中找到,这里不再赘述.当A时,这个定理就变成二项式定理(定理12.4);若A,其中A为正整数,那么
<start> O O O O O O O O O O O O O B-CON O O O O O O O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O <eos>
这时令A,牛顿二项式定理就变成
<start> O O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O <eos>
在上面式子中用A代替A,就得到
<start> O O O O O O O O O O O O O O O <eos>
当A时,牛顿二项式定理就变成
<start> O O O O B-CON I-CON I-CON I-CON I-CON I-CON I-CON O O O <eos>
(2)A,有A是A和A之中较大的数.
<start> O O O O O O O O O O O O O O O O O O <eos>
(1)试列出A中的所有函数.
<start> O O O O O O O O O O O B-CON I-CON O <eos>
（1）A对普通乘法封闭.
<start> O O O O O O O B-OPR I-OPR I-OPR I-OPR O <eos>
判断下列集合对所给的二元运算是否封闭.
<start> O O O O B-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O O <eos>
（1）整数集合A和普通的减法运算.
<start> O O O B-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O <eos>
（2）非零整数集合A和普通的除法运算.
<start> O O O B-CON I-CON I-CON I-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O <eos>
（3）全体A实矩阵集合A和矩阵加法及乘法运算,其中A.
<start> O O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O O <eos>
（4）全体A实可逆矩阵集合关于矩阵加法和乘法运算,其中A.
<start> O O O O O O O B-CON I-CON B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O O <eos>
(5)正实数集合A和。运算,其中。运算定义为
<start> O O O O O I-CON B-CON I-CON O O O O O O O O O O O O O O <eos>
(6)A关于普通的加法和乘法运算.
<start> O O O O O O O O O B-OPR I-OPR O B-OPR I-OPR I-OPR I-OPR O <eos>
(8)A关于普通的加法和乘法运算.
<start> O O O O O O O O O B-OPR I-OPR O B-OPR I-OPR I-OPR I-OPR O <eos>
（9）A关于並通的加法和乘法运算.
<start> O O O O O O B-OPR I-OPR O B-OPR I-OPR O B-OPR I-OPR I-OPR I-OPR O <eos>
(10)A关于普通的加法和乘法运算.
<start> O O O O O O O O O O B-OPR I-OPR O B-CON I-CON I-OPR I-OPR O <eos>
对于习题4中封闭的二元运算判断是否适合交换律、结合律和分配律.
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON O O I-CON O O B-CON I-CON I-CON O <eos>
对习题4中封闭的二元运算找出它的单位元、零元和所有可逆元素的逆元.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON I-CON O B-CON I-CON O O O B-CON I-CON I-CON I-CON O B-CON I-CON O <eos>
设*为A上的二元运算,A,即A和A之中较小的数.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O <eos>
(2)*在A上是否满足交换律、结合律和幂等律?
<start> O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O <eos>
(3)求*运算的单位元、皊元及A中所有可逆元素的逆元.
<start> O O O O O O O O B-CON I-CON I-CON O B-CON O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON O <eos>
A为有理数集,*为A上的二元运算,A有
<start> O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O <eos>
（1）*运算在A上是否可交换、可结合?是否满足奄等律?
<start> O O O O O O O O O O O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O O O O O B-CON I-CON O O <eos>
（2）*运算是否有单位元、零元?如果有,请指出,并求A中所有可逆元素的逆元.
<start> O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON O <eos>
A为实数集,定义以下6个函数A有
<start> O O B-CON I-CON I-CON O O O O O O O B-CON I-CON O O <eos>
（1）指出哪些函数是A的二互运算.
<start> O O O O O O O B-CON I-CON O O O B-CON I-CON I-CON I-CON O <eos>
(2)对所有A上的二元运算说明是否可交换、可结合,是否满足矩等律?
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O B-ATT I-ATT I-ATT O B-ATT I-ATT I-ATT O O O O O O O O O <eos>
(3)求所有A上二元运算的单位元、零元以及每一个可逆元索的逆元.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON O <eos>
令A上有4个二元运算:A和口,分别由表A确定.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O <eos>
（1）这4个运算中哪些运算满足交换律、结合律、幂等律?
<start> O O O O O O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O B-CON I-CON I-CON O <eos>
(2)求每个运算的单位元、零元及所有可逆元素的逆元.
<start> O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON O O O B-CON I-CON I-CON I-CON O B-CON I-CON O <eos>
设A为三元集,A上可以定义多少个不同的二元运算和一元运算?其中有多少个二元运算是可交换的?有多少个二元运算满足幂等律?有多少个二元运算既不是可交换的,又不满足幂等律?推广到A元集又有什么结果?
<start> O O O B-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O I-ATT I-ATT O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O O O O I-ATT O O O O O O B-CON I-CON I-CON O O O O B-CON O O O O O O O O O <eos>
设A,问下面定义的运算能否与A构成代数系统A,*A.如果能构成代数系统则说明A运算是否满足交换律、结合律,并求A运算的单位元和零元.
<start> O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O B-CON I-CON O <eos>
(3)A大于等于A和A的最小整数.
<start> O O O O B-REL I-REL I-REL I-REL O O O O B-REL I-REL O I-REL O <eos>
图A给出了6个偏序集的哈斯图.判断其中哪些是格.如果不是格,说明理由.
<start> O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O O O O O B-CON O O O O O B-CON O O O O O O <eos>
图A14.下列各集合对于整除关系都构成偏序集,判断哪些偏㡱集是格.\\
<start> O O O O O O O O B-CON I-CON O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O B-CON I-CON I-CON O O O O O <eos>
针对图A中的每个格,如果格中的元素存在补元,则求出这些补元.
<start> O O B-CON O O O O O B-CON O O O B-CON O O B-CON I-CON O O B-ATT I-ATT O O O O O O B-ATT I-ATT O <eos>
说明图A中的每个格是否为分配格、有补格和布尔格,并说明理由.
<start> O O O O O O O O B-CON O O O B-CON I-CON I-CON O O B-CON I-CON O B-CON I-CON I-CON O O O O O O O <eos>
对以下各小题给定的集合和运算判断它们是哪一类代数系统（半群、独异点、群、环、域、格、布尔代数），并说明理由.
<start> O O O O O O O O O B-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON I-CON O B-CON B-CON O B-CON I-CON I-CON O B-CON O B-CON O B-CON O O O B-CON I-CON I-CON I-CON O O O O O O O O <eos>
(1)A,*为普通乘法.
<start> O O O O O O O O O B-OPR I-OPR O <eos>
(3)A,*为普通乘法.
<start> O O O O O O O O O B-OPR I-OPR O <eos>
(4)A和A分别表示求A和A的最小公倍数和最大公约数.
<start> O O O O O O O O O O O O O O O B-ATT I-ATT I-ATT I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O <eos>
(5)A表示模2加法，。为模2乘法.
<start> O O O O O O B-OPR I-OPR I-OPR I-OPR O O O B-OPR I-OPR I-OPR I-OPR O <eos>
设A是布尔代数,在A上定义二元运算A有
<start> O O O B-CON I-CON I-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O <eos>
问A能否构成代数系统.如果能，指出是哪一种代数系统.为什么?
<start> O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O <eos>
A,其中A为非零实数集合,A为普通乘法,判断下面的哪些函数是A的自同态,是否为单自同态、满自同态和自同构.计算A的同态像.\\
<start> O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O B-CON I-CON O O O B-REL I-REL I-REL O O O O O B-REL I-REL I-REL O B-REL I-REL I-REL I-REL O B-REL I-REL I-REL O O O O O B-CON I-CON I-CON O O O <eos>
A,其中A为整数集,A分别为普通加法与乘法,A与\&分别为模A加和模A乘法.令A.证明A为A到A的满同态映射.
<start> O O O O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON O B-CON I-CON O O O O O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O B-REL I-REL I-REL I-REL I-REL O <eos>
完美匹配14.1
<start> O O O O O O O O <eos>
*“4”表示该名词与术语条目的索引位置是第四章章首。类似表示不再一一说明。最大匹目
<start> O O O O O O O O I-CON O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON <eos>
旦词辖域收缩与扩张等值式
<start> O O B-ATT I-ATT O O O O O O O O <eos>
定义14.1设A为集合,函数A称为A上的二元运算,简称二元运算.函数A称为A上的一个一元运算,简称一元运算.
<start> O O O O O O O O O B-CON I-CON O B-CON I-CON O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O B-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O <eos>
如果A是A上的一元或二元运算,也可以称为A关于运算A封闭.这里封闭的含义是:A中的元素都可以参与这个运算,且运算后的结果仍属于A.
<start> O O O O O O O B-CON I-CON I-CON B-CON I-CON I-CON I-CON O O O O O O O O O O O O O I-OPR O O O B-OPR I-OPR O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O <eos>
下面是一些二元运算和一元运算的例子.
<start> O O O O O B-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON O O O O <eos>
例A(1)自然数集合A上的加法和乘法是A上的二元运算,但减法和除法不是.
<start> O O O O O B-CON I-CON I-CON B-CON I-CON O O O B-CON I-CON O B-CON I-CON O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON O B-CON I-CON O O O <eos>
(2)整数集合A上的加法、减法和乘法都是A上的二元运算,而除法不是.求一个数的相反数是整数集合A,有理数集合A和实数集合A上的一元运算.
<start> O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON O B-CON I-CON O B-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON B-CON I-CON O O B-CON I-CON B-CON I-CON O O O B-CON I-CON I-CON I-CON O <eos>
(3)非零实数集A上的乘法和除法都是A上的二元运算,而加法和减法不是,因为两个非零实数相加或相减可能得0.求一个数A的倒数A是A上的一元运算.
<start> O O O B-CON I-CON I-CON I-CON I-CON O O O B-CON I-CON O B-CON I-CON O O O O O B-CON I-CON I-CON I-CON O O B-CON I-CON O B-CON I-CON O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON O O O O O B-CON I-CON I-CON I-CON O <eos>
(5)A为任意集合,则A为A的幂集A上的二元运算,这里A和A是初级并和初级交.绝对补运算是A上的一元运算.
<start> O O O O O O O B-CON I-CON O O O O O O B-CON I-CON O O O B-CON I-CON I-CON I-CON O O O O O O O O O B-OPR O O O B-OPR O O O O O O O O O O B-CON I-CON I-CON I-CON O <eos>
(6)A为集合,A为A上的所有函数的集合,则函数的复合运算。为A上的二元运算.求反函数运算不一定是A上的一元运算,因为只有双射函数才有反函数.
<start> O O O O O B-CON I-CON O O O O O O O O B-CON I-CON O B-CON I-CON O O B-CON I-CON O O O O O O O O O O B-CON I-CON I-CON I-CON O O B-CON B-CON I-CON O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O B-REL I-REL B-CON I-CON O O O B-CON I-CON O <eos>
通常用。,A,•等符号表示二元和一元运算,称为算符.设A是A上的二元运算,对任意的A,如果A与A的运算结果是A,即A,可用算符。简记为
<start> O O O O O O O O O O O O O B-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
对于有穷集A上的一元和二元运算,可以用运算表表示.表A和表A是一元运算表和二元运算表的一般形式,其中A是A中的元素,。为算符.
<start> O O B-CON I-CON I-CON O O O B-CON I-CON O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O B-CON I-CON I-CON I-CON I-CON O B-CON I-CON I-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON O O O O O O <eos>
例A设A,给出A上的运算和A的运算表,其中全集为A.
<start> O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O B-CON I-CON O O O <eos>
解所求的运算表见表A和表14.4.
<start> O O O O O O O O O O O O O O O O O <eos>
下面讨论二元运算的主要性质.
<start> O O O O B-CON I-CON I-CON I-CON O O O O O O <eos>
定义A设。为A上的二元运算.如果对于任意的A都有
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O <eos>
则称运算。在A上是可交换的,或者说运算。在A上适合交换律.
<start> O O O O O O O O O O B-ATT I-ATT O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
定义A设。为A上的二元运算,如果对于任意的A都有
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O <eos>
则称运算。在A上是可结合的,或者说运算。在A上适合结合律.
<start> O O O O O O O O O O B-OPR I-ATT O O O O O O O O O O O O O B-CON I-CON I-CON O <eos>
普通的加法和乘法在自然数集A、整数集A、有理数集A、实数集A和复数集A上都是可结合的.矩阵的加法和乘法也是可结合的,集合的A和A运算也是可结合的,还有函数的复合运算也是可结合的.
<start> O O O B-CON I-CON O B-CON I-CON O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O O B-CON I-CON I-CON I-CON O O B-CON I-CON I-CON O O B-CON I-CON I-CON O O O O O B-ATT I-ATT O O B-CON I-CON O B-CON I-CON O B-CON I-CON O O B-ATT I-ATT I-ATT O O B-CON I-CON O O O O O O O O B-ATT I-ATT I-ATT O O O O B-CON I-CON O B-OPR I-OPR I-OPR I-OPR O O O I-ATT I-ATT O O <eos>
对于适合结合律的二元运算,在一个只由该运算的算符连接起来的表达式中,可以把所有表示运算顺序的括号去掉.
<start> O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O B-CON I-CON O O O O O O O O O O O O O O O O O O O O O O O O O O O <eos>
定义A设。为A上的二元运算,如果对于任意的A都有
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O <eos>
则称该运算。适合幂等律.
<start> O O O O O O O O B-CON I-CON I-CON O <eos>
如果A中的某些A满足A,则称A为运算。的共等元.易见如果A上的二元运算。适合幂等律,则A中的所有元素都是幂等元.
<start> O O O O O O O O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON O O O O O O O B-CON I-CON O O B-CON I-CON I-CON O <eos>
集合的并和交运算适合幂等律,A运算和-运算一般不适合幂等律,但A是幂等元.普通数的加法和乘法不适合幂等律,但0是加法的幂等元,0和1是乘法的幂等元.
<start> B-CON I-CON O B-OPR O B-OPR O O O O B-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON O O O O B-CON I-CON I-CON O O O O O B-CON I-CON O B-CON I-CON O O O B-CON I-CON I-CON O O O O B-CON I-CON O B-CON I-CON I-CON O O O O O B-CON I-CON O B-CON I-CON I-CON O <eos>
以上性质都是对一个二元运算来说的.下面的分配律和吸收律是对两个二元运算来说的.
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O B-CON I-CON I-CON O O O O B-CON I-CON I-CON I-CON O O O O <eos>
定义A设。和A是A上的两个二元运算,如果对任意的A有
<start> O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O <eos>
则称运算A对。是可分配的,也称A对。适合分配律.
<start> O O O O O O O O O B-OPR I-OPR O O O O O O O O O B-CON I-CON I-CON O <eos>
定义A设。和A是A上两个可交换的二元运算,如果对于任意的A都有
<start> O O O O O O O O O O O O O O I-OPR O B-CON I-CON I-CON I-CON O O O O O O O O O O O <eos>
则称。和A适合吸收律.
<start> O O O O O O O B-CON I-CON I-CON O <eos>
例如,幂集A上的A和A运算满足吸收律.即A有
<start> O O O B-CON I-CON O O O O O O O O O O B-CON I-CON I-CON O O O O <eos>
下面讨论有关二元运算的一些特异元素.
<start> O O O O O O B-CON I-CON I-CON I-CON O O O B-CON I-CON I-CON I-CON O <eos>
定义A设。为A上的二元运算,如果存在A(或A)使得对任何A都有
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O O <eos>
则称A(或A)是A中关于。运算的一个左单位元(或右单位元).若A关于。运算既是左单位元又是右单位元,则称A为A上关于。运算的单位元.单位元也可以称作么元.
<start> O O O O O O O O O O O O O O O O O O B-CON B-CON I-CON I-CON O O B-CON B-CON I-CON I-CON O O O O O O O O O O O B-CON B-CON I-CON I-CON O O B-CON B-CON I-CON I-CON O O O O O O O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O <eos>
定义A设。为A上的二元运算,若存在元素A(或A使得对于任意的A有
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O B-CON I-CON O O O O O O O O O O O O O <eos>
则称A(或A)是A上关于。运算的左零元(或右零元).若A关于。运算既是左零元又是右零元,则称A为A上关于。运算的零元.
<start> O O O O O O O O O O O O O O O O B-CON B-CON I-CON O O B-CON B-CON I-CON O O O O O O O O O O O B-CON B-CON I-CON O O B-CON B-CON I-CON O O O O O O O O O O O O O B-CON I-CON O <eos>
可以证明单位元和零元如果存在,则是唯一的.
<start> O O O O B-CON I-CON I-CON O B-CON I-CON O O O O O O O O O O O <eos>
定义A设。为A上的二元运算,A为。运算的单位元,对于A,如果存在A(或AA)使得
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O B-CON I-CON I-CON O O O O O O O O O O O O O O O O O <eos>
则称A(或A)是A的左逆元(或右逆元).若A既是A的左逆元又是A的右逆元,则称A是A的逆元.如果A的逆元存在,则称A是可逆的.对于可结合的二元运算,可以证明逆元是唯一的.一般将可逆元素A的逆元记作A.
<start> O O O O O O O O O O B-CON B-CON I-CON O O B-CON I-CON I-CON O O O O O O O O B-CON B-CON I-CON O O O O B-CON B-CON I-CON O O O O O O O B-CON I-CON O O O O O B-CON I-CON O O O O O O O O O O O O O O I-CON I-CON I-CON B-CON I-CON I-CON I-CON O O O O O B-CON I-CON O O O O O O O O B-CON I-CON B-CON I-CON O O B-CON I-CON O O O O <eos>
最后再给出一条关于二元运算的算律一一消去律.
<start> O O O O O O O O O B-CON I-CON I-CON I-CON O O O O I-CON B-CON I-CON I-CON O <eos>
定义14.10设。为A上的二元运算,如果对于任意的A,满足以下条件:
<start> O O O O O O O O O O O O O B-CON I-CON I-CON I-CON O O O O O O O O O O O O O O O O O <eos>
那么称。运算适合消去律,其中(1)称作左消去律,(2)称作右消去律.
<start> O O O O O O O O B-CON I-CON I-CON O O O O O O O O B-CON B-CON I-CON I-CON O O O O O O B-CON B-CON I-CON I-CON O <eos>
注意被消去的A不能是运算的零元A.
<start> O O O O O O O O O O B-CON I-CON O B-CON I-CON O O <eos>
整数集合上的加法和乘法都适合消去律.幂集A上的并和交运算一般不满足消去律.
<start> B-CON I-CON I-CON I-CON O O B-OPR I-OPR O B-OPR I-OPR O O O B-CON I-CON I-CON O B-CON I-CON O O O B-OPR O B-OPR I-OPR I-OPR O O O O O B-CON I-CON I-CON O <eos>
